// Package auvik provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/stellaraf/go-auvik version (devel) DO NOT EDIT.
package auvik

import (
	"encoding/json"

	"github.com/deepmap/oapi-codegen/pkg/runtime"
)

const (
	ApiKeyScopes = "ApiKey.Scopes"
)

// Defines values for DeviceTypeSchema.
const (
	DeviceTypeSchemaAccessPoint        DeviceTypeSchema = "accessPoint"
	DeviceTypeSchemaAirConditioner     DeviceTypeSchema = "airConditioner"
	DeviceTypeSchemaAlarm              DeviceTypeSchema = "alarm"
	DeviceTypeSchemaAudioVisual        DeviceTypeSchema = "audioVisual"
	DeviceTypeSchemaBackhaul           DeviceTypeSchema = "backhaul"
	DeviceTypeSchemaBackupDevice       DeviceTypeSchema = "backupDevice"
	DeviceTypeSchemaBridge             DeviceTypeSchema = "bridge"
	DeviceTypeSchemaBuildingManagement DeviceTypeSchema = "buildingManagement"
	DeviceTypeSchemaCamera             DeviceTypeSchema = "camera"
	DeviceTypeSchemaChassis            DeviceTypeSchema = "chassis"
	DeviceTypeSchemaController         DeviceTypeSchema = "controller"
	DeviceTypeSchemaCopier             DeviceTypeSchema = "copier"
	DeviceTypeSchemaFirewall           DeviceTypeSchema = "firewall"
	DeviceTypeSchemaHandheld           DeviceTypeSchema = "handheld"
	DeviceTypeSchemaHub                DeviceTypeSchema = "hub"
	DeviceTypeSchemaHypervisor         DeviceTypeSchema = "hypervisor"
	DeviceTypeSchemaInternetOfThings   DeviceTypeSchema = "internetOfThings"
	DeviceTypeSchemaIpPhone            DeviceTypeSchema = "ipPhone"
	DeviceTypeSchemaIpmi               DeviceTypeSchema = "ipmi"
	DeviceTypeSchemaL3Switch           DeviceTypeSchema = "l3Switch"
	DeviceTypeSchemaLightingDevice     DeviceTypeSchema = "lightingDevice"
	DeviceTypeSchemaLoadBalancer       DeviceTypeSchema = "loadBalancer"
	DeviceTypeSchemaModem              DeviceTypeSchema = "modem"
	DeviceTypeSchemaModule             DeviceTypeSchema = "module"
	DeviceTypeSchemaMultimedia         DeviceTypeSchema = "multimedia"
	DeviceTypeSchemaPacketProcessor    DeviceTypeSchema = "packetProcessor"
	DeviceTypeSchemaPdu                DeviceTypeSchema = "pdu"
	DeviceTypeSchemaPhone              DeviceTypeSchema = "phone"
	DeviceTypeSchemaPrinter            DeviceTypeSchema = "printer"
	DeviceTypeSchemaRouter             DeviceTypeSchema = "router"
	DeviceTypeSchemaSecurityAppliance  DeviceTypeSchema = "securityAppliance"
	DeviceTypeSchemaServer             DeviceTypeSchema = "server"
	DeviceTypeSchemaStack              DeviceTypeSchema = "stack"
	DeviceTypeSchemaStorage            DeviceTypeSchema = "storage"
	DeviceTypeSchemaSwitch             DeviceTypeSchema = "switch"
	DeviceTypeSchemaTablet             DeviceTypeSchema = "tablet"
	DeviceTypeSchemaTelecommunications DeviceTypeSchema = "telecommunications"
	DeviceTypeSchemaThinAccessPoint    DeviceTypeSchema = "thinAccessPoint"
	DeviceTypeSchemaThinClient         DeviceTypeSchema = "thinClient"
	DeviceTypeSchemaTimeClock          DeviceTypeSchema = "timeClock"
	DeviceTypeSchemaUnknown            DeviceTypeSchema = "unknown"
	DeviceTypeSchemaUps                DeviceTypeSchema = "ups"
	DeviceTypeSchemaUtm                DeviceTypeSchema = "utm"
	DeviceTypeSchemaVirtualAppliance   DeviceTypeSchema = "virtualAppliance"
	DeviceTypeSchemaVirtualMachine     DeviceTypeSchema = "virtualMachine"
	DeviceTypeSchemaVoipSwitch         DeviceTypeSchema = "voipSwitch"
	DeviceTypeSchemaWorkstation        DeviceTypeSchema = "workstation"
)

// Defines values for AccessPointAttributesDeviceType.
const (
	AccessPointAttributesDeviceTypeAccessPoint AccessPointAttributesDeviceType = "accessPoint"
)

// Defines values for AccessPointRelationshipsWirelessClientsAttributesDeviceType.
const (
	AccessPointRelationshipsWirelessClientsAttributesDeviceTypeWorkstation AccessPointRelationshipsWirelessClientsAttributesDeviceType = "workstation"
)

// Defines values for AccessPointRelationshipsWirelessClientsType.
const (
	AccessPointRelationshipsWirelessClientsTypeDevice AccessPointRelationshipsWirelessClientsType = "device"
)

// Defines values for AccessPointType.
const (
	AccessPointTypeDeviceExtendedDetail AccessPointType = "deviceExtendedDetail"
)

// Defines values for AlertAttributesSeverity.
const (
	AlertAttributesSeverityCritical  AlertAttributesSeverity = "critical"
	AlertAttributesSeverityEmergency AlertAttributesSeverity = "emergency"
	AlertAttributesSeverityInfo      AlertAttributesSeverity = "info"
	AlertAttributesSeverityUnknown   AlertAttributesSeverity = "unknown"
	AlertAttributesSeverityWarning   AlertAttributesSeverity = "warning"
)

// Defines values for AlertAttributesStatus.
const (
	AlertAttributesStatusCreated  AlertAttributesStatus = "created"
	AlertAttributesStatusPaused   AlertAttributesStatus = "paused"
	AlertAttributesStatusResolved AlertAttributesStatus = "resolved"
	AlertAttributesStatusUnpaused AlertAttributesStatus = "unpaused"
)

// Defines values for AlertAttributesExternalTicketSystem.
const (
	AllUserEmail         AlertAttributesExternalTicketSystem = "All_User_Email"
	Autotask             AlertAttributesExternalTicketSystem = "Autotask"
	ConnectwiseCloud     AlertAttributesExternalTicketSystem = "Connectwise_Cloud"
	ConnectwisePremise   AlertAttributesExternalTicketSystem = "Connectwise_Premise"
	ConnectwiseRestCloud AlertAttributesExternalTicketSystem = "Connectwise_rest_Cloud"
	Continum             AlertAttributesExternalTicketSystem = "Continum"
	CustomEmail          AlertAttributesExternalTicketSystem = "Custom_Email"
	CustomEmailGroup     AlertAttributesExternalTicketSystem = "Custom_Email_Group"
	Freshdesk            AlertAttributesExternalTicketSystem = "Freshdesk"
	Map                  AlertAttributesExternalTicketSystem = "Map"
	MicrosoftTeams       AlertAttributesExternalTicketSystem = "Microsoft_Teams"
	Servicenow           AlertAttributesExternalTicketSystem = "Servicenow"
	SingleUserEmail      AlertAttributesExternalTicketSystem = "Single_User_Email"
	Slack                AlertAttributesExternalTicketSystem = "Slack"
	Webhook              AlertAttributesExternalTicketSystem = "Webhook"
)

// Defines values for AlertRelationshipsEntityDataType.
const (
	AlertRelationshipsEntityDataTypeDevice    AlertRelationshipsEntityDataType = "device"
	AlertRelationshipsEntityDataTypeInterface AlertRelationshipsEntityDataType = "interface"
	AlertRelationshipsEntityDataTypeNetwork   AlertRelationshipsEntityDataType = "network"
)

// Defines values for AlertRelationshipsRelatedAlertDataType.
const (
	AlertRelationshipsRelatedAlertDataTypeAlert AlertRelationshipsRelatedAlertDataType = "alert"
)

// Defines values for AlertsResourceObjectType.
const (
	AlertsResourceObjectTypeAlert AlertsResourceObjectType = "alert"
)

// Defines values for AuditAttributesAction.
const (
	AuditAttributesActionCreate  AuditAttributesAction = "create"
	AuditAttributesActionUnknown AuditAttributesAction = "unknown"
)

// Defines values for AuditAttributesCategory.
const (
	AuditAttributesCategoryRemoteBrowser AuditAttributesCategory = "remoteBrowser"
	AuditAttributesCategoryTerminal      AuditAttributesCategory = "terminal"
	AuditAttributesCategoryTunnel        AuditAttributesCategory = "tunnel"
	AuditAttributesCategoryUnknown       AuditAttributesCategory = "unknown"
)

// Defines values for AuditAttributesDirection.
const (
	AuditAttributesDirectionInbound  AuditAttributesDirection = "inbound"
	AuditAttributesDirectionOutbound AuditAttributesDirection = "outbound"
	AuditAttributesDirectionUnknown  AuditAttributesDirection = "unknown"
)

// Defines values for AuditAttributesStatus.
const (
	AuditAttributesStatusClosed    AuditAttributesStatus = "closed"
	AuditAttributesStatusCreated   AuditAttributesStatus = "created"
	AuditAttributesStatusFailed    AuditAttributesStatus = "failed"
	AuditAttributesStatusInitiated AuditAttributesStatus = "initiated"
	AuditAttributesStatusUnknown   AuditAttributesStatus = "unknown"
)

// Defines values for AuditRelationshipsDeviceDataType.
const (
	AuditRelationshipsDeviceDataTypeDevice AuditRelationshipsDeviceDataType = "device"
)

// Defines values for AuditsResourceObjectType.
const (
	EntityAudit AuditsResourceObjectType = "entityAudit"
)

// Defines values for ClientUsageRelationshipsClientsDataType.
const (
	ClientUsageRelationshipsClientsDataTypeClientUsage ClientUsageRelationshipsClientsDataType = "clientUsage"
)

// Defines values for ClientUsageRelationshipsDevicesDataType.
const (
	ClientUsageRelationshipsDevicesDataTypeDeviceUsage ClientUsageRelationshipsDevicesDataType = "deviceUsage"
)

// Defines values for ClientUsageResourceObjectType.
const (
	ClientUsageResourceObjectTypeClientUsage ClientUsageResourceObjectType = "clientUsage"
)

// Defines values for ComponentAttributesComponentType.
const (
	ComponentAttributesComponentTypeCpu               ComponentAttributesComponentType = "cpu"
	ComponentAttributesComponentTypeDisk              ComponentAttributesComponentType = "disk"
	ComponentAttributesComponentTypeFan               ComponentAttributesComponentType = "fan"
	ComponentAttributesComponentTypeMemory            ComponentAttributesComponentType = "memory"
	ComponentAttributesComponentTypePowerSupply       ComponentAttributesComponentType = "powerSupply"
	ComponentAttributesComponentTypeStorageController ComponentAttributesComponentType = "storageController"
	ComponentAttributesComponentTypeSystemBoard       ComponentAttributesComponentType = "systemBoard"
)

// Defines values for ComponentAttributesCurrentStatus.
const (
	ComponentAttributesCurrentStatusDegraded ComponentAttributesCurrentStatus = "degraded"
	ComponentAttributesCurrentStatusFailed   ComponentAttributesCurrentStatus = "failed"
	ComponentAttributesCurrentStatusOk       ComponentAttributesCurrentStatus = "ok"
)

// Defines values for ComponentRelationshipsParentDeviceDataType.
const (
	ComponentRelationshipsParentDeviceDataTypeDevice ComponentRelationshipsParentDeviceDataType = "device"
)

// Defines values for ComponentStatisticsResourceObjectType.
const (
	ComponentStatistics ComponentStatisticsResourceObjectType = "componentStatistics"
)

// Defines values for ComponentsResourceObjectType.
const (
	ComponentsResourceObjectTypeComponent ComponentsResourceObjectType = "component"
)

// Defines values for ConfigResourceObjectType.
const (
	ConfigResourceObjectTypeConfiguration ConfigResourceObjectType = "configuration"
)

// Defines values for ControllerAttributesDeviceType.
const (
	ControllerAttributesDeviceTypeController ControllerAttributesDeviceType = "controller"
)

// Defines values for ControllerType.
const (
	ControllerTypeDeviceExtendedDetail ControllerType = "deviceExtendedDetail"
)

// Defines values for DeviceAttributesDeviceType.
const (
	DeviceAttributesDeviceTypeAccessPoint        DeviceAttributesDeviceType = "accessPoint"
	DeviceAttributesDeviceTypeAirConditioner     DeviceAttributesDeviceType = "airConditioner"
	DeviceAttributesDeviceTypeAlarm              DeviceAttributesDeviceType = "alarm"
	DeviceAttributesDeviceTypeAudioVisual        DeviceAttributesDeviceType = "audioVisual"
	DeviceAttributesDeviceTypeBackhaul           DeviceAttributesDeviceType = "backhaul"
	DeviceAttributesDeviceTypeBackupDevice       DeviceAttributesDeviceType = "backupDevice"
	DeviceAttributesDeviceTypeBridge             DeviceAttributesDeviceType = "bridge"
	DeviceAttributesDeviceTypeBuildingManagement DeviceAttributesDeviceType = "buildingManagement"
	DeviceAttributesDeviceTypeCamera             DeviceAttributesDeviceType = "camera"
	DeviceAttributesDeviceTypeChassis            DeviceAttributesDeviceType = "chassis"
	DeviceAttributesDeviceTypeController         DeviceAttributesDeviceType = "controller"
	DeviceAttributesDeviceTypeCopier             DeviceAttributesDeviceType = "copier"
	DeviceAttributesDeviceTypeFirewall           DeviceAttributesDeviceType = "firewall"
	DeviceAttributesDeviceTypeHandheld           DeviceAttributesDeviceType = "handheld"
	DeviceAttributesDeviceTypeHub                DeviceAttributesDeviceType = "hub"
	DeviceAttributesDeviceTypeHypervisor         DeviceAttributesDeviceType = "hypervisor"
	DeviceAttributesDeviceTypeInternetOfThings   DeviceAttributesDeviceType = "internetOfThings"
	DeviceAttributesDeviceTypeIpPhone            DeviceAttributesDeviceType = "ipPhone"
	DeviceAttributesDeviceTypeIpmi               DeviceAttributesDeviceType = "ipmi"
	DeviceAttributesDeviceTypeL3Switch           DeviceAttributesDeviceType = "l3Switch"
	DeviceAttributesDeviceTypeLightingDevice     DeviceAttributesDeviceType = "lightingDevice"
	DeviceAttributesDeviceTypeLoadBalancer       DeviceAttributesDeviceType = "loadBalancer"
	DeviceAttributesDeviceTypeModem              DeviceAttributesDeviceType = "modem"
	DeviceAttributesDeviceTypeModule             DeviceAttributesDeviceType = "module"
	DeviceAttributesDeviceTypeMultimedia         DeviceAttributesDeviceType = "multimedia"
	DeviceAttributesDeviceTypePacketProcessor    DeviceAttributesDeviceType = "packetProcessor"
	DeviceAttributesDeviceTypePdu                DeviceAttributesDeviceType = "pdu"
	DeviceAttributesDeviceTypePhone              DeviceAttributesDeviceType = "phone"
	DeviceAttributesDeviceTypePrinter            DeviceAttributesDeviceType = "printer"
	DeviceAttributesDeviceTypeRouter             DeviceAttributesDeviceType = "router"
	DeviceAttributesDeviceTypeSecurityAppliance  DeviceAttributesDeviceType = "securityAppliance"
	DeviceAttributesDeviceTypeServer             DeviceAttributesDeviceType = "server"
	DeviceAttributesDeviceTypeStack              DeviceAttributesDeviceType = "stack"
	DeviceAttributesDeviceTypeStorage            DeviceAttributesDeviceType = "storage"
	DeviceAttributesDeviceTypeSwitch             DeviceAttributesDeviceType = "switch"
	DeviceAttributesDeviceTypeTablet             DeviceAttributesDeviceType = "tablet"
	DeviceAttributesDeviceTypeTelecommunications DeviceAttributesDeviceType = "telecommunications"
	DeviceAttributesDeviceTypeThinAccessPoint    DeviceAttributesDeviceType = "thinAccessPoint"
	DeviceAttributesDeviceTypeThinClient         DeviceAttributesDeviceType = "thinClient"
	DeviceAttributesDeviceTypeTimeClock          DeviceAttributesDeviceType = "timeClock"
	DeviceAttributesDeviceTypeUnknown            DeviceAttributesDeviceType = "unknown"
	DeviceAttributesDeviceTypeUps                DeviceAttributesDeviceType = "ups"
	DeviceAttributesDeviceTypeUtm                DeviceAttributesDeviceType = "utm"
	DeviceAttributesDeviceTypeVirtualAppliance   DeviceAttributesDeviceType = "virtualAppliance"
	DeviceAttributesDeviceTypeVirtualMachine     DeviceAttributesDeviceType = "virtualMachine"
	DeviceAttributesDeviceTypeVoipSwitch         DeviceAttributesDeviceType = "voipSwitch"
	DeviceAttributesDeviceTypeWorkstation        DeviceAttributesDeviceType = "workstation"
)

// Defines values for DeviceAttributesOnlineStatus.
const (
	DeviceAttributesOnlineStatusDormant        DeviceAttributesOnlineStatus = "dormant"
	DeviceAttributesOnlineStatusLowerLayerDown DeviceAttributesOnlineStatus = "lowerLayerDown"
	DeviceAttributesOnlineStatusNotPresent     DeviceAttributesOnlineStatus = "notPresent"
	DeviceAttributesOnlineStatusOffline        DeviceAttributesOnlineStatus = "offline"
	DeviceAttributesOnlineStatusOnline         DeviceAttributesOnlineStatus = "online"
	DeviceAttributesOnlineStatusTesting        DeviceAttributesOnlineStatus = "testing"
	DeviceAttributesOnlineStatusUnknown        DeviceAttributesOnlineStatus = "unknown"
	DeviceAttributesOnlineStatusUnreachable    DeviceAttributesOnlineStatus = "unreachable"
)

// Defines values for DeviceAvailabilityStatisticsResourceObjectType.
const (
	DeviceAvailabilityStatistics DeviceAvailabilityStatisticsResourceObjectType = "deviceAvailabilityStatistics"
)

// Defines values for DeviceDetailsAttributesTrafficInsightsStatus.
const (
	DeviceDetailsAttributesTrafficInsightsStatusApproved      DeviceDetailsAttributesTrafficInsightsStatus = "approved"
	DeviceDetailsAttributesTrafficInsightsStatusDetected      DeviceDetailsAttributesTrafficInsightsStatus = "detected"
	DeviceDetailsAttributesTrafficInsightsStatusForwarding    DeviceDetailsAttributesTrafficInsightsStatus = "forwarding"
	DeviceDetailsAttributesTrafficInsightsStatusLinking       DeviceDetailsAttributesTrafficInsightsStatus = "linking"
	DeviceDetailsAttributesTrafficInsightsStatusLinkingFailed DeviceDetailsAttributesTrafficInsightsStatus = "linkingFailed"
	DeviceDetailsAttributesTrafficInsightsStatusNotApproved   DeviceDetailsAttributesTrafficInsightsStatus = "notApproved"
	DeviceDetailsAttributesTrafficInsightsStatusNotDetected   DeviceDetailsAttributesTrafficInsightsStatus = "notDetected"
)

// Defines values for DeviceDetailsAttributesDiscoveryStatusLogin.
const (
	DeviceDetailsAttributesDiscoveryStatusLoginAuthorized    DeviceDetailsAttributesDiscoveryStatusLogin = "authorized"
	DeviceDetailsAttributesDiscoveryStatusLoginAuthorizing   DeviceDetailsAttributesDiscoveryStatusLogin = "authorizing"
	DeviceDetailsAttributesDiscoveryStatusLoginDetermining   DeviceDetailsAttributesDiscoveryStatusLogin = "determining"
	DeviceDetailsAttributesDiscoveryStatusLoginDisabled      DeviceDetailsAttributesDiscoveryStatusLogin = "disabled"
	DeviceDetailsAttributesDiscoveryStatusLoginNotAuthorized DeviceDetailsAttributesDiscoveryStatusLogin = "notAuthorized"
	DeviceDetailsAttributesDiscoveryStatusLoginNotSupported  DeviceDetailsAttributesDiscoveryStatusLogin = "notSupported"
	DeviceDetailsAttributesDiscoveryStatusLoginPrivileged    DeviceDetailsAttributesDiscoveryStatusLogin = "privileged"
)

// Defines values for DeviceDetailsAttributesDiscoveryStatusSnmp.
const (
	DeviceDetailsAttributesDiscoveryStatusSnmpAuthorized    DeviceDetailsAttributesDiscoveryStatusSnmp = "authorized"
	DeviceDetailsAttributesDiscoveryStatusSnmpAuthorizing   DeviceDetailsAttributesDiscoveryStatusSnmp = "authorizing"
	DeviceDetailsAttributesDiscoveryStatusSnmpDetermining   DeviceDetailsAttributesDiscoveryStatusSnmp = "determining"
	DeviceDetailsAttributesDiscoveryStatusSnmpDisabled      DeviceDetailsAttributesDiscoveryStatusSnmp = "disabled"
	DeviceDetailsAttributesDiscoveryStatusSnmpNotAuthorized DeviceDetailsAttributesDiscoveryStatusSnmp = "notAuthorized"
	DeviceDetailsAttributesDiscoveryStatusSnmpNotSupported  DeviceDetailsAttributesDiscoveryStatusSnmp = "notSupported"
	DeviceDetailsAttributesDiscoveryStatusSnmpPrivileged    DeviceDetailsAttributesDiscoveryStatusSnmp = "privileged"
)

// Defines values for DeviceDetailsAttributesDiscoveryStatusVmware.
const (
	DeviceDetailsAttributesDiscoveryStatusVmwareAuthorized    DeviceDetailsAttributesDiscoveryStatusVmware = "authorized"
	DeviceDetailsAttributesDiscoveryStatusVmwareAuthorizing   DeviceDetailsAttributesDiscoveryStatusVmware = "authorizing"
	DeviceDetailsAttributesDiscoveryStatusVmwareDetermining   DeviceDetailsAttributesDiscoveryStatusVmware = "determining"
	DeviceDetailsAttributesDiscoveryStatusVmwareDisabled      DeviceDetailsAttributesDiscoveryStatusVmware = "disabled"
	DeviceDetailsAttributesDiscoveryStatusVmwareNotAuthorized DeviceDetailsAttributesDiscoveryStatusVmware = "notAuthorized"
	DeviceDetailsAttributesDiscoveryStatusVmwareNotSupported  DeviceDetailsAttributesDiscoveryStatusVmware = "notSupported"
	DeviceDetailsAttributesDiscoveryStatusVmwarePrivileged    DeviceDetailsAttributesDiscoveryStatusVmware = "privileged"
)

// Defines values for DeviceDetailsAttributesDiscoveryStatusWmi.
const (
	DeviceDetailsAttributesDiscoveryStatusWmiAuthorized    DeviceDetailsAttributesDiscoveryStatusWmi = "authorized"
	DeviceDetailsAttributesDiscoveryStatusWmiAuthorizing   DeviceDetailsAttributesDiscoveryStatusWmi = "authorizing"
	DeviceDetailsAttributesDiscoveryStatusWmiDetermining   DeviceDetailsAttributesDiscoveryStatusWmi = "determining"
	DeviceDetailsAttributesDiscoveryStatusWmiDisabled      DeviceDetailsAttributesDiscoveryStatusWmi = "disabled"
	DeviceDetailsAttributesDiscoveryStatusWmiNotAuthorized DeviceDetailsAttributesDiscoveryStatusWmi = "notAuthorized"
	DeviceDetailsAttributesDiscoveryStatusWmiNotSupported  DeviceDetailsAttributesDiscoveryStatusWmi = "notSupported"
	DeviceDetailsAttributesDiscoveryStatusWmiPrivileged    DeviceDetailsAttributesDiscoveryStatusWmi = "privileged"
)

// Defines values for DeviceDetailsRelationshipsComponentsAttributesComponentType.
const (
	DeviceDetailsRelationshipsComponentsAttributesComponentTypeCpu               DeviceDetailsRelationshipsComponentsAttributesComponentType = "cpu"
	DeviceDetailsRelationshipsComponentsAttributesComponentTypeDisk              DeviceDetailsRelationshipsComponentsAttributesComponentType = "disk"
	DeviceDetailsRelationshipsComponentsAttributesComponentTypeFan               DeviceDetailsRelationshipsComponentsAttributesComponentType = "fan"
	DeviceDetailsRelationshipsComponentsAttributesComponentTypeMemory            DeviceDetailsRelationshipsComponentsAttributesComponentType = "memory"
	DeviceDetailsRelationshipsComponentsAttributesComponentTypePowerSupply       DeviceDetailsRelationshipsComponentsAttributesComponentType = "powerSupply"
	DeviceDetailsRelationshipsComponentsAttributesComponentTypeStorageController DeviceDetailsRelationshipsComponentsAttributesComponentType = "storageController"
	DeviceDetailsRelationshipsComponentsAttributesComponentTypeSystemBoard       DeviceDetailsRelationshipsComponentsAttributesComponentType = "systemBoard"
)

// Defines values for DeviceDetailsRelationshipsComponentsDataType.
const (
	DeviceDetailsRelationshipsComponentsDataTypeComponent DeviceDetailsRelationshipsComponentsDataType = "component"
)

// Defines values for DeviceDetailsRelationshipsConfigurationsDataType.
const (
	DeviceDetailsRelationshipsConfigurationsDataTypeConfiguration DeviceDetailsRelationshipsConfigurationsDataType = "configuration"
)

// Defines values for DeviceDetailsRelationshipsConnectedDevicesDataType.
const (
	DeviceDetailsRelationshipsConnectedDevicesDataTypeDevice DeviceDetailsRelationshipsConnectedDevicesDataType = "device"
)

// Defines values for DeviceDetailsRelationshipsInterfacesDataType.
const (
	DeviceDetailsRelationshipsInterfacesDataTypeInterface DeviceDetailsRelationshipsInterfacesDataType = "interface"
)

// Defines values for DeviceDetailsResourceObjectType.
const (
	DeviceDetailsResourceObjectTypeDeviceDetail DeviceDetailsResourceObjectType = "deviceDetail"
)

// Defines values for DeviceExtendedDetailsDeviceType.
const (
	DeviceExtendedDetailsDeviceTypeDeviceExtendedDetail DeviceExtendedDetailsDeviceType = "deviceExtendedDetail"
)

// Defines values for DeviceLifecycleAttributesLastSupportStatus.
const (
	DeviceLifecycleAttributesLastSupportStatusAvailable    DeviceLifecycleAttributesLastSupportStatus = "available"
	DeviceLifecycleAttributesLastSupportStatusCovered      DeviceLifecycleAttributesLastSupportStatus = "covered"
	DeviceLifecycleAttributesLastSupportStatusEmpty        DeviceLifecycleAttributesLastSupportStatus = "empty"
	DeviceLifecycleAttributesLastSupportStatusExpired      DeviceLifecycleAttributesLastSupportStatus = "expired"
	DeviceLifecycleAttributesLastSupportStatusSecurityOnly DeviceLifecycleAttributesLastSupportStatus = "securityOnly"
	DeviceLifecycleAttributesLastSupportStatusUnpublished  DeviceLifecycleAttributesLastSupportStatus = "unpublished"
)

// Defines values for DeviceLifecycleAttributesSalesAvailability.
const (
	DeviceLifecycleAttributesSalesAvailabilityAvailable    DeviceLifecycleAttributesSalesAvailability = "available"
	DeviceLifecycleAttributesSalesAvailabilityCovered      DeviceLifecycleAttributesSalesAvailability = "covered"
	DeviceLifecycleAttributesSalesAvailabilityEmpty        DeviceLifecycleAttributesSalesAvailability = "empty"
	DeviceLifecycleAttributesSalesAvailabilityExpired      DeviceLifecycleAttributesSalesAvailability = "expired"
	DeviceLifecycleAttributesSalesAvailabilitySecurityOnly DeviceLifecycleAttributesSalesAvailability = "securityOnly"
	DeviceLifecycleAttributesSalesAvailabilityUnpublished  DeviceLifecycleAttributesSalesAvailability = "unpublished"
)

// Defines values for DeviceLifecycleAttributesSecuritySoftwareMaintenanceStatus.
const (
	DeviceLifecycleAttributesSecuritySoftwareMaintenanceStatusAvailable    DeviceLifecycleAttributesSecuritySoftwareMaintenanceStatus = "available"
	DeviceLifecycleAttributesSecuritySoftwareMaintenanceStatusCovered      DeviceLifecycleAttributesSecuritySoftwareMaintenanceStatus = "covered"
	DeviceLifecycleAttributesSecuritySoftwareMaintenanceStatusEmpty        DeviceLifecycleAttributesSecuritySoftwareMaintenanceStatus = "empty"
	DeviceLifecycleAttributesSecuritySoftwareMaintenanceStatusExpired      DeviceLifecycleAttributesSecuritySoftwareMaintenanceStatus = "expired"
	DeviceLifecycleAttributesSecuritySoftwareMaintenanceStatusSecurityOnly DeviceLifecycleAttributesSecuritySoftwareMaintenanceStatus = "securityOnly"
	DeviceLifecycleAttributesSecuritySoftwareMaintenanceStatusUnpublished  DeviceLifecycleAttributesSecuritySoftwareMaintenanceStatus = "unpublished"
)

// Defines values for DeviceLifecycleAttributesSoftwareMaintenanceStatus.
const (
	DeviceLifecycleAttributesSoftwareMaintenanceStatusAvailable    DeviceLifecycleAttributesSoftwareMaintenanceStatus = "available"
	DeviceLifecycleAttributesSoftwareMaintenanceStatusCovered      DeviceLifecycleAttributesSoftwareMaintenanceStatus = "covered"
	DeviceLifecycleAttributesSoftwareMaintenanceStatusEmpty        DeviceLifecycleAttributesSoftwareMaintenanceStatus = "empty"
	DeviceLifecycleAttributesSoftwareMaintenanceStatusExpired      DeviceLifecycleAttributesSoftwareMaintenanceStatus = "expired"
	DeviceLifecycleAttributesSoftwareMaintenanceStatusSecurityOnly DeviceLifecycleAttributesSoftwareMaintenanceStatus = "securityOnly"
	DeviceLifecycleAttributesSoftwareMaintenanceStatusUnpublished  DeviceLifecycleAttributesSoftwareMaintenanceStatus = "unpublished"
)

// Defines values for DeviceLifecycleRelationshipsDeviceDataType.
const (
	DeviceLifecycleRelationshipsDeviceDataTypeDevice DeviceLifecycleRelationshipsDeviceDataType = "device"
)

// Defines values for DeviceLifecycleResourceObjectType.
const (
	DeviceLifecycle DeviceLifecycleResourceObjectType = "deviceLifecycle"
)

// Defines values for DeviceOidMonitorResourceObjectType.
const (
	DeviceOidMonitor DeviceOidMonitorResourceObjectType = "deviceOidMonitor"
)

// Defines values for DeviceRelationshipsDeviceDetailDataType.
const (
	DeviceRelationshipsDeviceDetailDataTypeDeviceDetail DeviceRelationshipsDeviceDetailDataType = "deviceDetail"
)

// Defines values for DeviceRelationshipsNetworksDataType.
const (
	DeviceRelationshipsNetworksDataTypeNetwork DeviceRelationshipsNetworksDataType = "network"
)

// Defines values for DeviceStatisticsResourceObjectType.
const (
	DeviceStatistics DeviceStatisticsResourceObjectType = "deviceStatistics"
)

// Defines values for DeviceUsageRelationshipsClientDataType.
const (
	ClientUsage DeviceUsageRelationshipsClientDataType = "clientUsage"
)

// Defines values for DeviceUsageResourceObjectType.
const (
	DeviceUsageResourceObjectTypeDeviceUsage DeviceUsageResourceObjectType = "deviceUsage"
)

// Defines values for DeviceWarrantyResourceObjectType.
const (
	DeviceWarranty DeviceWarrantyResourceObjectType = "deviceWarranty"
)

// Defines values for DevicesResourceObjectType.
const (
	DevicesResourceObjectTypeDevice DevicesResourceObjectType = "device"
)

// Defines values for HypervisorAttributesDeviceType.
const (
	HypervisorAttributesDeviceTypeHypervisor HypervisorAttributesDeviceType = "hypervisor"
)

// Defines values for HypervisorAttributesVirtualMachinesDeviceType.
const (
	VirtualMachine HypervisorAttributesVirtualMachinesDeviceType = "virtualMachine"
)

// Defines values for HypervisorAttributesVirtualMachinesPowerStatus.
const (
	HypervisorAttributesVirtualMachinesPowerStatusDormant        HypervisorAttributesVirtualMachinesPowerStatus = "dormant"
	HypervisorAttributesVirtualMachinesPowerStatusLowerLayerDown HypervisorAttributesVirtualMachinesPowerStatus = "lowerLayerDown"
	HypervisorAttributesVirtualMachinesPowerStatusNotPresent     HypervisorAttributesVirtualMachinesPowerStatus = "notPresent"
	HypervisorAttributesVirtualMachinesPowerStatusOffline        HypervisorAttributesVirtualMachinesPowerStatus = "offline"
	HypervisorAttributesVirtualMachinesPowerStatusOnline         HypervisorAttributesVirtualMachinesPowerStatus = "online"
	HypervisorAttributesVirtualMachinesPowerStatusTesting        HypervisorAttributesVirtualMachinesPowerStatus = "testing"
	HypervisorAttributesVirtualMachinesPowerStatusUnknown        HypervisorAttributesVirtualMachinesPowerStatus = "unknown"
	HypervisorAttributesVirtualMachinesPowerStatusUnreachable    HypervisorAttributesVirtualMachinesPowerStatus = "unreachable"
)

// Defines values for HypervisorType.
const (
	HypervisorTypeDeviceExtendedDetail HypervisorType = "deviceExtendedDetail"
)

// Defines values for InterfaceAttributesDuplex.
const (
	InterfaceAttributesDuplexFull    InterfaceAttributesDuplex = "full"
	InterfaceAttributesDuplexHalf    InterfaceAttributesDuplex = "half"
	InterfaceAttributesDuplexUnknown InterfaceAttributesDuplex = "unknown"
)

// Defines values for InterfaceAttributesInterfaceType.
const (
	InterfaceAttributesInterfaceTypeBluetooth                InterfaceAttributesInterfaceType = "bluetooth"
	InterfaceAttributesInterfaceTypeCdma                     InterfaceAttributesInterfaceType = "cdma"
	InterfaceAttributesInterfaceTypeCoax                     InterfaceAttributesInterfaceType = "coax"
	InterfaceAttributesInterfaceTypeCpu                      InterfaceAttributesInterfaceType = "cpu"
	InterfaceAttributesInterfaceTypeDistributedVirtualSwitch InterfaceAttributesInterfaceType = "distributedVirtualSwitch"
	InterfaceAttributesInterfaceTypeEthernet                 InterfaceAttributesInterfaceType = "ethernet"
	InterfaceAttributesInterfaceTypeFirewire                 InterfaceAttributesInterfaceType = "firewire"
	InterfaceAttributesInterfaceTypeGsm                      InterfaceAttributesInterfaceType = "gsm"
	InterfaceAttributesInterfaceTypeIeee8023AdLag            InterfaceAttributesInterfaceType = "ieee8023AdLag"
	InterfaceAttributesInterfaceTypeInferredWired            InterfaceAttributesInterfaceType = "inferredWired"
	InterfaceAttributesInterfaceTypeInferredWireless         InterfaceAttributesInterfaceType = "inferredWireless"
	InterfaceAttributesInterfaceTypeInterface                InterfaceAttributesInterfaceType = "interface"
	InterfaceAttributesInterfaceTypeLinkAggregation          InterfaceAttributesInterfaceType = "linkAggregation"
	InterfaceAttributesInterfaceTypeLoopback                 InterfaceAttributesInterfaceType = "loopback"
	InterfaceAttributesInterfaceTypeModem                    InterfaceAttributesInterfaceType = "modem"
	InterfaceAttributesInterfaceTypeOptical                  InterfaceAttributesInterfaceType = "optical"
	InterfaceAttributesInterfaceTypeOther                    InterfaceAttributesInterfaceType = "other"
	InterfaceAttributesInterfaceTypeParallel                 InterfaceAttributesInterfaceType = "parallel"
	InterfaceAttributesInterfaceTypePpp                      InterfaceAttributesInterfaceType = "ppp"
	InterfaceAttributesInterfaceTypeRadiomac                 InterfaceAttributesInterfaceType = "radiomac"
	InterfaceAttributesInterfaceTypeRs232                    InterfaceAttributesInterfaceType = "rs232"
	InterfaceAttributesInterfaceTypeTunnel                   InterfaceAttributesInterfaceType = "tunnel"
	InterfaceAttributesInterfaceTypeUnknown                  InterfaceAttributesInterfaceType = "unknown"
	InterfaceAttributesInterfaceTypeUsb                      InterfaceAttributesInterfaceType = "usb"
	InterfaceAttributesInterfaceTypeVirtualBridge            InterfaceAttributesInterfaceType = "virtualBridge"
	InterfaceAttributesInterfaceTypeVirtualNic               InterfaceAttributesInterfaceType = "virtualNic"
	InterfaceAttributesInterfaceTypeVirtualSwitch            InterfaceAttributesInterfaceType = "virtualSwitch"
	InterfaceAttributesInterfaceTypeVlan                     InterfaceAttributesInterfaceType = "vlan"
	InterfaceAttributesInterfaceTypeWifi                     InterfaceAttributesInterfaceType = "wifi"
	InterfaceAttributesInterfaceTypeWimax                    InterfaceAttributesInterfaceType = "wimax"
)

// Defines values for InterfaceAttributesOperationalStatus.
const (
	InterfaceAttributesOperationalStatusDormant        InterfaceAttributesOperationalStatus = "dormant"
	InterfaceAttributesOperationalStatusLowerLayerDown InterfaceAttributesOperationalStatus = "lowerLayerDown"
	InterfaceAttributesOperationalStatusNotPresent     InterfaceAttributesOperationalStatus = "notPresent"
	InterfaceAttributesOperationalStatusOffline        InterfaceAttributesOperationalStatus = "offline"
	InterfaceAttributesOperationalStatusOnline         InterfaceAttributesOperationalStatus = "online"
	InterfaceAttributesOperationalStatusTesting        InterfaceAttributesOperationalStatus = "testing"
	InterfaceAttributesOperationalStatusUnknown        InterfaceAttributesOperationalStatus = "unknown"
	InterfaceAttributesOperationalStatusUnreachable    InterfaceAttributesOperationalStatus = "unreachable"
)

// Defines values for InterfaceRelationshipsConnectedToDataType.
const (
	InterfaceRelationshipsConnectedToDataTypeInterface InterfaceRelationshipsConnectedToDataType = "interface"
)

// Defines values for InterfaceRelationshipsNetworksDataType.
const (
	InterfaceRelationshipsNetworksDataTypeNetwork InterfaceRelationshipsNetworksDataType = "network"
)

// Defines values for InterfaceRelationshipsParentDeviceDataType.
const (
	InterfaceRelationshipsParentDeviceDataTypeDevice InterfaceRelationshipsParentDeviceDataType = "device"
)

// Defines values for InterfaceResourceObjectType.
const (
	InterfaceResourceObjectTypeInterface InterfaceResourceObjectType = "interface"
)

// Defines values for InterfaceStatisticsResourceObjectType.
const (
	InterfaceStatistics InterfaceStatisticsResourceObjectType = "interfaceStatistics"
)

// Defines values for MiscDeviceAttributesDeviceType.
const (
	MiscDeviceAttributesDeviceTypeAirConditioner     MiscDeviceAttributesDeviceType = "airConditioner"
	MiscDeviceAttributesDeviceTypeAlarm              MiscDeviceAttributesDeviceType = "alarm"
	MiscDeviceAttributesDeviceTypeAudioVisual        MiscDeviceAttributesDeviceType = "audioVisual"
	MiscDeviceAttributesDeviceTypeBackhaul           MiscDeviceAttributesDeviceType = "backhaul"
	MiscDeviceAttributesDeviceTypeBackupDevice       MiscDeviceAttributesDeviceType = "backupDevice"
	MiscDeviceAttributesDeviceTypeBridge             MiscDeviceAttributesDeviceType = "bridge"
	MiscDeviceAttributesDeviceTypeBuildingManagement MiscDeviceAttributesDeviceType = "buildingManagement"
	MiscDeviceAttributesDeviceTypeCamera             MiscDeviceAttributesDeviceType = "camera"
	MiscDeviceAttributesDeviceTypeChassis            MiscDeviceAttributesDeviceType = "chassis"
	MiscDeviceAttributesDeviceTypeCopier             MiscDeviceAttributesDeviceType = "copier"
	MiscDeviceAttributesDeviceTypeFirewall           MiscDeviceAttributesDeviceType = "firewall"
	MiscDeviceAttributesDeviceTypeHandheld           MiscDeviceAttributesDeviceType = "handheld"
	MiscDeviceAttributesDeviceTypeHub                MiscDeviceAttributesDeviceType = "hub"
	MiscDeviceAttributesDeviceTypeInferredHub        MiscDeviceAttributesDeviceType = "inferredHub"
	MiscDeviceAttributesDeviceTypeInferredSwitch     MiscDeviceAttributesDeviceType = "inferredSwitch"
	MiscDeviceAttributesDeviceTypeInternetOfThings   MiscDeviceAttributesDeviceType = "internetOfThings"
	MiscDeviceAttributesDeviceTypeIpPhone            MiscDeviceAttributesDeviceType = "ipPhone"
	MiscDeviceAttributesDeviceTypeIpmi               MiscDeviceAttributesDeviceType = "ipmi"
	MiscDeviceAttributesDeviceTypeL3Switch           MiscDeviceAttributesDeviceType = "l3Switch"
	MiscDeviceAttributesDeviceTypeLightingDevice     MiscDeviceAttributesDeviceType = "lightingDevice"
	MiscDeviceAttributesDeviceTypeLoadBalancer       MiscDeviceAttributesDeviceType = "loadBalancer"
	MiscDeviceAttributesDeviceTypeModem              MiscDeviceAttributesDeviceType = "modem"
	MiscDeviceAttributesDeviceTypeModule             MiscDeviceAttributesDeviceType = "module"
	MiscDeviceAttributesDeviceTypeMultimedia         MiscDeviceAttributesDeviceType = "multimedia"
	MiscDeviceAttributesDeviceTypePacketProcessor    MiscDeviceAttributesDeviceType = "packetProcessor"
	MiscDeviceAttributesDeviceTypePdu                MiscDeviceAttributesDeviceType = "pdu"
	MiscDeviceAttributesDeviceTypePhone              MiscDeviceAttributesDeviceType = "phone"
	MiscDeviceAttributesDeviceTypePrinter            MiscDeviceAttributesDeviceType = "printer"
	MiscDeviceAttributesDeviceTypeRouter             MiscDeviceAttributesDeviceType = "router"
	MiscDeviceAttributesDeviceTypeSecurityAppliance  MiscDeviceAttributesDeviceType = "securityAppliance"
	MiscDeviceAttributesDeviceTypeServer             MiscDeviceAttributesDeviceType = "server"
	MiscDeviceAttributesDeviceTypeStorage            MiscDeviceAttributesDeviceType = "storage"
	MiscDeviceAttributesDeviceTypeSwitch             MiscDeviceAttributesDeviceType = "switch"
	MiscDeviceAttributesDeviceTypeTablet             MiscDeviceAttributesDeviceType = "tablet"
	MiscDeviceAttributesDeviceTypeTelecommunications MiscDeviceAttributesDeviceType = "telecommunications"
	MiscDeviceAttributesDeviceTypeThinAccessPoint    MiscDeviceAttributesDeviceType = "thinAccessPoint"
	MiscDeviceAttributesDeviceTypeThinClient         MiscDeviceAttributesDeviceType = "thinClient"
	MiscDeviceAttributesDeviceTypeTimeClock          MiscDeviceAttributesDeviceType = "timeClock"
	MiscDeviceAttributesDeviceTypeUnknown            MiscDeviceAttributesDeviceType = "unknown"
	MiscDeviceAttributesDeviceTypeUps                MiscDeviceAttributesDeviceType = "ups"
	MiscDeviceAttributesDeviceTypeUtm                MiscDeviceAttributesDeviceType = "utm"
	MiscDeviceAttributesDeviceTypeVirtualAppliance   MiscDeviceAttributesDeviceType = "virtualAppliance"
	MiscDeviceAttributesDeviceTypeVoipSwitch         MiscDeviceAttributesDeviceType = "voipSwitch"
	MiscDeviceAttributesDeviceTypeWorkstation        MiscDeviceAttributesDeviceType = "workstation"
)

// Defines values for MiscDeviceType.
const (
	MiscDeviceTypeDeviceExtendedDetail MiscDeviceType = "deviceExtendedDetail"
)

// Defines values for NetworkAttributesNetworkType.
const (
	NetworkAttributesNetworkTypeInternet NetworkAttributesNetworkType = "internet"
	NetworkAttributesNetworkTypeLayer2   NetworkAttributesNetworkType = "layer2"
	NetworkAttributesNetworkTypeLoopback NetworkAttributesNetworkType = "loopback"
	NetworkAttributesNetworkTypeNetwork  NetworkAttributesNetworkType = "network"
	NetworkAttributesNetworkTypeRouted   NetworkAttributesNetworkType = "routed"
	NetworkAttributesNetworkTypeVlan     NetworkAttributesNetworkType = "vlan"
	NetworkAttributesNetworkTypeWifi     NetworkAttributesNetworkType = "wifi"
)

// Defines values for NetworkAttributesScanStatus.
const (
	NetworkAttributesScanStatusFalse      NetworkAttributesScanStatus = "false"
	NetworkAttributesScanStatusNotAllowed NetworkAttributesScanStatus = "notAllowed"
	NetworkAttributesScanStatusTrue       NetworkAttributesScanStatus = "true"
	NetworkAttributesScanStatusUnknown    NetworkAttributesScanStatus = "unknown"
)

// Defines values for NetworkDetailsAttributesCollectorSelection.
const (
	Automatic NetworkDetailsAttributesCollectorSelection = "automatic"
	Manual    NetworkDetailsAttributesCollectorSelection = "manual"
)

// Defines values for NetworkDetailsAttributesScope.
const (
	NetworkDetailsAttributesScopePrivate NetworkDetailsAttributesScope = "private"
	NetworkDetailsAttributesScopePublic  NetworkDetailsAttributesScope = "public"
)

// Defines values for NetworkDetailsResourceObjectType.
const (
	NetworkDetailsResourceObjectTypeNetworkDetail NetworkDetailsResourceObjectType = "networkDetail"
)

// Defines values for NetworkRelationshipsDevicesDataType.
const (
	NetworkRelationshipsDevicesDataTypeDevice NetworkRelationshipsDevicesDataType = "device"
)

// Defines values for NetworkRelationshipsNetworkDetailDataType.
const (
	NetworkRelationshipsNetworkDetailDataTypeNetworkDetail NetworkRelationshipsNetworkDetailDataType = "networkDetail"
)

// Defines values for NetworksResourceObjectType.
const (
	NetworksResourceObjectTypeNetwork NetworksResourceObjectType = "network"
)

// Defines values for NoteAttributesEntityType.
const (
	NoteAttributesEntityTypeDevice    NoteAttributesEntityType = "device"
	NoteAttributesEntityTypeInterface NoteAttributesEntityType = "interface"
	NoteAttributesEntityTypeNetwork   NoteAttributesEntityType = "network"
	NoteAttributesEntityTypeRoot      NoteAttributesEntityType = "root"
)

// Defines values for NoteResourceObjectType.
const (
	EntityNote NoteResourceObjectType = "entityNote"
)

// Defines values for OidRelationshipsDeviceDataType.
const (
	OidRelationshipsDeviceDataTypeDevice OidRelationshipsDeviceDataType = "device"
)

// Defines values for ServiceStatisticsResourceObjectType.
const (
	ServiceStatistics ServiceStatisticsResourceObjectType = "serviceStatistics"
)

// Defines values for SnmpPollerIntHistoryAttributesInterval.
const (
	SnmpPollerIntHistoryAttributesIntervalDay    SnmpPollerIntHistoryAttributesInterval = "Day"
	SnmpPollerIntHistoryAttributesIntervalHour   SnmpPollerIntHistoryAttributesInterval = "hour"
	SnmpPollerIntHistoryAttributesIntervalMinute SnmpPollerIntHistoryAttributesInterval = "minute"
)

// Defines values for SnmpPollerSettingDataAttributesProtocol.
const (
	Snmp SnmpPollerSettingDataAttributesProtocol = "snmp"
)

// Defines values for StackAttributesDeviceType.
const (
	StackAttributesDeviceTypeStack StackAttributesDeviceType = "stack"
)

// Defines values for StackRelationshipsMembersAttributesMemberRole.
const (
	Backup         StackRelationshipsMembersAttributesMemberRole = "backup"
	Master         StackRelationshipsMembersAttributesMemberRole = "master"
	MasterOrBackup StackRelationshipsMembersAttributesMemberRole = "masterOrBackup"
	Member         StackRelationshipsMembersAttributesMemberRole = "member"
	NotMember      StackRelationshipsMembersAttributesMemberRole = "notMember"
	Standby        StackRelationshipsMembersAttributesMemberRole = "standby"
)

// Defines values for StackRelationshipsMembersAttributesMemberStatus.
const (
	StackRelationshipsMembersAttributesMemberStatusAdded           StackRelationshipsMembersAttributesMemberStatus = "added"
	StackRelationshipsMembersAttributesMemberStatusFeatureMismatch StackRelationshipsMembersAttributesMemberStatus = "featureMismatch"
	StackRelationshipsMembersAttributesMemberStatusInvalid         StackRelationshipsMembersAttributesMemberStatus = "invalid"
	StackRelationshipsMembersAttributesMemberStatusNewMasterInit   StackRelationshipsMembersAttributesMemberStatus = "newMasterInit"
	StackRelationshipsMembersAttributesMemberStatusProgressing     StackRelationshipsMembersAttributesMemberStatus = "progressing"
	StackRelationshipsMembersAttributesMemberStatusProvisioned     StackRelationshipsMembersAttributesMemberStatus = "provisioned"
	StackRelationshipsMembersAttributesMemberStatusReady           StackRelationshipsMembersAttributesMemberStatus = "ready"
	StackRelationshipsMembersAttributesMemberStatusRemoved         StackRelationshipsMembersAttributesMemberStatus = "removed"
	StackRelationshipsMembersAttributesMemberStatusSdmMismatch     StackRelationshipsMembersAttributesMemberStatus = "sdmMismatch"
	StackRelationshipsMembersAttributesMemberStatusVerMismatch     StackRelationshipsMembersAttributesMemberStatus = "verMismatch"
	StackRelationshipsMembersAttributesMemberStatusWaiting         StackRelationshipsMembersAttributesMemberStatus = "waiting"
)

// Defines values for StackType.
const (
	StackTypeDeviceExtendedDetail StackType = "deviceExtendedDetail"
)

// Defines values for TenantAttributesTenantType.
const (
	TenantAttributesTenantTypeClient      TenantAttributesTenantType = "client"
	TenantAttributesTenantTypeCorporateIt TenantAttributesTenantType = "corporateIt"
	TenantAttributesTenantTypeMultiClient TenantAttributesTenantType = "multiClient"
)

// Defines values for TenantDetailAttributesTenantType.
const (
	TenantDetailAttributesTenantTypeClient      TenantDetailAttributesTenantType = "client"
	TenantDetailAttributesTenantTypeCorporateIt TenantDetailAttributesTenantType = "corporateIt"
	TenantDetailAttributesTenantTypeMultiClient TenantDetailAttributesTenantType = "multiClient"
)

// Defines values for TenantDetailResourceObjectType.
const (
	TenantDetailResourceObjectTypeTenants TenantDetailResourceObjectType = "tenants"
)

// Defines values for TenantDetailResourceObjectRelationshipsAuthorizationsDataType.
const (
	Authorizations TenantDetailResourceObjectRelationshipsAuthorizationsDataType = "authorizations"
)

// Defines values for TenantDetailResourceObjectRelationshipsParentDataType.
const (
	TenantDetailResourceObjectRelationshipsParentDataTypeTenants TenantDetailResourceObjectRelationshipsParentDataType = "tenants"
)

// Defines values for TenantsResourceObjectType.
const (
	TenantsResourceObjectTypeTenant TenantsResourceObjectType = "tenant"
)

// Defines values for TenantsResourceObjectRelationshipsParentDataType.
const (
	TenantsResourceObjectRelationshipsParentDataTypeTenant TenantsResourceObjectRelationshipsParentDataType = "tenant"
)

// Defines values for ReadMultipleAlertInfoParamsFilterSeverity.
const (
	ReadMultipleAlertInfoParamsFilterSeverityCritical  ReadMultipleAlertInfoParamsFilterSeverity = "critical"
	ReadMultipleAlertInfoParamsFilterSeverityEmergency ReadMultipleAlertInfoParamsFilterSeverity = "emergency"
	ReadMultipleAlertInfoParamsFilterSeverityInfo      ReadMultipleAlertInfoParamsFilterSeverity = "info"
	ReadMultipleAlertInfoParamsFilterSeverityUnknown   ReadMultipleAlertInfoParamsFilterSeverity = "unknown"
	ReadMultipleAlertInfoParamsFilterSeverityWarning   ReadMultipleAlertInfoParamsFilterSeverity = "warning"
)

// Defines values for ReadMultipleAlertInfoParamsFilterStatus.
const (
	ReadMultipleAlertInfoParamsFilterStatusCreated  ReadMultipleAlertInfoParamsFilterStatus = "created"
	ReadMultipleAlertInfoParamsFilterStatusPaused   ReadMultipleAlertInfoParamsFilterStatus = "paused"
	ReadMultipleAlertInfoParamsFilterStatusResolved ReadMultipleAlertInfoParamsFilterStatus = "resolved"
	ReadMultipleAlertInfoParamsFilterStatusUnpaused ReadMultipleAlertInfoParamsFilterStatus = "unpaused"
)

// Defines values for ReadMultipleComponentInfoParamsFilterCurrentStatus.
const (
	ReadMultipleComponentInfoParamsFilterCurrentStatusDegraded ReadMultipleComponentInfoParamsFilterCurrentStatus = "degraded"
	ReadMultipleComponentInfoParamsFilterCurrentStatusFailed   ReadMultipleComponentInfoParamsFilterCurrentStatus = "failed"
	ReadMultipleComponentInfoParamsFilterCurrentStatusOk       ReadMultipleComponentInfoParamsFilterCurrentStatus = "ok"
)

// Defines values for ReadMultipleDeviceDetailsParamsFilterDiscoverySNMP.
const (
	ReadMultipleDeviceDetailsParamsFilterDiscoverySNMPAuthorized    ReadMultipleDeviceDetailsParamsFilterDiscoverySNMP = "authorized"
	ReadMultipleDeviceDetailsParamsFilterDiscoverySNMPAuthorizing   ReadMultipleDeviceDetailsParamsFilterDiscoverySNMP = "authorizing"
	ReadMultipleDeviceDetailsParamsFilterDiscoverySNMPDetermining   ReadMultipleDeviceDetailsParamsFilterDiscoverySNMP = "determining"
	ReadMultipleDeviceDetailsParamsFilterDiscoverySNMPDisabled      ReadMultipleDeviceDetailsParamsFilterDiscoverySNMP = "disabled"
	ReadMultipleDeviceDetailsParamsFilterDiscoverySNMPNotAuthorized ReadMultipleDeviceDetailsParamsFilterDiscoverySNMP = "notAuthorized"
	ReadMultipleDeviceDetailsParamsFilterDiscoverySNMPNotSupported  ReadMultipleDeviceDetailsParamsFilterDiscoverySNMP = "notSupported"
	ReadMultipleDeviceDetailsParamsFilterDiscoverySNMPPrivileged    ReadMultipleDeviceDetailsParamsFilterDiscoverySNMP = "privileged"
)

// Defines values for ReadMultipleDeviceDetailsParamsFilterDiscoveryWMI.
const (
	ReadMultipleDeviceDetailsParamsFilterDiscoveryWMIAuthorized    ReadMultipleDeviceDetailsParamsFilterDiscoveryWMI = "authorized"
	ReadMultipleDeviceDetailsParamsFilterDiscoveryWMIAuthorizing   ReadMultipleDeviceDetailsParamsFilterDiscoveryWMI = "authorizing"
	ReadMultipleDeviceDetailsParamsFilterDiscoveryWMIDetermining   ReadMultipleDeviceDetailsParamsFilterDiscoveryWMI = "determining"
	ReadMultipleDeviceDetailsParamsFilterDiscoveryWMIDisabled      ReadMultipleDeviceDetailsParamsFilterDiscoveryWMI = "disabled"
	ReadMultipleDeviceDetailsParamsFilterDiscoveryWMINotAuthorized ReadMultipleDeviceDetailsParamsFilterDiscoveryWMI = "notAuthorized"
	ReadMultipleDeviceDetailsParamsFilterDiscoveryWMINotSupported  ReadMultipleDeviceDetailsParamsFilterDiscoveryWMI = "notSupported"
	ReadMultipleDeviceDetailsParamsFilterDiscoveryWMIPrivileged    ReadMultipleDeviceDetailsParamsFilterDiscoveryWMI = "privileged"
)

// Defines values for ReadMultipleDeviceDetailsParamsFilterDiscoveryLogin.
const (
	ReadMultipleDeviceDetailsParamsFilterDiscoveryLoginAuthorized    ReadMultipleDeviceDetailsParamsFilterDiscoveryLogin = "authorized"
	ReadMultipleDeviceDetailsParamsFilterDiscoveryLoginAuthorizing   ReadMultipleDeviceDetailsParamsFilterDiscoveryLogin = "authorizing"
	ReadMultipleDeviceDetailsParamsFilterDiscoveryLoginDetermining   ReadMultipleDeviceDetailsParamsFilterDiscoveryLogin = "determining"
	ReadMultipleDeviceDetailsParamsFilterDiscoveryLoginDisabled      ReadMultipleDeviceDetailsParamsFilterDiscoveryLogin = "disabled"
	ReadMultipleDeviceDetailsParamsFilterDiscoveryLoginNotAuthorized ReadMultipleDeviceDetailsParamsFilterDiscoveryLogin = "notAuthorized"
	ReadMultipleDeviceDetailsParamsFilterDiscoveryLoginNotSupported  ReadMultipleDeviceDetailsParamsFilterDiscoveryLogin = "notSupported"
	ReadMultipleDeviceDetailsParamsFilterDiscoveryLoginPrivileged    ReadMultipleDeviceDetailsParamsFilterDiscoveryLogin = "privileged"
)

// Defines values for ReadMultipleDeviceDetailsParamsFilterDiscoveryVMware.
const (
	ReadMultipleDeviceDetailsParamsFilterDiscoveryVMwareAuthorized    ReadMultipleDeviceDetailsParamsFilterDiscoveryVMware = "authorized"
	ReadMultipleDeviceDetailsParamsFilterDiscoveryVMwareAuthorizing   ReadMultipleDeviceDetailsParamsFilterDiscoveryVMware = "authorizing"
	ReadMultipleDeviceDetailsParamsFilterDiscoveryVMwareDetermining   ReadMultipleDeviceDetailsParamsFilterDiscoveryVMware = "determining"
	ReadMultipleDeviceDetailsParamsFilterDiscoveryVMwareDisabled      ReadMultipleDeviceDetailsParamsFilterDiscoveryVMware = "disabled"
	ReadMultipleDeviceDetailsParamsFilterDiscoveryVMwareNotAuthorized ReadMultipleDeviceDetailsParamsFilterDiscoveryVMware = "notAuthorized"
	ReadMultipleDeviceDetailsParamsFilterDiscoveryVMwareNotSupported  ReadMultipleDeviceDetailsParamsFilterDiscoveryVMware = "notSupported"
	ReadMultipleDeviceDetailsParamsFilterDiscoveryVMwarePrivileged    ReadMultipleDeviceDetailsParamsFilterDiscoveryVMware = "privileged"
)

// Defines values for ReadMultipleDeviceDetailsParamsFilterTrafficInsightsStatus.
const (
	ReadMultipleDeviceDetailsParamsFilterTrafficInsightsStatusApproved      ReadMultipleDeviceDetailsParamsFilterTrafficInsightsStatus = "approved"
	ReadMultipleDeviceDetailsParamsFilterTrafficInsightsStatusDetected      ReadMultipleDeviceDetailsParamsFilterTrafficInsightsStatus = "detected"
	ReadMultipleDeviceDetailsParamsFilterTrafficInsightsStatusForwarding    ReadMultipleDeviceDetailsParamsFilterTrafficInsightsStatus = "forwarding"
	ReadMultipleDeviceDetailsParamsFilterTrafficInsightsStatusLinking       ReadMultipleDeviceDetailsParamsFilterTrafficInsightsStatus = "linking"
	ReadMultipleDeviceDetailsParamsFilterTrafficInsightsStatusLinkingFailed ReadMultipleDeviceDetailsParamsFilterTrafficInsightsStatus = "linkingFailed"
	ReadMultipleDeviceDetailsParamsFilterTrafficInsightsStatusNotApproved   ReadMultipleDeviceDetailsParamsFilterTrafficInsightsStatus = "notApproved"
	ReadMultipleDeviceDetailsParamsFilterTrafficInsightsStatusNotDetected   ReadMultipleDeviceDetailsParamsFilterTrafficInsightsStatus = "notDetected"
)

// Defines values for ReadMultipleDeviceInfoParamsFilterOnlineStatus.
const (
	ReadMultipleDeviceInfoParamsFilterOnlineStatusDormant        ReadMultipleDeviceInfoParamsFilterOnlineStatus = "dormant"
	ReadMultipleDeviceInfoParamsFilterOnlineStatusLowerLayerDown ReadMultipleDeviceInfoParamsFilterOnlineStatus = "lowerLayerDown"
	ReadMultipleDeviceInfoParamsFilterOnlineStatusNotPresent     ReadMultipleDeviceInfoParamsFilterOnlineStatus = "notPresent"
	ReadMultipleDeviceInfoParamsFilterOnlineStatusOffline        ReadMultipleDeviceInfoParamsFilterOnlineStatus = "offline"
	ReadMultipleDeviceInfoParamsFilterOnlineStatusOnline         ReadMultipleDeviceInfoParamsFilterOnlineStatus = "online"
	ReadMultipleDeviceInfoParamsFilterOnlineStatusTesting        ReadMultipleDeviceInfoParamsFilterOnlineStatus = "testing"
	ReadMultipleDeviceInfoParamsFilterOnlineStatusUnknown        ReadMultipleDeviceInfoParamsFilterOnlineStatus = "unknown"
	ReadMultipleDeviceInfoParamsFilterOnlineStatusUnreachable    ReadMultipleDeviceInfoParamsFilterOnlineStatus = "unreachable"
)

// Defines values for ReadMultipleDeviceInfoParamsInclude.
const (
	ReadMultipleDeviceInfoParamsIncludeDeviceDetail ReadMultipleDeviceInfoParamsInclude = "deviceDetail"
)

// Defines values for ReadMultipleDeviceInfoParamsFieldsDeviceDetail.
const (
	ReadMultipleDeviceInfoParamsFieldsDeviceDetailComponents       ReadMultipleDeviceInfoParamsFieldsDeviceDetail = "components"
	ReadMultipleDeviceInfoParamsFieldsDeviceDetailConfigurations   ReadMultipleDeviceInfoParamsFieldsDeviceDetail = "configurations"
	ReadMultipleDeviceInfoParamsFieldsDeviceDetailConnectedDevices ReadMultipleDeviceInfoParamsFieldsDeviceDetail = "connectedDevices"
	ReadMultipleDeviceInfoParamsFieldsDeviceDetailDiscoveryStatus  ReadMultipleDeviceInfoParamsFieldsDeviceDetail = "discoveryStatus"
	ReadMultipleDeviceInfoParamsFieldsDeviceDetailInterfaces       ReadMultipleDeviceInfoParamsFieldsDeviceDetail = "interfaces"
	ReadMultipleDeviceInfoParamsFieldsDeviceDetailManageStatus     ReadMultipleDeviceInfoParamsFieldsDeviceDetail = "manageStatus"
)

// Defines values for ReadSingleDeviceInfoParamsInclude.
const (
	ReadSingleDeviceInfoParamsIncludeDeviceDetail ReadSingleDeviceInfoParamsInclude = "deviceDetail"
)

// Defines values for ReadSingleDeviceInfoParamsFieldsDeviceDetail.
const (
	ReadSingleDeviceInfoParamsFieldsDeviceDetailComponents       ReadSingleDeviceInfoParamsFieldsDeviceDetail = "components"
	ReadSingleDeviceInfoParamsFieldsDeviceDetailConfigurations   ReadSingleDeviceInfoParamsFieldsDeviceDetail = "configurations"
	ReadSingleDeviceInfoParamsFieldsDeviceDetailConnectedDevices ReadSingleDeviceInfoParamsFieldsDeviceDetail = "connectedDevices"
	ReadSingleDeviceInfoParamsFieldsDeviceDetailDiscoveryStatus  ReadSingleDeviceInfoParamsFieldsDeviceDetail = "discoveryStatus"
	ReadSingleDeviceInfoParamsFieldsDeviceDetailInterfaces       ReadSingleDeviceInfoParamsFieldsDeviceDetail = "interfaces"
	ReadSingleDeviceInfoParamsFieldsDeviceDetailManageStatus     ReadSingleDeviceInfoParamsFieldsDeviceDetail = "manageStatus"
)

// Defines values for ReadMultipleDeviceLifecycleParamsFilterSalesAvailability.
const (
	ReadMultipleDeviceLifecycleParamsFilterSalesAvailabilityAvailable    ReadMultipleDeviceLifecycleParamsFilterSalesAvailability = "available"
	ReadMultipleDeviceLifecycleParamsFilterSalesAvailabilityCovered      ReadMultipleDeviceLifecycleParamsFilterSalesAvailability = "covered"
	ReadMultipleDeviceLifecycleParamsFilterSalesAvailabilityEmpty        ReadMultipleDeviceLifecycleParamsFilterSalesAvailability = "empty"
	ReadMultipleDeviceLifecycleParamsFilterSalesAvailabilityExpired      ReadMultipleDeviceLifecycleParamsFilterSalesAvailability = "expired"
	ReadMultipleDeviceLifecycleParamsFilterSalesAvailabilitySecurityOnly ReadMultipleDeviceLifecycleParamsFilterSalesAvailability = "securityOnly"
	ReadMultipleDeviceLifecycleParamsFilterSalesAvailabilityUnpublished  ReadMultipleDeviceLifecycleParamsFilterSalesAvailability = "unpublished"
)

// Defines values for ReadMultipleDeviceLifecycleParamsFilterSoftwareMaintenanceStatus.
const (
	ReadMultipleDeviceLifecycleParamsFilterSoftwareMaintenanceStatusAvailable    ReadMultipleDeviceLifecycleParamsFilterSoftwareMaintenanceStatus = "available"
	ReadMultipleDeviceLifecycleParamsFilterSoftwareMaintenanceStatusCovered      ReadMultipleDeviceLifecycleParamsFilterSoftwareMaintenanceStatus = "covered"
	ReadMultipleDeviceLifecycleParamsFilterSoftwareMaintenanceStatusEmpty        ReadMultipleDeviceLifecycleParamsFilterSoftwareMaintenanceStatus = "empty"
	ReadMultipleDeviceLifecycleParamsFilterSoftwareMaintenanceStatusExpired      ReadMultipleDeviceLifecycleParamsFilterSoftwareMaintenanceStatus = "expired"
	ReadMultipleDeviceLifecycleParamsFilterSoftwareMaintenanceStatusSecurityOnly ReadMultipleDeviceLifecycleParamsFilterSoftwareMaintenanceStatus = "securityOnly"
	ReadMultipleDeviceLifecycleParamsFilterSoftwareMaintenanceStatusUnpublished  ReadMultipleDeviceLifecycleParamsFilterSoftwareMaintenanceStatus = "unpublished"
)

// Defines values for ReadMultipleDeviceLifecycleParamsFilterSecuritySoftwareMaintenanceStatus.
const (
	ReadMultipleDeviceLifecycleParamsFilterSecuritySoftwareMaintenanceStatusAvailable    ReadMultipleDeviceLifecycleParamsFilterSecuritySoftwareMaintenanceStatus = "available"
	ReadMultipleDeviceLifecycleParamsFilterSecuritySoftwareMaintenanceStatusCovered      ReadMultipleDeviceLifecycleParamsFilterSecuritySoftwareMaintenanceStatus = "covered"
	ReadMultipleDeviceLifecycleParamsFilterSecuritySoftwareMaintenanceStatusEmpty        ReadMultipleDeviceLifecycleParamsFilterSecuritySoftwareMaintenanceStatus = "empty"
	ReadMultipleDeviceLifecycleParamsFilterSecuritySoftwareMaintenanceStatusExpired      ReadMultipleDeviceLifecycleParamsFilterSecuritySoftwareMaintenanceStatus = "expired"
	ReadMultipleDeviceLifecycleParamsFilterSecuritySoftwareMaintenanceStatusSecurityOnly ReadMultipleDeviceLifecycleParamsFilterSecuritySoftwareMaintenanceStatus = "securityOnly"
	ReadMultipleDeviceLifecycleParamsFilterSecuritySoftwareMaintenanceStatusUnpublished  ReadMultipleDeviceLifecycleParamsFilterSecuritySoftwareMaintenanceStatus = "unpublished"
)

// Defines values for ReadMultipleDeviceLifecycleParamsFilterLastSupportStatus.
const (
	ReadMultipleDeviceLifecycleParamsFilterLastSupportStatusAvailable    ReadMultipleDeviceLifecycleParamsFilterLastSupportStatus = "available"
	ReadMultipleDeviceLifecycleParamsFilterLastSupportStatusCovered      ReadMultipleDeviceLifecycleParamsFilterLastSupportStatus = "covered"
	ReadMultipleDeviceLifecycleParamsFilterLastSupportStatusEmpty        ReadMultipleDeviceLifecycleParamsFilterLastSupportStatus = "empty"
	ReadMultipleDeviceLifecycleParamsFilterLastSupportStatusExpired      ReadMultipleDeviceLifecycleParamsFilterLastSupportStatus = "expired"
	ReadMultipleDeviceLifecycleParamsFilterLastSupportStatusSecurityOnly ReadMultipleDeviceLifecycleParamsFilterLastSupportStatus = "securityOnly"
	ReadMultipleDeviceLifecycleParamsFilterLastSupportStatusUnpublished  ReadMultipleDeviceLifecycleParamsFilterLastSupportStatus = "unpublished"
)

// Defines values for ReadMultipleEntityAuditParamsFilterCategory.
const (
	ReadMultipleEntityAuditParamsFilterCategoryRemoteBrowser ReadMultipleEntityAuditParamsFilterCategory = "remoteBrowser"
	ReadMultipleEntityAuditParamsFilterCategoryTerminal      ReadMultipleEntityAuditParamsFilterCategory = "terminal"
	ReadMultipleEntityAuditParamsFilterCategoryTunnel        ReadMultipleEntityAuditParamsFilterCategory = "tunnel"
	ReadMultipleEntityAuditParamsFilterCategoryUnknown       ReadMultipleEntityAuditParamsFilterCategory = "unknown"
)

// Defines values for ReadMultipleEntityAuditParamsFilterStatus.
const (
	ReadMultipleEntityAuditParamsFilterStatusClosed    ReadMultipleEntityAuditParamsFilterStatus = "closed"
	ReadMultipleEntityAuditParamsFilterStatusCreated   ReadMultipleEntityAuditParamsFilterStatus = "created"
	ReadMultipleEntityAuditParamsFilterStatusFailed    ReadMultipleEntityAuditParamsFilterStatus = "failed"
	ReadMultipleEntityAuditParamsFilterStatusInitiated ReadMultipleEntityAuditParamsFilterStatus = "initiated"
	ReadMultipleEntityAuditParamsFilterStatusUnknown   ReadMultipleEntityAuditParamsFilterStatus = "unknown"
)

// Defines values for ReadMultipleEntityNoteParamsFilterEntityType.
const (
	ReadMultipleEntityNoteParamsFilterEntityTypeDevice    ReadMultipleEntityNoteParamsFilterEntityType = "device"
	ReadMultipleEntityNoteParamsFilterEntityTypeInterface ReadMultipleEntityNoteParamsFilterEntityType = "interface"
	ReadMultipleEntityNoteParamsFilterEntityTypeNetwork   ReadMultipleEntityNoteParamsFilterEntityType = "network"
	ReadMultipleEntityNoteParamsFilterEntityTypeRoot      ReadMultipleEntityNoteParamsFilterEntityType = "root"
)

// Defines values for ReadMultipleInterfaceInfoParamsFilterInterfaceType.
const (
	ReadMultipleInterfaceInfoParamsFilterInterfaceTypeBluetooth                ReadMultipleInterfaceInfoParamsFilterInterfaceType = "bluetooth"
	ReadMultipleInterfaceInfoParamsFilterInterfaceTypeCdma                     ReadMultipleInterfaceInfoParamsFilterInterfaceType = "cdma"
	ReadMultipleInterfaceInfoParamsFilterInterfaceTypeCoax                     ReadMultipleInterfaceInfoParamsFilterInterfaceType = "coax"
	ReadMultipleInterfaceInfoParamsFilterInterfaceTypeCpu                      ReadMultipleInterfaceInfoParamsFilterInterfaceType = "cpu"
	ReadMultipleInterfaceInfoParamsFilterInterfaceTypeDistributedVirtualSwitch ReadMultipleInterfaceInfoParamsFilterInterfaceType = "distributedVirtualSwitch"
	ReadMultipleInterfaceInfoParamsFilterInterfaceTypeEthernet                 ReadMultipleInterfaceInfoParamsFilterInterfaceType = "ethernet"
	ReadMultipleInterfaceInfoParamsFilterInterfaceTypeFirewire                 ReadMultipleInterfaceInfoParamsFilterInterfaceType = "firewire"
	ReadMultipleInterfaceInfoParamsFilterInterfaceTypeGsm                      ReadMultipleInterfaceInfoParamsFilterInterfaceType = "gsm"
	ReadMultipleInterfaceInfoParamsFilterInterfaceTypeIeee8023AdLag            ReadMultipleInterfaceInfoParamsFilterInterfaceType = "ieee8023AdLag"
	ReadMultipleInterfaceInfoParamsFilterInterfaceTypeInferredWired            ReadMultipleInterfaceInfoParamsFilterInterfaceType = "inferredWired"
	ReadMultipleInterfaceInfoParamsFilterInterfaceTypeInferredWireless         ReadMultipleInterfaceInfoParamsFilterInterfaceType = "inferredWireless"
	ReadMultipleInterfaceInfoParamsFilterInterfaceTypeInterface                ReadMultipleInterfaceInfoParamsFilterInterfaceType = "interface"
	ReadMultipleInterfaceInfoParamsFilterInterfaceTypeLinkAggregation          ReadMultipleInterfaceInfoParamsFilterInterfaceType = "linkAggregation"
	ReadMultipleInterfaceInfoParamsFilterInterfaceTypeLoopback                 ReadMultipleInterfaceInfoParamsFilterInterfaceType = "loopback"
	ReadMultipleInterfaceInfoParamsFilterInterfaceTypeModem                    ReadMultipleInterfaceInfoParamsFilterInterfaceType = "modem"
	ReadMultipleInterfaceInfoParamsFilterInterfaceTypeOptical                  ReadMultipleInterfaceInfoParamsFilterInterfaceType = "optical"
	ReadMultipleInterfaceInfoParamsFilterInterfaceTypeOther                    ReadMultipleInterfaceInfoParamsFilterInterfaceType = "other"
	ReadMultipleInterfaceInfoParamsFilterInterfaceTypeParallel                 ReadMultipleInterfaceInfoParamsFilterInterfaceType = "parallel"
	ReadMultipleInterfaceInfoParamsFilterInterfaceTypePpp                      ReadMultipleInterfaceInfoParamsFilterInterfaceType = "ppp"
	ReadMultipleInterfaceInfoParamsFilterInterfaceTypeRadiomac                 ReadMultipleInterfaceInfoParamsFilterInterfaceType = "radiomac"
	ReadMultipleInterfaceInfoParamsFilterInterfaceTypeRs232                    ReadMultipleInterfaceInfoParamsFilterInterfaceType = "rs232"
	ReadMultipleInterfaceInfoParamsFilterInterfaceTypeTunnel                   ReadMultipleInterfaceInfoParamsFilterInterfaceType = "tunnel"
	ReadMultipleInterfaceInfoParamsFilterInterfaceTypeUnknown                  ReadMultipleInterfaceInfoParamsFilterInterfaceType = "unknown"
	ReadMultipleInterfaceInfoParamsFilterInterfaceTypeUsb                      ReadMultipleInterfaceInfoParamsFilterInterfaceType = "usb"
	ReadMultipleInterfaceInfoParamsFilterInterfaceTypeVirtualBridge            ReadMultipleInterfaceInfoParamsFilterInterfaceType = "virtualBridge"
	ReadMultipleInterfaceInfoParamsFilterInterfaceTypeVirtualNic               ReadMultipleInterfaceInfoParamsFilterInterfaceType = "virtualNic"
	ReadMultipleInterfaceInfoParamsFilterInterfaceTypeVirtualSwitch            ReadMultipleInterfaceInfoParamsFilterInterfaceType = "virtualSwitch"
	ReadMultipleInterfaceInfoParamsFilterInterfaceTypeVlan                     ReadMultipleInterfaceInfoParamsFilterInterfaceType = "vlan"
	ReadMultipleInterfaceInfoParamsFilterInterfaceTypeWifi                     ReadMultipleInterfaceInfoParamsFilterInterfaceType = "wifi"
	ReadMultipleInterfaceInfoParamsFilterInterfaceTypeWimax                    ReadMultipleInterfaceInfoParamsFilterInterfaceType = "wimax"
)

// Defines values for ReadMultipleInterfaceInfoParamsFilterOperationalStatus.
const (
	ReadMultipleInterfaceInfoParamsFilterOperationalStatusDormant        ReadMultipleInterfaceInfoParamsFilterOperationalStatus = "dormant"
	ReadMultipleInterfaceInfoParamsFilterOperationalStatusLowerLayerDown ReadMultipleInterfaceInfoParamsFilterOperationalStatus = "lowerLayerDown"
	ReadMultipleInterfaceInfoParamsFilterOperationalStatusNotPresent     ReadMultipleInterfaceInfoParamsFilterOperationalStatus = "notPresent"
	ReadMultipleInterfaceInfoParamsFilterOperationalStatusOffline        ReadMultipleInterfaceInfoParamsFilterOperationalStatus = "offline"
	ReadMultipleInterfaceInfoParamsFilterOperationalStatusOnline         ReadMultipleInterfaceInfoParamsFilterOperationalStatus = "online"
	ReadMultipleInterfaceInfoParamsFilterOperationalStatusTesting        ReadMultipleInterfaceInfoParamsFilterOperationalStatus = "testing"
	ReadMultipleInterfaceInfoParamsFilterOperationalStatusUnknown        ReadMultipleInterfaceInfoParamsFilterOperationalStatus = "unknown"
	ReadMultipleInterfaceInfoParamsFilterOperationalStatusUnreachable    ReadMultipleInterfaceInfoParamsFilterOperationalStatus = "unreachable"
)

// Defines values for ReadMultipleNetworkDetailsParamsFilterNetworkType.
const (
	ReadMultipleNetworkDetailsParamsFilterNetworkTypeInternet ReadMultipleNetworkDetailsParamsFilterNetworkType = "internet"
	ReadMultipleNetworkDetailsParamsFilterNetworkTypeLayer2   ReadMultipleNetworkDetailsParamsFilterNetworkType = "layer2"
	ReadMultipleNetworkDetailsParamsFilterNetworkTypeLoopback ReadMultipleNetworkDetailsParamsFilterNetworkType = "loopback"
	ReadMultipleNetworkDetailsParamsFilterNetworkTypeNetwork  ReadMultipleNetworkDetailsParamsFilterNetworkType = "network"
	ReadMultipleNetworkDetailsParamsFilterNetworkTypeRouted   ReadMultipleNetworkDetailsParamsFilterNetworkType = "routed"
	ReadMultipleNetworkDetailsParamsFilterNetworkTypeVlan     ReadMultipleNetworkDetailsParamsFilterNetworkType = "vlan"
	ReadMultipleNetworkDetailsParamsFilterNetworkTypeWifi     ReadMultipleNetworkDetailsParamsFilterNetworkType = "wifi"
)

// Defines values for ReadMultipleNetworkDetailsParamsFilterScanStatus.
const (
	ReadMultipleNetworkDetailsParamsFilterScanStatusFalse      ReadMultipleNetworkDetailsParamsFilterScanStatus = "false"
	ReadMultipleNetworkDetailsParamsFilterScanStatusNotAllowed ReadMultipleNetworkDetailsParamsFilterScanStatus = "notAllowed"
	ReadMultipleNetworkDetailsParamsFilterScanStatusTrue       ReadMultipleNetworkDetailsParamsFilterScanStatus = "true"
	ReadMultipleNetworkDetailsParamsFilterScanStatusUnknown    ReadMultipleNetworkDetailsParamsFilterScanStatus = "unknown"
)

// Defines values for ReadMultipleNetworkDetailsParamsFilterScope.
const (
	ReadMultipleNetworkDetailsParamsFilterScopePrivate ReadMultipleNetworkDetailsParamsFilterScope = "private"
	ReadMultipleNetworkDetailsParamsFilterScopePublic  ReadMultipleNetworkDetailsParamsFilterScope = "public"
)

// Defines values for ReadMultipleNetworkInfoParamsFilterNetworkType.
const (
	ReadMultipleNetworkInfoParamsFilterNetworkTypeInternet ReadMultipleNetworkInfoParamsFilterNetworkType = "internet"
	ReadMultipleNetworkInfoParamsFilterNetworkTypeLayer2   ReadMultipleNetworkInfoParamsFilterNetworkType = "layer2"
	ReadMultipleNetworkInfoParamsFilterNetworkTypeLoopback ReadMultipleNetworkInfoParamsFilterNetworkType = "loopback"
	ReadMultipleNetworkInfoParamsFilterNetworkTypeNetwork  ReadMultipleNetworkInfoParamsFilterNetworkType = "network"
	ReadMultipleNetworkInfoParamsFilterNetworkTypeRouted   ReadMultipleNetworkInfoParamsFilterNetworkType = "routed"
	ReadMultipleNetworkInfoParamsFilterNetworkTypeVlan     ReadMultipleNetworkInfoParamsFilterNetworkType = "vlan"
	ReadMultipleNetworkInfoParamsFilterNetworkTypeWifi     ReadMultipleNetworkInfoParamsFilterNetworkType = "wifi"
)

// Defines values for ReadMultipleNetworkInfoParamsFilterScanStatus.
const (
	ReadMultipleNetworkInfoParamsFilterScanStatusFalse      ReadMultipleNetworkInfoParamsFilterScanStatus = "false"
	ReadMultipleNetworkInfoParamsFilterScanStatusNotAllowed ReadMultipleNetworkInfoParamsFilterScanStatus = "notAllowed"
	ReadMultipleNetworkInfoParamsFilterScanStatusTrue       ReadMultipleNetworkInfoParamsFilterScanStatus = "true"
	ReadMultipleNetworkInfoParamsFilterScanStatusUnknown    ReadMultipleNetworkInfoParamsFilterScanStatus = "unknown"
)

// Defines values for ReadMultipleNetworkInfoParamsInclude.
const (
	ReadMultipleNetworkInfoParamsIncludeNetworkDetail ReadMultipleNetworkInfoParamsInclude = "networkDetail"
)

// Defines values for ReadMultipleNetworkInfoParamsFieldsNetworkDetail.
const (
	ReadMultipleNetworkInfoParamsFieldsNetworkDetailCollectorSelection  ReadMultipleNetworkInfoParamsFieldsNetworkDetail = "collectorSelection"
	ReadMultipleNetworkInfoParamsFieldsNetworkDetailExcludedIpAddresses ReadMultipleNetworkInfoParamsFieldsNetworkDetail = "excludedIpAddresses"
	ReadMultipleNetworkInfoParamsFieldsNetworkDetailPrimaryCollector    ReadMultipleNetworkInfoParamsFieldsNetworkDetail = "primaryCollector"
	ReadMultipleNetworkInfoParamsFieldsNetworkDetailScope               ReadMultipleNetworkInfoParamsFieldsNetworkDetail = "scope"
	ReadMultipleNetworkInfoParamsFieldsNetworkDetailSecondaryCollectors ReadMultipleNetworkInfoParamsFieldsNetworkDetail = "secondaryCollectors"
)

// Defines values for ReadSingleNetworkInfoParamsInclude.
const (
	ReadSingleNetworkInfoParamsIncludeNetworkDetail ReadSingleNetworkInfoParamsInclude = "networkDetail"
)

// Defines values for ReadSingleNetworkInfoParamsFieldsNetworkDetail.
const (
	ReadSingleNetworkInfoParamsFieldsNetworkDetailCollectorSelection  ReadSingleNetworkInfoParamsFieldsNetworkDetail = "collectorSelection"
	ReadSingleNetworkInfoParamsFieldsNetworkDetailExcludedIpAddresses ReadSingleNetworkInfoParamsFieldsNetworkDetail = "excludedIpAddresses"
	ReadSingleNetworkInfoParamsFieldsNetworkDetailPrimaryCollector    ReadSingleNetworkInfoParamsFieldsNetworkDetail = "primaryCollector"
	ReadSingleNetworkInfoParamsFieldsNetworkDetailScope               ReadSingleNetworkInfoParamsFieldsNetworkDetail = "scope"
	ReadSingleNetworkInfoParamsFieldsNetworkDetailSecondaryCollectors ReadSingleNetworkInfoParamsFieldsNetworkDetail = "secondaryCollectors"
)

// Defines values for ReadMultipleSnmpPollerSettingsParamsFilterUseAs.
const (
	Poller   ReadMultipleSnmpPollerSettingsParamsFilterUseAs = "poller"
	SerialNo ReadMultipleSnmpPollerSettingsParamsFilterUseAs = "serialNo"
)

// Defines values for ReadMultipleSnmpPollerSettingDevicesParamsFilterOnlineStatus.
const (
	ReadMultipleSnmpPollerSettingDevicesParamsFilterOnlineStatusDormant        ReadMultipleSnmpPollerSettingDevicesParamsFilterOnlineStatus = "dormant"
	ReadMultipleSnmpPollerSettingDevicesParamsFilterOnlineStatusLowerLayerDown ReadMultipleSnmpPollerSettingDevicesParamsFilterOnlineStatus = "lowerLayerDown"
	ReadMultipleSnmpPollerSettingDevicesParamsFilterOnlineStatusNotPresent     ReadMultipleSnmpPollerSettingDevicesParamsFilterOnlineStatus = "notPresent"
	ReadMultipleSnmpPollerSettingDevicesParamsFilterOnlineStatusOffline        ReadMultipleSnmpPollerSettingDevicesParamsFilterOnlineStatus = "offline"
	ReadMultipleSnmpPollerSettingDevicesParamsFilterOnlineStatusOnline         ReadMultipleSnmpPollerSettingDevicesParamsFilterOnlineStatus = "online"
	ReadMultipleSnmpPollerSettingDevicesParamsFilterOnlineStatusTesting        ReadMultipleSnmpPollerSettingDevicesParamsFilterOnlineStatus = "testing"
	ReadMultipleSnmpPollerSettingDevicesParamsFilterOnlineStatusUnknown        ReadMultipleSnmpPollerSettingDevicesParamsFilterOnlineStatus = "unknown"
	ReadMultipleSnmpPollerSettingDevicesParamsFilterOnlineStatusUnreachable    ReadMultipleSnmpPollerSettingDevicesParamsFilterOnlineStatus = "unreachable"
)

// Defines values for ReadComponentStatisticsParamsFilterInterval.
const (
	ReadComponentStatisticsParamsFilterIntervalDay    ReadComponentStatisticsParamsFilterInterval = "day"
	ReadComponentStatisticsParamsFilterIntervalHour   ReadComponentStatisticsParamsFilterInterval = "hour"
	ReadComponentStatisticsParamsFilterIntervalMinute ReadComponentStatisticsParamsFilterInterval = "minute"
)

// Defines values for ReadComponentStatisticsParamsComponentType.
const (
	ReadComponentStatisticsParamsComponentTypeCpu         ReadComponentStatisticsParamsComponentType = "cpu"
	ReadComponentStatisticsParamsComponentTypeCpuCore     ReadComponentStatisticsParamsComponentType = "cpuCore"
	ReadComponentStatisticsParamsComponentTypeDisk        ReadComponentStatisticsParamsComponentType = "disk"
	ReadComponentStatisticsParamsComponentTypeFan         ReadComponentStatisticsParamsComponentType = "fan"
	ReadComponentStatisticsParamsComponentTypeMemory      ReadComponentStatisticsParamsComponentType = "memory"
	ReadComponentStatisticsParamsComponentTypePowerSupply ReadComponentStatisticsParamsComponentType = "powerSupply"
	ReadComponentStatisticsParamsComponentTypeSystemBoard ReadComponentStatisticsParamsComponentType = "systemBoard"
)

// Defines values for ReadComponentStatisticsParamsStatId.
const (
	ReadComponentStatisticsParamsStatIdCapacity     ReadComponentStatisticsParamsStatId = "capacity"
	ReadComponentStatisticsParamsStatIdCounters     ReadComponentStatisticsParamsStatId = "counters"
	ReadComponentStatisticsParamsStatIdIdle         ReadComponentStatisticsParamsStatId = "idle"
	ReadComponentStatisticsParamsStatIdLatency      ReadComponentStatisticsParamsStatId = "latency"
	ReadComponentStatisticsParamsStatIdPower        ReadComponentStatisticsParamsStatId = "power"
	ReadComponentStatisticsParamsStatIdQueueLatency ReadComponentStatisticsParamsStatId = "queueLatency"
	ReadComponentStatisticsParamsStatIdRate         ReadComponentStatisticsParamsStatId = "rate"
	ReadComponentStatisticsParamsStatIdReadiness    ReadComponentStatisticsParamsStatId = "readiness"
	ReadComponentStatisticsParamsStatIdReady        ReadComponentStatisticsParamsStatId = "ready"
	ReadComponentStatisticsParamsStatIdSpeed        ReadComponentStatisticsParamsStatId = "speed"
	ReadComponentStatisticsParamsStatIdSwap         ReadComponentStatisticsParamsStatId = "swap"
	ReadComponentStatisticsParamsStatIdSwapRate     ReadComponentStatisticsParamsStatId = "swapRate"
	ReadComponentStatisticsParamsStatIdTemperature  ReadComponentStatisticsParamsStatId = "temperature"
	ReadComponentStatisticsParamsStatIdTotalLatency ReadComponentStatisticsParamsStatId = "totalLatency"
	ReadComponentStatisticsParamsStatIdUtilization  ReadComponentStatisticsParamsStatId = "utilization"
)

// Defines values for ReadDeviceStatisticsParamsFilterInterval.
const (
	ReadDeviceStatisticsParamsFilterIntervalDay    ReadDeviceStatisticsParamsFilterInterval = "day"
	ReadDeviceStatisticsParamsFilterIntervalHour   ReadDeviceStatisticsParamsFilterInterval = "hour"
	ReadDeviceStatisticsParamsFilterIntervalMinute ReadDeviceStatisticsParamsFilterInterval = "minute"
)

// Defines values for ReadDeviceStatisticsParamsStatId.
const (
	ReadDeviceStatisticsParamsStatIdBandwidth          ReadDeviceStatisticsParamsStatId = "bandwidth"
	ReadDeviceStatisticsParamsStatIdCpuUtilization     ReadDeviceStatisticsParamsStatId = "cpuUtilization"
	ReadDeviceStatisticsParamsStatIdMemoryUtilization  ReadDeviceStatisticsParamsStatId = "memoryUtilization"
	ReadDeviceStatisticsParamsStatIdPacketBroadcast    ReadDeviceStatisticsParamsStatId = "packetBroadcast"
	ReadDeviceStatisticsParamsStatIdPacketMulticast    ReadDeviceStatisticsParamsStatId = "packetMulticast"
	ReadDeviceStatisticsParamsStatIdPacketUnicast      ReadDeviceStatisticsParamsStatId = "packetUnicast"
	ReadDeviceStatisticsParamsStatIdStorageUtilization ReadDeviceStatisticsParamsStatId = "storageUtilization"
)

// Defines values for ReadDeviceAvailabilityStatisticsParamsFilterInterval.
const (
	ReadDeviceAvailabilityStatisticsParamsFilterIntervalDay    ReadDeviceAvailabilityStatisticsParamsFilterInterval = "day"
	ReadDeviceAvailabilityStatisticsParamsFilterIntervalHour   ReadDeviceAvailabilityStatisticsParamsFilterInterval = "hour"
	ReadDeviceAvailabilityStatisticsParamsFilterIntervalMinute ReadDeviceAvailabilityStatisticsParamsFilterInterval = "minute"
)

// Defines values for ReadDeviceAvailabilityStatisticsParamsStatId.
const (
	Outage ReadDeviceAvailabilityStatisticsParamsStatId = "outage"
	Uptime ReadDeviceAvailabilityStatisticsParamsStatId = "uptime"
)

// Defines values for ReadInterfaceStatisticsParamsFilterInterval.
const (
	ReadInterfaceStatisticsParamsFilterIntervalDay    ReadInterfaceStatisticsParamsFilterInterval = "day"
	ReadInterfaceStatisticsParamsFilterIntervalHour   ReadInterfaceStatisticsParamsFilterInterval = "hour"
	ReadInterfaceStatisticsParamsFilterIntervalMinute ReadInterfaceStatisticsParamsFilterInterval = "minute"
)

// Defines values for ReadInterfaceStatisticsParamsFilterInterfaceType.
const (
	ReadInterfaceStatisticsParamsFilterInterfaceTypeBluetooth                ReadInterfaceStatisticsParamsFilterInterfaceType = "bluetooth"
	ReadInterfaceStatisticsParamsFilterInterfaceTypeCdma                     ReadInterfaceStatisticsParamsFilterInterfaceType = "cdma"
	ReadInterfaceStatisticsParamsFilterInterfaceTypeCoax                     ReadInterfaceStatisticsParamsFilterInterfaceType = "coax"
	ReadInterfaceStatisticsParamsFilterInterfaceTypeCpu                      ReadInterfaceStatisticsParamsFilterInterfaceType = "cpu"
	ReadInterfaceStatisticsParamsFilterInterfaceTypeDistributedVirtualSwitch ReadInterfaceStatisticsParamsFilterInterfaceType = "distributedVirtualSwitch"
	ReadInterfaceStatisticsParamsFilterInterfaceTypeEthernet                 ReadInterfaceStatisticsParamsFilterInterfaceType = "ethernet"
	ReadInterfaceStatisticsParamsFilterInterfaceTypeFirewire                 ReadInterfaceStatisticsParamsFilterInterfaceType = "firewire"
	ReadInterfaceStatisticsParamsFilterInterfaceTypeGsm                      ReadInterfaceStatisticsParamsFilterInterfaceType = "gsm"
	ReadInterfaceStatisticsParamsFilterInterfaceTypeIeee8023AdLag            ReadInterfaceStatisticsParamsFilterInterfaceType = "ieee8023AdLag"
	ReadInterfaceStatisticsParamsFilterInterfaceTypeInferredWired            ReadInterfaceStatisticsParamsFilterInterfaceType = "inferredWired"
	ReadInterfaceStatisticsParamsFilterInterfaceTypeInferredWireless         ReadInterfaceStatisticsParamsFilterInterfaceType = "inferredWireless"
	ReadInterfaceStatisticsParamsFilterInterfaceTypeInterface                ReadInterfaceStatisticsParamsFilterInterfaceType = "interface"
	ReadInterfaceStatisticsParamsFilterInterfaceTypeLinkAggregation          ReadInterfaceStatisticsParamsFilterInterfaceType = "linkAggregation"
	ReadInterfaceStatisticsParamsFilterInterfaceTypeLoopback                 ReadInterfaceStatisticsParamsFilterInterfaceType = "loopback"
	ReadInterfaceStatisticsParamsFilterInterfaceTypeModem                    ReadInterfaceStatisticsParamsFilterInterfaceType = "modem"
	ReadInterfaceStatisticsParamsFilterInterfaceTypeOptical                  ReadInterfaceStatisticsParamsFilterInterfaceType = "optical"
	ReadInterfaceStatisticsParamsFilterInterfaceTypeOther                    ReadInterfaceStatisticsParamsFilterInterfaceType = "other"
	ReadInterfaceStatisticsParamsFilterInterfaceTypeParallel                 ReadInterfaceStatisticsParamsFilterInterfaceType = "parallel"
	ReadInterfaceStatisticsParamsFilterInterfaceTypePpp                      ReadInterfaceStatisticsParamsFilterInterfaceType = "ppp"
	ReadInterfaceStatisticsParamsFilterInterfaceTypeRadiomac                 ReadInterfaceStatisticsParamsFilterInterfaceType = "radiomac"
	ReadInterfaceStatisticsParamsFilterInterfaceTypeRs232                    ReadInterfaceStatisticsParamsFilterInterfaceType = "rs232"
	ReadInterfaceStatisticsParamsFilterInterfaceTypeTunnel                   ReadInterfaceStatisticsParamsFilterInterfaceType = "tunnel"
	ReadInterfaceStatisticsParamsFilterInterfaceTypeUnknown                  ReadInterfaceStatisticsParamsFilterInterfaceType = "unknown"
	ReadInterfaceStatisticsParamsFilterInterfaceTypeUsb                      ReadInterfaceStatisticsParamsFilterInterfaceType = "usb"
	ReadInterfaceStatisticsParamsFilterInterfaceTypeVirtualBridge            ReadInterfaceStatisticsParamsFilterInterfaceType = "virtualBridge"
	ReadInterfaceStatisticsParamsFilterInterfaceTypeVirtualNic               ReadInterfaceStatisticsParamsFilterInterfaceType = "virtualNic"
	ReadInterfaceStatisticsParamsFilterInterfaceTypeVirtualSwitch            ReadInterfaceStatisticsParamsFilterInterfaceType = "virtualSwitch"
	ReadInterfaceStatisticsParamsFilterInterfaceTypeVlan                     ReadInterfaceStatisticsParamsFilterInterfaceType = "vlan"
	ReadInterfaceStatisticsParamsFilterInterfaceTypeWifi                     ReadInterfaceStatisticsParamsFilterInterfaceType = "wifi"
	ReadInterfaceStatisticsParamsFilterInterfaceTypeWimax                    ReadInterfaceStatisticsParamsFilterInterfaceType = "wimax"
)

// Defines values for ReadInterfaceStatisticsParamsStatId.
const (
	ReadInterfaceStatisticsParamsStatIdBandwidth       ReadInterfaceStatisticsParamsStatId = "bandwidth"
	ReadInterfaceStatisticsParamsStatIdPacketBroadcast ReadInterfaceStatisticsParamsStatId = "packetBroadcast"
	ReadInterfaceStatisticsParamsStatIdPacketDiscard   ReadInterfaceStatisticsParamsStatId = "packetDiscard"
	ReadInterfaceStatisticsParamsStatIdPacketLoss      ReadInterfaceStatisticsParamsStatId = "packetLoss"
	ReadInterfaceStatisticsParamsStatIdPacketMulticast ReadInterfaceStatisticsParamsStatId = "packetMulticast"
	ReadInterfaceStatisticsParamsStatIdPacketUnicast   ReadInterfaceStatisticsParamsStatId = "packetUnicast"
	ReadInterfaceStatisticsParamsStatIdUtilization     ReadInterfaceStatisticsParamsStatId = "utilization"
)

// Defines values for ReadOidStatisticsParamsStatId.
const (
	DeviceMonitor ReadOidStatisticsParamsStatId = "deviceMonitor"
)

// Defines values for ReadServiceStatisticsParamsFilterInterval.
const (
	ReadServiceStatisticsParamsFilterIntervalDay    ReadServiceStatisticsParamsFilterInterval = "day"
	ReadServiceStatisticsParamsFilterIntervalHour   ReadServiceStatisticsParamsFilterInterval = "hour"
	ReadServiceStatisticsParamsFilterIntervalMinute ReadServiceStatisticsParamsFilterInterval = "minute"
)

// Defines values for ReadServiceStatisticsParamsStatId.
const (
	PingPacket ReadServiceStatisticsParamsStatId = "pingPacket"
	PingTime   ReadServiceStatisticsParamsStatId = "pingTime"
)

// Defines values for ReadMultipleSnmpPollerSettingIntHistoryParamsFilterInterval.
const (
	Day    ReadMultipleSnmpPollerSettingIntHistoryParamsFilterInterval = "day"
	Hour   ReadMultipleSnmpPollerSettingIntHistoryParamsFilterInterval = "hour"
	Minute ReadMultipleSnmpPollerSettingIntHistoryParamsFilterInterval = "minute"
)

// DeviceTypeSchema defines model for DeviceTypeSchema.
type DeviceTypeSchema string

// AccessPoint defines model for accessPoint.
type AccessPoint struct {
	Attributes *struct {
		// DeviceName Device's name
		DeviceName string `json:"deviceName"`

		// DeviceType What type of device it is
		DeviceType AccessPointAttributesDeviceType `json:"deviceType"`

		// LastModified When one of this device's attributes was last modified
		LastModified *string `json:"lastModified,omitempty"`

		// LastSeenTime Last seen online date/time of a device
		LastSeenTime *string `json:"lastSeenTime,omitempty"`

		// SsidList List of the AP's SSIDs
		SsidList *[]string `json:"ssidList,omitempty"`
	} `json:"attributes,omitempty"`

	// Id The unique identifier for a device
	Id *string `json:"id,omitempty"`

	// Links List of links relating to this device
	Links         *DeviceExtendedDetailsDeviceLinks `json:"links,omitempty"`
	Relationships *struct {
		// DeviceDetail Additional attributes and details relating to this device
		DeviceDetail *DeviceRelationshipsDeviceDetail `json:"deviceDetail,omitempty"`

		// Networks This device's networks
		Networks *DeviceRelationshipsNetworks `json:"networks,omitempty"`

		// Tenant This entity's owning tenant
		Tenant *Tenant `json:"tenant,omitempty"`

		// WirelessClients List of wireless clients associated to this controller
		WirelessClients *[]struct {
			// Attributes This wireless client's attributes
			Attributes *struct {
				// Channel The wireless client's radio channel
				Channel    string `json:"channel"`
				DeviceName string `json:"deviceName"`

				// DeviceType What type of device it is
				DeviceType AccessPointRelationshipsWirelessClientsAttributesDeviceType `json:"deviceType"`

				// Rssi The wireless's clients RSSI
				Rssi string `json:"rssi"`

				// Ssid The wireless client's SSID
				Ssid string `json:"ssid"`
			} `json:"attributes,omitempty"`

			// Id This wireless client's ID
			Id *string `json:"id,omitempty"`

			// Links List of links relating to this device
			Links *struct {
				// Info Link to this device's device info
				Info *string `json:"info,omitempty"`

				// Self Link to this device's extended details
				Self *string `json:"self,omitempty"`
			} `json:"links,omitempty"`

			// Type Resource type of this wireless client
			Type *AccessPointRelationshipsWirelessClientsType `json:"type,omitempty"`
		} `json:"wirelessClients,omitempty"`
	} `json:"relationships,omitempty"`

	// Type The type of object in the API
	Type *AccessPointType `json:"type,omitempty"`
}

// AccessPointAttributesDeviceType What type of device it is
type AccessPointAttributesDeviceType string

// AccessPointRelationshipsWirelessClientsAttributesDeviceType What type of device it is
type AccessPointRelationshipsWirelessClientsAttributesDeviceType string

// AccessPointRelationshipsWirelessClientsType Resource type of this wireless client
type AccessPointRelationshipsWirelessClientsType string

// AccessPointType The type of object in the API
type AccessPointType string

// AlertAttributes The type-specific properties of the alerts object returned
type AlertAttributes struct {
	// AlertDefinitionId Alert Definition ID linked to Alert type
	AlertDefinitionId *string `json:"alertDefinitionId,omitempty"`

	// Description This description of the alert
	Description string `json:"description"`

	// DetectedOn The date time of the alert's message was detected
	DetectedOn string `json:"detectedOn"`

	// Dismissed Whether the alert has been dismissed or not
	Dismissed bool `json:"dismissed"`

	// Dispatched Whether the alert has been dispatched or not
	Dispatched bool `json:"dispatched"`

	// ExternalTicket The external ticket list associated to current alert message
	ExternalTicket []AlertAttributesExternalTicket `json:"externalTicket"`

	// Name This alert's name
	Name string `json:"name"`

	// Severity This severity of the alert message
	Severity AlertAttributesSeverity `json:"severity"`

	// SpecificationId Specification ID linked to Alert type. Use alertDefinitionId instead
	// Deprecated:
	SpecificationId *string `json:"specificationId,omitempty"`

	// Status High level description of this alert's status
	Status AlertAttributesStatus `json:"status"`
}

// AlertAttributesSeverity This severity of the alert message
type AlertAttributesSeverity string

// AlertAttributesStatus High level description of this alert's status
type AlertAttributesStatus string

// AlertAttributesExternalTicket defines model for alertAttributes_externalTicket.
type AlertAttributesExternalTicket struct {
	// Id The unique identifier for the external ticket
	Id *string `json:"id,omitempty"`

	// System The system of external ticket
	System *AlertAttributesExternalTicketSystem `json:"system,omitempty"`
}

// AlertAttributesExternalTicketSystem The system of external ticket
type AlertAttributesExternalTicketSystem string

// AlertHistoryInfoReadMultiple Root level object per the json-api spec
type AlertHistoryInfoReadMultiple struct {
	Data *[]AlertsResourceObject `json:"data,omitempty"`

	// Links Pagination related links
	Links *AlertHistoryInfoReadMultipleLinks `json:"links,omitempty"`

	// Meta The meta object that contains non-standard meta-information
	Meta *Meta `json:"meta,omitempty"`
}

// AlertHistoryInfoReadMultipleLinks Pagination related links
type AlertHistoryInfoReadMultipleLinks struct {
	// First First page in the data set
	First *string `json:"first,omitempty"`

	// Last Last page in the data set
	Last *string `json:"last,omitempty"`

	// Next Next page in the data set
	Next *string `json:"next,omitempty"`

	// Prev Previous page in the data set
	Prev *string `json:"prev,omitempty"`
}

// AlertHistoryInfoReadSingle Root level object per the json-api spec
type AlertHistoryInfoReadSingle struct {
	// Data The template for a resource object representing an Alert message
	Data *AlertsResourceObject `json:"data,omitempty"`
}

// AlertRelationships This interface's relationships to other resources
type AlertRelationships struct {
	// Entity This entity associated to the alert message
	Entity *AlertRelationshipsEntity `json:"entity,omitempty"`

	// RelatedAlert The related alert linked to the current one
	RelatedAlert *AlertRelationshipsRelatedAlert `json:"relatedAlert,omitempty"`

	// Tenant This entity's owning tenant
	Tenant *Tenant `json:"tenant,omitempty"`
}

// AlertRelationshipsEntity This entity associated to the alert message
type AlertRelationshipsEntity struct {
	// Data An entity resource object
	Data *AlertRelationshipsEntityData `json:"data,omitempty"`
}

// AlertRelationshipsEntityData An entity resource object
type AlertRelationshipsEntityData struct {
	// Id The unique identifier for this entity
	Id *string `json:"id,omitempty"`

	// Links Links relating to this entity
	Links *AlertRelationshipsEntityDataLinks `json:"links,omitempty"`

	// Type The type of object in the api
	Type *AlertRelationshipsEntityDataType `json:"type,omitempty"`
}

// AlertRelationshipsEntityDataType The type of object in the api
type AlertRelationshipsEntityDataType string

// AlertRelationshipsEntityDataLinks Links relating to this entity
type AlertRelationshipsEntityDataLinks struct {
	// Dashboard Link to this interface's dashboard in the Auvik UI
	Dashboard *string `json:"dashboard,omitempty"`

	// Self Link to this set of network info
	Self *string `json:"self,omitempty"`
}

// AlertRelationshipsRelatedAlert The related alert linked to the current one
type AlertRelationshipsRelatedAlert struct {
	// Data This alert associated to the related alert
	Data *AlertRelationshipsRelatedAlertData `json:"data,omitempty"`
}

// AlertRelationshipsRelatedAlertData This alert associated to the related alert
type AlertRelationshipsRelatedAlertData struct {
	// Attributes The attribute of the related alert
	Attributes *AlertRelationshipsRelatedAlertDataAttributes `json:"attributes,omitempty"`

	// Id The unique identifier for this alert
	Id *string `json:"id,omitempty"`

	// Links Links relating to this interface
	Links *AlertRelationshipsRelatedAlertDataLinks `json:"links,omitempty"`

	// Type The type of object in the api
	Type *AlertRelationshipsRelatedAlertDataType `json:"type,omitempty"`
}

// AlertRelationshipsRelatedAlertDataType The type of object in the api
type AlertRelationshipsRelatedAlertDataType string

// AlertRelationshipsRelatedAlertDataAttributes The attribute of the related alert
type AlertRelationshipsRelatedAlertDataAttributes struct {
	// Name The name of related alert
	Name *string `json:"name,omitempty"`
}

// AlertRelationshipsRelatedAlertDataLinks Links relating to this interface
type AlertRelationshipsRelatedAlertDataLinks struct {
	// Dashboard Link to this interface's dashboard in the Auvik UI
	Dashboard *string `json:"dashboard,omitempty"`

	// Self Link to this alert info
	Self *string `json:"self,omitempty"`
}

// AlertsResourceObject The template for a resource object representing an Alert message
type AlertsResourceObject struct {
	// Attributes The type-specific properties of the alerts object returned
	Attributes *AlertAttributes `json:"attributes,omitempty"`

	// Id The unique identifier for this alert
	Id *string `json:"id,omitempty"`

	// Links List of links relating to this alert
	Links *AlertsResourceObjectLinks `json:"links,omitempty"`

	// Relationships This interface's relationships to other resources
	Relationships *AlertRelationships `json:"relationships,omitempty"`

	// Type The type of object in the api
	Type *AlertsResourceObjectType `json:"type,omitempty"`
}

// AlertsResourceObjectType The type of object in the api
type AlertsResourceObjectType string

// AlertsResourceObjectLinks List of links relating to this alert
type AlertsResourceObjectLinks struct {
	// Dashboard Link to this alert's dashboard in the Auvik UI
	Dashboard *string `json:"dashboard,omitempty"`

	// Self Link to this alert
	Self *string `json:"self,omitempty"`
}

// AuditAttributes The type-specific properties of the audit object returned
type AuditAttributes struct {
	// Action What action is being performed
	Action AuditAttributesAction `json:"action"`

	// Category What service is taking/took this audited action
	Category AuditAttributesCategory `json:"category"`

	// Cause Reason the audited action is in its current state
	Cause string `json:"cause"`

	// Data Tertiary data related to the audited action
	Data string `json:"data"`

	// DateStarted When this audited action was started
	DateStarted string `json:"dateStarted"`

	// Direction Whether is request is being made into or out of the entity's client
	Direction AuditAttributesDirection `json:"direction"`

	// LastActive When this audited action was last active
	LastActive string `json:"lastActive"`

	// Status State of the audited action
	Status AuditAttributesStatus `json:"status"`

	// User The user name associated to this audit log
	User string `json:"user"`
}

// AuditAttributesAction What action is being performed
type AuditAttributesAction string

// AuditAttributesCategory What service is taking/took this audited action
type AuditAttributesCategory string

// AuditAttributesDirection Whether is request is being made into or out of the entity's client
type AuditAttributesDirection string

// AuditAttributesStatus State of the audited action
type AuditAttributesStatus string

// AuditRelationships This entity audit's relationships to other resources
type AuditRelationships struct {
	// Device This device associated with this audit log
	Device *AuditRelationshipsDevice `json:"device,omitempty"`

	// Tenant This entity's owning tenant
	Tenant *Tenant `json:"tenant,omitempty"`
}

// AuditRelationshipsDevice This device associated with this audit log
type AuditRelationshipsDevice struct {
	// Data A device resource object
	Data *AuditRelationshipsDeviceData `json:"data,omitempty"`
}

// AuditRelationshipsDeviceData A device resource object
type AuditRelationshipsDeviceData struct {
	// Attributes The type-specific properties of the device object returned
	Attributes *AuditRelationshipsDeviceDataAttributes `json:"attributes,omitempty"`

	// Id The unique identifier for a device
	Id *string `json:"id,omitempty"`

	// Type The type of object in the API.
	Type *AuditRelationshipsDeviceDataType `json:"type,omitempty"`
}

// AuditRelationshipsDeviceDataType The type of object in the API.
type AuditRelationshipsDeviceDataType string

// AuditRelationshipsDeviceDataAttributes The type-specific properties of the device object returned
type AuditRelationshipsDeviceDataAttributes struct {
	// DeviceName Device's name
	DeviceName *string `json:"deviceName,omitempty"`
}

// AuditsResourceObject The template for a resource object representing an audit log
type AuditsResourceObject struct {
	// Attributes The type-specific properties of the audit object returned
	Attributes *AuditAttributes `json:"attributes,omitempty"`

	// Id The unique identifier for this audit
	Id *string `json:"id,omitempty"`

	// Links List of links relating to this entity audit
	Links *AuditsResourceObjectLinks `json:"links,omitempty"`

	// Relationships This entity audit's relationships to other resources
	Relationships *AuditRelationships `json:"relationships,omitempty"`

	// Type The type of object in the API
	Type *AuditsResourceObjectType `json:"type,omitempty"`
}

// AuditsResourceObjectType The type of object in the API
type AuditsResourceObjectType string

// AuditsResourceObjectLinks List of links relating to this entity audit
type AuditsResourceObjectLinks struct {
	// Self Link to this entity audit
	Self *string `json:"self,omitempty"`
}

// BaseDeviceExtendedDetailsAttributes The type-specific properties of the devices object returned
type BaseDeviceExtendedDetailsAttributes struct {
	// DeviceName Device's name
	DeviceName string `json:"deviceName"`

	// LastModified When one of this device's attributes was last modified
	LastModified *string `json:"lastModified,omitempty"`

	// LastSeenTime Last seen online date/time of a device
	LastSeenTime *string `json:"lastSeenTime,omitempty"`
}

// BasicError defines model for basicError.
type BasicError struct {
	// Errors Array of error objects
	Errors []map[string]interface{} `json:"errors"`
}

// ClientUsageAttributes The type-specific properties of the client usage object returned
type ClientUsageAttributes struct {
	// BillableDays Days this client (and its children) was billable for across the usage period.
	BillableDays *float32 `json:"billableDays,omitempty"`

	// ClientUsage Roll up of client usage for this client (and its children if a multi-client)
	ClientUsage *ClientUsageAttributesClientUsage `json:"clientUsage,omitempty"`

	// DeviceUsage Roll up of device usage on this client (and its children if a multi-client)
	DeviceUsage *ClientUsageAttributesDeviceUsage `json:"deviceUsage,omitempty"`

	// DomainPrefix Client tenant's domain prefix/name
	DomainPrefix *string `json:"domainPrefix,omitempty"`

	// UsagePeriod Description of the usage period that's been asked for
	UsagePeriod *ClientUsageAttributesUsagePeriod `json:"usagePeriod,omitempty"`
}

// ClientUsageAttributesClientUsage Roll up of client usage for this client (and its children if a multi-client)
type ClientUsageAttributesClientUsage struct {
	// AverageDaysByClientType The average billable client days for this client and all of its children across the usage period, by client type, starting on April 1st, 2021
	AverageDaysByClientType *ClientUsageAttributesClientUsageAverageDaysByClientType `json:"averageDaysByClientType,omitempty"`

	// AveragedDays Average billable client days for this client (and its children) across the usage period
	AveragedDays *float32 `json:"averagedDays,omitempty"`

	// TotalDays Total billable client days for this client (and its children) across the usage period
	TotalDays *float32 `json:"totalDays,omitempty"`

	// TotalDaysByClientType The total billable client days for this client and all of its children across the usage period, by client type, starting on April 1st, 2021
	TotalDaysByClientType *ClientUsageAttributesClientUsageTotalDaysByClientType `json:"totalDaysByClientType,omitempty"`
}

// ClientUsageAttributesClientUsageAverageDaysByClientType The average billable client days for this client and all of its children across the usage period, by client type, starting on April 1st, 2021
type ClientUsageAttributesClientUsageAverageDaysByClientType struct {
	// Essentials Average billable client days for clients set to Essentials
	Essentials *float32 `json:"essentials,omitempty"`

	// Light Average billable client days for clients set to Light
	Light *float32 `json:"light,omitempty"`

	// Notier Average billable client days for clients with no set client type
	Notier *float32 `json:"notier,omitempty"`

	// Performance Average billable client days for clients set to Performance
	Performance *float32 `json:"performance,omitempty"`
}

// ClientUsageAttributesClientUsageTotalDaysByClientType The total billable client days for this client and all of its children across the usage period, by client type, starting on April 1st, 2021
type ClientUsageAttributesClientUsageTotalDaysByClientType struct {
	// Essentials Billable client days for clients set to Essentials
	Essentials *float32 `json:"essentials,omitempty"`

	// Light Billable client days for clients set to Light
	Light *float32 `json:"light,omitempty"`

	// Notier Billable client days for clients with no set client type
	Notier *float32 `json:"notier,omitempty"`

	// Performance Billable client days for clients set to Performance
	Performance *float32 `json:"performance,omitempty"`
}

// ClientUsageAttributesDeviceUsage Roll up of device usage on this client (and its children if a multi-client)
type ClientUsageAttributesDeviceUsage struct {
	// AverageDays The average billable device days for this client and all of its children across the usage period
	AverageDays *float32 `json:"averageDays,omitempty"`

	// AverageDaysByClientType The average billable device days for this client and all of its children across the usage period, separate by devices' owning client type
	AverageDaysByClientType *ClientUsageAttributesDeviceUsageAverageDaysByClientType `json:"averageDaysByClientType,omitempty"`

	// TotalDays The total billable device days for this client and all of its children across the usage period
	TotalDays *float32 `json:"totalDays,omitempty"`

	// TotalDaysByClientType The total billable device days for this client and all of its children across the usage period, separate by devices' owning client type
	TotalDaysByClientType *ClientUsageAttributesDeviceUsageTotalDaysByClientType `json:"totalDaysByClientType,omitempty"`
}

// ClientUsageAttributesDeviceUsageAverageDaysByClientType The average billable device days for this client and all of its children across the usage period, separate by devices' owning client type
type ClientUsageAttributesDeviceUsageAverageDaysByClientType struct {
	// Essentials Average billable devices days for devices on a client set to Essentials
	Essentials *float32 `json:"essentials,omitempty"`

	// Light Average billable devices days for devices on a client set to Light
	Light *float32 `json:"light,omitempty"`

	// Notier Average billable devices days for devices on a client with no set client type
	Notier *float32 `json:"notier,omitempty"`

	// Performance Average billable devices days for devices on a client set to Performance
	Performance *float32 `json:"performance,omitempty"`
}

// ClientUsageAttributesDeviceUsageTotalDaysByClientType The total billable device days for this client and all of its children across the usage period, separate by devices' owning client type
type ClientUsageAttributesDeviceUsageTotalDaysByClientType struct {
	// Essentials Billable devices days for devices on a client set to Essentials
	Essentials *float32 `json:"essentials,omitempty"`

	// Light Billable devices days for devices on a client set to Light
	Light *float32 `json:"light,omitempty"`

	// Notier Billable devices days for devices on a client with no set client type
	Notier *float32 `json:"notier,omitempty"`

	// Performance Billable devices days for devices on a client set to Performance
	Performance *float32 `json:"performance,omitempty"`
}

// ClientUsageAttributesUsagePeriod Description of the usage period that's been asked for
type ClientUsageAttributesUsagePeriod struct {
	// EndDate Date and time the usage period ends
	EndDate *string `json:"endDate,omitempty"`

	// LengthInDays Number of days in the usage period
	LengthInDays *float32 `json:"lengthInDays,omitempty"`

	// StartDate Date and time the usage period starts
	StartDate *string `json:"startDate,omitempty"`
}

// ClientUsageRead Root level object per the json-api spec
type ClientUsageRead struct {
	Data *[]ClientUsageResourceObject `json:"data,omitempty"`
}

// ClientUsageRelationships Client usage object's relationships to other resources
type ClientUsageRelationships struct {
	// Clients List of clients' usage (if any) under this client
	Clients *ClientUsageRelationshipsClients `json:"clients,omitempty"`

	// Devices List of billable device usage under this client
	Devices *ClientUsageRelationshipsDevices `json:"devices,omitempty"`
}

// ClientUsageRelationshipsClients List of clients' usage (if any) under this client
type ClientUsageRelationshipsClients struct {
	// Data A client's usage for the given usage period
	Data *[]ClientUsageRelationshipsClientsData `json:"data,omitempty"`
}

// ClientUsageRelationshipsClientsAttributes The type-specific properties of the device usage object returned
type ClientUsageRelationshipsClientsAttributes struct {
	// DomainPrefix Client tenant's domain prefix/name
	DomainPrefix *string `json:"domainPrefix,omitempty"`

	// TotalBillableDays Total billable days for this client across the usage period
	TotalBillableDays *float32 `json:"totalBillableDays,omitempty"`
}

// ClientUsageRelationshipsClientsData defines model for clientUsageRelationships_clients_data.
type ClientUsageRelationshipsClientsData struct {
	// Attributes The type-specific properties of the device usage object returned
	Attributes *ClientUsageRelationshipsClientsAttributes `json:"attributes,omitempty"`

	// Id Client's ID
	Id *string `json:"id,omitempty"`

	// Links Links relating to this client's usage
	Links *ClientUsageRelationshipsClientsLinks `json:"links,omitempty"`

	// Type The type of this resource object
	Type *ClientUsageRelationshipsClientsDataType `json:"type,omitempty"`
}

// ClientUsageRelationshipsClientsDataType The type of this resource object
type ClientUsageRelationshipsClientsDataType string

// ClientUsageRelationshipsClientsLinks Links relating to this client's usage
type ClientUsageRelationshipsClientsLinks struct {
	// Self Link to this client's usage in the Usage API
	Self *string `json:"self,omitempty"`
}

// ClientUsageRelationshipsDevices List of billable device usage under this client
type ClientUsageRelationshipsDevices struct {
	// Data A device's usage for the given usage period
	Data *[]ClientUsageRelationshipsDevicesData `json:"data,omitempty"`
}

// ClientUsageRelationshipsDevicesAttributes The type-specific properties of the device usage object returned
type ClientUsageRelationshipsDevicesAttributes struct {
	// ClientName This device's owning client's name/domainPrefix
	ClientName *string `json:"clientName,omitempty"`

	// Name Device's name
	Name *string `json:"name,omitempty"`

	// TotalDays Total billable days for this device across the usage period
	TotalDays *float32 `json:"totalDays,omitempty"`
}

// ClientUsageRelationshipsDevicesData defines model for clientUsageRelationships_devices_data.
type ClientUsageRelationshipsDevicesData struct {
	// Attributes The type-specific properties of the device usage object returned
	Attributes *ClientUsageRelationshipsDevicesAttributes `json:"attributes,omitempty"`

	// Id Device's ID
	Id *string `json:"id,omitempty"`

	// Links Links relating to this device's usage
	Links *ClientUsageRelationshipsDevicesLinks `json:"links,omitempty"`

	// Type The type of this resource object
	Type *ClientUsageRelationshipsDevicesDataType `json:"type,omitempty"`
}

// ClientUsageRelationshipsDevicesDataType The type of this resource object
type ClientUsageRelationshipsDevicesDataType string

// ClientUsageRelationshipsDevicesLinks Links relating to this device's usage
type ClientUsageRelationshipsDevicesLinks struct {
	// DeviceRecord Link to this device's record in the Device Info API
	DeviceRecord *string `json:"deviceRecord,omitempty"`

	// Self Link to this device's usage in the Usage API
	Self *string `json:"self,omitempty"`
}

// ClientUsageResourceObject Client usage resource object
type ClientUsageResourceObject struct {
	// Attributes The type-specific properties of the client usage object returned
	Attributes *ClientUsageAttributes `json:"attributes,omitempty"`

	// Id Client tenant's ID
	Id *string `json:"id,omitempty"`

	// Links Links relating to this client's usage
	Links *ClientUsageResourceObjectLinks `json:"links,omitempty"`

	// Relationships Client usage object's relationships to other resources
	Relationships *ClientUsageRelationships `json:"relationships,omitempty"`

	// Type The type of this resource object
	Type *ClientUsageResourceObjectType `json:"type,omitempty"`
}

// ClientUsageResourceObjectType The type of this resource object
type ClientUsageResourceObjectType string

// ClientUsageResourceObjectLinks Links relating to this client's usage
type ClientUsageResourceObjectLinks struct {
	// Dashboard Link to the billing usage dashboard in the Auvik UI.
	Dashboard *string `json:"dashboard,omitempty"`

	// Self Link to this client's usage in the Usage API
	Self *string `json:"self,omitempty"`

	// TenantRecord Link to this client's record in the Tenants API
	TenantRecord *string `json:"tenantRecord,omitempty"`
}

// ComponentAttributes The type-specific properties of the components object returned
type ComponentAttributes struct {
	// ComponentName This component's name
	ComponentName string `json:"componentName"`

	// ComponentType This component's type
	ComponentType ComponentAttributesComponentType `json:"componentType"`

	// CurrentStatus High level description of this component's status
	CurrentStatus ComponentAttributesCurrentStatus `json:"currentStatus"`

	// LastModified When one of this component's attributes was last modified
	LastModified string `json:"lastModified"`
}

// ComponentAttributesComponentType This component's type
type ComponentAttributesComponentType string

// ComponentAttributesCurrentStatus High level description of this component's status
type ComponentAttributesCurrentStatus string

// ComponentInfoReadMultiple Root level object per the json-api spec
type ComponentInfoReadMultiple struct {
	Data *[]ComponentsResourceObject `json:"data,omitempty"`

	// Links Pagination related links
	Links *ComponentInfoReadMultipleLinks `json:"links,omitempty"`

	// Meta The meta object that contains non-standard meta-information
	Meta *Meta `json:"meta,omitempty"`
}

// ComponentInfoReadMultipleLinks Pagination related links
type ComponentInfoReadMultipleLinks struct {
	// First First page in the data set
	First *string `json:"first,omitempty"`

	// Last Last page in the data set
	Last *string `json:"last,omitempty"`

	// Next Next page in the data set
	Next *string `json:"next,omitempty"`

	// Prev Previous page in the data set
	Prev *string `json:"prev,omitempty"`
}

// ComponentInfoReadSingle Root level object per the json-api spec
type ComponentInfoReadSingle struct {
	// Data The template for a resource object representing an Auvik component
	Data *ComponentsResourceObject `json:"data,omitempty"`
}

// ComponentRelationships This component's relationships to other resources
type ComponentRelationships struct {
	// ParentDevice The device associated with this component
	ParentDevice *ComponentRelationshipsParentDevice `json:"parentDevice,omitempty"`

	// Tenant This entity's owning tenant
	Tenant *Tenant `json:"tenant,omitempty"`
}

// ComponentRelationshipsParentDevice The device associated with this component
type ComponentRelationshipsParentDevice struct {
	// Data A device resource object
	Data *ComponentRelationshipsParentDeviceData `json:"data,omitempty"`
}

// ComponentRelationshipsParentDeviceData A device resource object
type ComponentRelationshipsParentDeviceData struct {
	// Attributes The type-specific properties of the device object returned
	Attributes *DeviceLifecycleRelationshipsDeviceDataAttributes `json:"attributes,omitempty"`

	// Id The unique identifier for a device
	Id *string `json:"id,omitempty"`

	// Type The type of object in the API.
	Type *ComponentRelationshipsParentDeviceDataType `json:"type,omitempty"`
}

// ComponentRelationshipsParentDeviceDataType The type of object in the API.
type ComponentRelationshipsParentDeviceDataType string

// ComponentStatisticsRead Root level object per the json-api spec
type ComponentStatisticsRead struct {
	// Data Component statistics resource object
	Data *ComponentStatisticsResourceObject `json:"data,omitempty"`
}

// ComponentStatisticsRelationships Component statistics object's relationships to other resources
type ComponentStatisticsRelationships struct {
	// Component This component the statistics are reported against
	Component *ComponentStatisticsRelationshipsComponent `json:"component,omitempty"`

	// Tenant This entity's owning tenant
	Tenant *Tenant `json:"tenant,omitempty"`
}

// ComponentStatisticsRelationshipsComponent This component the statistics are reported against
type ComponentStatisticsRelationshipsComponent struct {
	// Data A component resource object
	Data *ComponentStatisticsRelationshipsComponentData `json:"data,omitempty"`
}

// ComponentStatisticsRelationshipsComponentData A component resource object
type ComponentStatisticsRelationshipsComponentData struct {
	// ComponentName This component's name
	ComponentName *string `json:"componentName,omitempty"`

	// ComponentType This component's type
	ComponentType *string `json:"componentType,omitempty"`

	// Id This component's ID
	Id *string `json:"id,omitempty"`

	// Links Links relating to this component
	Links *ComponentStatisticsRelationshipsComponentDataLinks `json:"links,omitempty"`

	// ParentDevice This component's parent device
	ParentDevice *string `json:"parentDevice,omitempty"`

	// Type The type of the object
	Type *string `json:"type,omitempty"`
}

// ComponentStatisticsRelationshipsComponentDataLinks Links relating to this component
type ComponentStatisticsRelationshipsComponentDataLinks struct {
	// Dashboard Link to this component's dashboard in Auvik
	Dashboard *string `json:"dashboard,omitempty"`

	// ParentDevice Link to this component's parent device dashboard in Auvik
	ParentDevice *string `json:"parentDevice,omitempty"`

	// Self Link to this set of component info
	Self *string `json:"self,omitempty"`
}

// ComponentStatisticsResourceObject Component statistics resource object
type ComponentStatisticsResourceObject struct {
	// Attributes The type-specific properties of the statistics object returned
	Attributes *StatisticsAttributes `json:"attributes,omitempty"`

	// Id ID for this statistic
	Id *string `json:"id,omitempty"`

	// Links Links relating to this component statistics
	Links *ComponentStatisticsResourceObjectLinks `json:"links,omitempty"`

	// Relationships Component statistics object's relationships to other resources
	Relationships *ComponentStatisticsRelationships `json:"relationships,omitempty"`

	// Type The type of this resource object
	Type *ComponentStatisticsResourceObjectType `json:"type,omitempty"`
}

// ComponentStatisticsResourceObjectType The type of this resource object
type ComponentStatisticsResourceObjectType string

// ComponentStatisticsResourceObjectLinks Links relating to this component statistics
type ComponentStatisticsResourceObjectLinks struct {
	// Dashboard Link to this component's record in the Component Info API
	Dashboard *string `json:"dashboard,omitempty"`

	// Self Link used to get this result set
	Self *string `json:"self,omitempty"`
}

// ComponentsResourceObject The template for a resource object representing an Auvik component
type ComponentsResourceObject struct {
	// Attributes The type-specific properties of the components object returned
	Attributes *ComponentAttributes `json:"attributes,omitempty"`

	// Id The unique identifier for this component
	Id *string `json:"id,omitempty"`

	// Links List of links relating to this component
	Links *ComponentsResourceObjectLinks `json:"links,omitempty"`

	// Relationships This component's relationships to other resources
	Relationships *ComponentRelationships `json:"relationships,omitempty"`

	// Type The type of object in the API
	Type *ComponentsResourceObjectType `json:"type,omitempty"`
}

// ComponentsResourceObjectType The type of object in the API
type ComponentsResourceObjectType string

// ComponentsResourceObjectLinks List of links relating to this component
type ComponentsResourceObjectLinks struct {
	// Dashboard Link to this component's dashboard in Auvik
	Dashboard *string `json:"dashboard,omitempty"`

	// Self Link to this component
	Self *string `json:"self,omitempty"`
}

// ConfigAttributes The type-specific properties of the configuration object returned
type ConfigAttributes struct {
	// BackupTime The time at which this configuration was backed up.
	BackupTime string `json:"backupTime"`

	// IsRunning Whether or not the configuration is currently running on the device.
	IsRunning bool `json:"isRunning"`
}

// ConfigReadMultiple Root level object per the json-api spec
type ConfigReadMultiple struct {
	Data *[]ConfigResourceObject `json:"data,omitempty"`

	// Links Pagination related links
	Links *ConfigReadMultipleLinks `json:"links,omitempty"`

	// Meta The meta object that contains non-standard meta-information
	Meta *Meta `json:"meta,omitempty"`
}

// ConfigReadMultipleLinks Pagination related links
type ConfigReadMultipleLinks struct {
	// First First page in the data set
	First *string `json:"first,omitempty"`

	// Last Last page in the data set
	Last *string `json:"last,omitempty"`

	// Next Next page in the data set
	Next *string `json:"next,omitempty"`

	// Prev Previous page in the data set
	Prev *string `json:"prev,omitempty"`
}

// ConfigReadSingle Root level object per the json-api spec
type ConfigReadSingle struct {
	// Data The template for a resource object representing an Auvik device's configuration
	Data *ConfigResourceObject `json:"data,omitempty"`
}

// ConfigRelationships This configurations relationships to other resources
type ConfigRelationships struct {
	// Device The device corresponding to this configuration
	Device *DeviceLifecycleRelationshipsDevice `json:"device,omitempty"`

	// Tenant This entity's owning tenant
	Tenant *Tenant `json:"tenant,omitempty"`
}

// ConfigResourceObject The template for a resource object representing an Auvik device's configuration
type ConfigResourceObject struct {
	// Attributes The type-specific properties of the configuration object returned
	Attributes *ConfigAttributes `json:"attributes,omitempty"`

	// Id The unique identifier for a configuration
	Id *string `json:"id,omitempty"`

	// Links List of links relating to this configuration
	Links *ConfigResourceObjectLinks `json:"links,omitempty"`

	// Relationships This configurations relationships to other resources
	Relationships *ConfigRelationships `json:"relationships,omitempty"`

	// Type The type of object in the API
	Type *ConfigResourceObjectType `json:"type,omitempty"`
}

// ConfigResourceObjectType The type of object in the API
type ConfigResourceObjectType string

// ConfigResourceObjectLinks List of links relating to this configuration
type ConfigResourceObjectLinks struct {
	// Dashboard Link to this configuration in Auvik dashboard
	Dashboard *string `json:"dashboard,omitempty"`

	// Self Link to this configuration
	Self *string `json:"self,omitempty"`
}

// Controller defines model for controller.
type Controller struct {
	Attributes *struct {
		// DeviceName Device's name
		DeviceName string `json:"deviceName"`

		// DeviceType What type of device it is
		DeviceType ControllerAttributesDeviceType `json:"deviceType"`

		// LastModified When one of this device's attributes was last modified
		LastModified *string `json:"lastModified,omitempty"`

		// LastSeenTime Last seen online date/time of a device
		LastSeenTime *string `json:"lastSeenTime,omitempty"`
	} `json:"attributes,omitempty"`

	// Id The unique identifier for a device
	Id *string `json:"id,omitempty"`

	// Links List of links relating to this device
	Links         *DeviceExtendedDetailsDeviceLinks `json:"links,omitempty"`
	Relationships *struct {
		// AccessPoints List of access points associated to this controller
		AccessPoints *[]struct {
			// Attributes This access point's attributes
			Attributes *struct {
				// DeviceName The AP's name
				DeviceName string `json:"deviceName"`
			} `json:"attributes,omitempty"`

			// Id The AP's device ID
			Id *string `json:"id,omitempty"`

			// Links List of links relating to this device
			Links *struct {
				// Info Link to this device's device info
				Info *string `json:"info,omitempty"`

				// Self Link to this device's extended details
				Self *string `json:"self,omitempty"`
			} `json:"links,omitempty"`

			// Type This access point's device type
			Type *string `json:"type,omitempty"`
		} `json:"accessPoints,omitempty"`

		// DeviceDetail Additional attributes and details relating to this device
		DeviceDetail *DeviceRelationshipsDeviceDetail `json:"deviceDetail,omitempty"`

		// Networks This device's networks
		Networks *DeviceRelationshipsNetworks `json:"networks,omitempty"`

		// Tenant This entity's owning tenant
		Tenant *Tenant `json:"tenant,omitempty"`
	} `json:"relationships,omitempty"`

	// Type The type of object in the API
	Type *ControllerType `json:"type,omitempty"`
}

// ControllerAttributesDeviceType What type of device it is
type ControllerAttributesDeviceType string

// ControllerType The type of object in the API
type ControllerType string

// Device The template for a resource object representing a device
type Device struct {
	// Data The type-specific properties of the SNMP Poller's Device object returned
	Data *DeviceData `json:"data,omitempty"`
}

// DeviceAttributes The type-specific properties of the devices object returned
type DeviceAttributes struct {
	// Description Description
	Description string `json:"description"`

	// DeviceName Device's name
	DeviceName string `json:"deviceName"`

	// DeviceType What type of device it is
	DeviceType DeviceAttributesDeviceType `json:"deviceType"`

	// FirmwareVersion Device's firmware version
	FirmwareVersion string `json:"firmwareVersion"`

	// IpAddresses Device's local IP addresses
	IpAddresses []string `json:"ipAddresses"`

	// LastModified When one of this device's attributes was last modified
	LastModified string `json:"lastModified"`

	// LastSeenTime Last seen online date/time of a device
	LastSeenTime *string `json:"lastSeenTime,omitempty"`

	// MakeModel Make and model of this device
	MakeModel string `json:"makeModel"`

	// OnlineStatus Device's online status
	OnlineStatus DeviceAttributesOnlineStatus `json:"onlineStatus"`

	// SerialNumber Device's serial number
	SerialNumber string `json:"serialNumber"`

	// SoftwareVersion Devices software version, if known
	SoftwareVersion string `json:"softwareVersion"`

	// VendorName Vendor name for this device
	VendorName string `json:"vendorName"`
}

// DeviceAttributesDeviceType What type of device it is
type DeviceAttributesDeviceType string

// DeviceAttributesOnlineStatus Device's online status
type DeviceAttributesOnlineStatus string

// DeviceAvailabilityStatisticsRead Root level object per the json-api spec
type DeviceAvailabilityStatisticsRead struct {
	// Data Device availability statistics resource object
	Data *DeviceAvailabilityStatisticsResourceObject `json:"data,omitempty"`
}

// DeviceAvailabilityStatisticsResourceObject Device availability statistics resource object
type DeviceAvailabilityStatisticsResourceObject struct {
	// Attributes The type-specific properties of the statistics object returned
	Attributes *StatisticsAttributes `json:"attributes,omitempty"`

	// Id ID for this statistic
	Id *string `json:"id,omitempty"`

	// Links Links relating to this device statistics
	Links *DeviceStatisticsResourceObjectLinks `json:"links,omitempty"`

	// Relationships Device statistics object's relationships to other resources
	Relationships *DeviceStatisticsRelationships `json:"relationships,omitempty"`

	// Type The type of this resource object
	Type *DeviceAvailabilityStatisticsResourceObjectType `json:"type,omitempty"`
}

// DeviceAvailabilityStatisticsResourceObjectType The type of this resource object
type DeviceAvailabilityStatisticsResourceObjectType string

// DeviceDetailsAttributes The type-specific properties of the devices object returned
type DeviceDetailsAttributes struct {
	// DiscoveryStatus High level statuses of discovery services
	DiscoveryStatus DeviceDetailsAttributesDiscoveryStatus `json:"discoveryStatus"`

	// ManageStatus Whether this device is managed by Auvik or not
	ManageStatus bool `json:"manageStatus"`

	// TrafficInsightsStatus The status of TrafficInsights on this device
	TrafficInsightsStatus DeviceDetailsAttributesTrafficInsightsStatus `json:"trafficInsightsStatus"`
}

// DeviceDetailsAttributesTrafficInsightsStatus The status of TrafficInsights on this device
type DeviceDetailsAttributesTrafficInsightsStatus string

// DeviceDetailsAttributesDiscoveryStatus High level statuses of discovery services
type DeviceDetailsAttributesDiscoveryStatus struct {
	Login  *DeviceDetailsAttributesDiscoveryStatusLogin  `json:"login,omitempty"`
	Snmp   *DeviceDetailsAttributesDiscoveryStatusSnmp   `json:"snmp,omitempty"`
	Vmware *DeviceDetailsAttributesDiscoveryStatusVmware `json:"vmware,omitempty"`
	Wmi    *DeviceDetailsAttributesDiscoveryStatusWmi    `json:"wmi,omitempty"`
}

// DeviceDetailsAttributesDiscoveryStatusLogin defines model for DeviceDetailsAttributesDiscoveryStatus.Login.
type DeviceDetailsAttributesDiscoveryStatusLogin string

// DeviceDetailsAttributesDiscoveryStatusSnmp defines model for DeviceDetailsAttributesDiscoveryStatus.Snmp.
type DeviceDetailsAttributesDiscoveryStatusSnmp string

// DeviceDetailsAttributesDiscoveryStatusVmware defines model for DeviceDetailsAttributesDiscoveryStatus.Vmware.
type DeviceDetailsAttributesDiscoveryStatusVmware string

// DeviceDetailsAttributesDiscoveryStatusWmi defines model for DeviceDetailsAttributesDiscoveryStatus.Wmi.
type DeviceDetailsAttributesDiscoveryStatusWmi string

// DeviceDetailsExtendedReadMultiple Root level object per the json-api spec
type DeviceDetailsExtendedReadMultiple struct {
	Data *[]DeviceExtendedDetailResourceObject `json:"data,omitempty"`

	// Links Pagination related links
	Links *DeviceDetailsExtendedReadMultipleLinks `json:"links,omitempty"`

	// Meta The meta object that contains non-standard meta-information
	Meta *Meta `json:"meta,omitempty"`
}

// DeviceDetailsExtendedReadMultipleLinks Pagination related links
type DeviceDetailsExtendedReadMultipleLinks struct {
	// First First page in the data set
	First *string `json:"first,omitempty"`

	// Last Last page in the data set
	Last *string `json:"last,omitempty"`

	// Next Next page in the data set
	Next *string `json:"next,omitempty"`

	// Prev Previous page in the data set
	Prev *string `json:"prev,omitempty"`
}

// DeviceDetailsExtendedReadSingle Root level object per the json-api spec
type DeviceDetailsExtendedReadSingle struct {
	Data *DeviceExtendedDetailResourceObject `json:"data,omitempty"`
}

// DeviceDetailsReadMultiple Root level object per the json-api spec
type DeviceDetailsReadMultiple struct {
	Data *[]DeviceDetailsResourceObject `json:"data,omitempty"`

	// Links Pagination related links
	Links *DeviceDetailsReadMultipleLinks `json:"links,omitempty"`

	// Meta The meta object that contains non-standard meta-information
	Meta *Meta `json:"meta,omitempty"`
}

// DeviceDetailsReadMultipleLinks Pagination related links
type DeviceDetailsReadMultipleLinks struct {
	// First First page in the data set
	First *string `json:"first,omitempty"`

	// Last Last page in the data set
	Last *string `json:"last,omitempty"`

	// Next Next page in the data set
	Next *string `json:"next,omitempty"`

	// Prev Previous page in the data set
	Prev *string `json:"prev,omitempty"`
}

// DeviceDetailsReadSingle Root level object per the json-api spec
type DeviceDetailsReadSingle struct {
	// Data The template for a resource object representing an Auvik device's extra details
	Data *DeviceDetailsResourceObject `json:"data,omitempty"`
}

// DeviceDetailsRelationships This device's relationships to other resources
type DeviceDetailsRelationships struct {
	// Components The components of a device
	Components *DeviceDetailsRelationshipsComponents `json:"components,omitempty"`

	// Configurations This device's configurations
	Configurations *DeviceDetailsRelationshipsConfigurations `json:"configurations,omitempty"`

	// ConnectedDevices List of other devices connected to this device
	ConnectedDevices *DeviceDetailsRelationshipsConnectedDevices `json:"connectedDevices,omitempty"`

	// Interfaces This device's interfaces
	Interfaces *DeviceDetailsRelationshipsInterfaces `json:"interfaces,omitempty"`

	// Tenant This entity's owning tenant
	Tenant *Tenant `json:"tenant,omitempty"`
}

// DeviceDetailsRelationshipsComponents The components of a device
type DeviceDetailsRelationshipsComponents struct {
	// Data A component resource object
	Data []DeviceDetailsRelationshipsComponentsData `json:"data"`
}

// DeviceDetailsRelationshipsComponentsAttributes The type-specific properties of the component object returned
type DeviceDetailsRelationshipsComponentsAttributes struct {
	// ComponentName This component's name
	ComponentName string `json:"componentName"`

	// ComponentType This component's type
	ComponentType DeviceDetailsRelationshipsComponentsAttributesComponentType `json:"componentType"`
	// Deprecated:
	ConfigurationId string `json:"configurationId"`
	// Deprecated:
	ConfigurationIndex string `json:"configurationIndex"`
}

// DeviceDetailsRelationshipsComponentsAttributesComponentType This component's type
type DeviceDetailsRelationshipsComponentsAttributesComponentType string

// DeviceDetailsRelationshipsComponentsData defines model for deviceDetailsRelationships_components_data.
type DeviceDetailsRelationshipsComponentsData struct {
	// Attributes The type-specific properties of the component object returned
	Attributes *DeviceDetailsRelationshipsComponentsAttributes `json:"attributes,omitempty"`

	// Id The unique identifier for the component associated to the device
	Id *string `json:"id,omitempty"`

	// Links Links relating to this component
	Links *DeviceDetailsRelationshipsComponentsLinks `json:"links,omitempty"`

	// Type The type of object in the API
	Type *DeviceDetailsRelationshipsComponentsDataType `json:"type,omitempty"`
}

// DeviceDetailsRelationshipsComponentsDataType The type of object in the API
type DeviceDetailsRelationshipsComponentsDataType string

// DeviceDetailsRelationshipsComponentsLinks Links relating to this component
type DeviceDetailsRelationshipsComponentsLinks struct {
	// Dashboard Link to this component's dashboard in Auvik
	Dashboard *string `json:"dashboard,omitempty"`

	// Self Link to this component
	Self *string `json:"self,omitempty"`
}

// DeviceDetailsRelationshipsConfigurations This device's configurations
type DeviceDetailsRelationshipsConfigurations struct {
	// Data A configuration resource object
	Data []DeviceDetailsRelationshipsConfigurationsData `json:"data"`
}

// DeviceDetailsRelationshipsConfigurationsAttributes The type-specific properties of the configuration object returned
type DeviceDetailsRelationshipsConfigurationsAttributes struct {
	// BackupTime Last backup time of the configuration
	BackupTime string `json:"backupTime"`

	// IsRunning Whether the configuration is currently running
	IsRunning bool `json:"isRunning"`
}

// DeviceDetailsRelationshipsConfigurationsData defines model for deviceDetailsRelationships_configurations_data.
type DeviceDetailsRelationshipsConfigurationsData struct {
	// Attributes The type-specific properties of the configuration object returned
	Attributes *DeviceDetailsRelationshipsConfigurationsAttributes `json:"attributes,omitempty"`

	// Id The unique identifier for the device associated to the configuration
	Id *string `json:"id,omitempty"`

	// Links Links relating to this device's configuration
	Links *DeviceDetailsRelationshipsConfigurationsLinks `json:"links,omitempty"`

	// Type The type of object in the API
	Type *DeviceDetailsRelationshipsConfigurationsDataType `json:"type,omitempty"`
}

// DeviceDetailsRelationshipsConfigurationsDataType The type of object in the API
type DeviceDetailsRelationshipsConfigurationsDataType string

// DeviceDetailsRelationshipsConfigurationsLinks Links relating to this device's configuration
type DeviceDetailsRelationshipsConfigurationsLinks struct {
	// Self Link to this configuration
	Self *string `json:"self,omitempty"`
}

// DeviceDetailsRelationshipsConnectedDevices List of other devices connected to this device
type DeviceDetailsRelationshipsConnectedDevices struct {
	// Data A connected device resource object
	Data []DeviceDetailsRelationshipsConnectedDevicesData `json:"data"`
}

// DeviceDetailsRelationshipsConnectedDevicesAttributes The type-specific properties of the connected device object returned
type DeviceDetailsRelationshipsConnectedDevicesAttributes struct {
	// DeviceName Connected device's name
	DeviceName string `json:"deviceName"`
}

// DeviceDetailsRelationshipsConnectedDevicesData defines model for deviceDetailsRelationships_connectedDevices_data.
type DeviceDetailsRelationshipsConnectedDevicesData struct {
	// Attributes The type-specific properties of the connected device object returned
	Attributes *DeviceDetailsRelationshipsConnectedDevicesAttributes `json:"attributes,omitempty"`

	// Id Connected device's ID
	Id *string `json:"id,omitempty"`

	// Links Links relating to this connected device
	Links *DeviceDetailsRelationshipsConnectedDevicesLinks `json:"links,omitempty"`

	// Type The type of object in the API
	Type *DeviceDetailsRelationshipsConnectedDevicesDataType `json:"type,omitempty"`
}

// DeviceDetailsRelationshipsConnectedDevicesDataType The type of object in the API
type DeviceDetailsRelationshipsConnectedDevicesDataType string

// DeviceDetailsRelationshipsConnectedDevicesLinks Links relating to this connected device
type DeviceDetailsRelationshipsConnectedDevicesLinks struct {
	// Dashboard Link to this connected device's dashboard in Auvik
	Dashboard *string `json:"dashboard,omitempty"`

	// Self Link to this connected device
	Self *string `json:"self,omitempty"`
}

// DeviceDetailsRelationshipsInterfaces This device's interfaces
type DeviceDetailsRelationshipsInterfaces struct {
	// Data An interface resource object
	Data *[]DeviceDetailsRelationshipsInterfacesData `json:"data,omitempty"`
}

// DeviceDetailsRelationshipsInterfacesAttributes The type-specific properties of the interfaces object returned
type DeviceDetailsRelationshipsInterfacesAttributes struct {
	// InterfaceName This interface's name
	InterfaceName string `json:"interfaceName"`

	// MacAddress The MAC address of this interface
	MacAddress string `json:"macAddress"`
}

// DeviceDetailsRelationshipsInterfacesData defines model for deviceDetailsRelationships_interfaces_data.
type DeviceDetailsRelationshipsInterfacesData struct {
	// Attributes The type-specific properties of the interfaces object returned
	Attributes *DeviceDetailsRelationshipsInterfacesAttributes `json:"attributes,omitempty"`

	// Id The unique identifier for a interface
	Id *string `json:"id,omitempty"`

	// Links Links relating to this interface
	Links *DeviceDetailsRelationshipsInterfacesLinks `json:"links,omitempty"`

	// Type The type of object in the API
	Type *DeviceDetailsRelationshipsInterfacesDataType `json:"type,omitempty"`
}

// DeviceDetailsRelationshipsInterfacesDataType The type of object in the API
type DeviceDetailsRelationshipsInterfacesDataType string

// DeviceDetailsRelationshipsInterfacesLinks Links relating to this interface
type DeviceDetailsRelationshipsInterfacesLinks struct {
	// Dashboard Link to this interface's dashboard in Auvik
	Dashboard *string `json:"dashboard,omitempty"`

	// Self Link to this interface
	Self *string `json:"self,omitempty"`
}

// DeviceDetailsResourceObject The template for a resource object representing an Auvik device's extra details
type DeviceDetailsResourceObject struct {
	// Attributes The type-specific properties of the devices object returned
	Attributes *DeviceDetailsAttributes `json:"attributes,omitempty"`

	// Id The unique identifier for a device
	Id *string `json:"id,omitempty"`

	// Links List of links relating to this device
	Links *DeviceDetailsResourceObjectLinks `json:"links,omitempty"`

	// Relationships This device's relationships to other resources
	Relationships *DeviceDetailsRelationships `json:"relationships,omitempty"`

	// Type The type of object in the API
	Type *DeviceDetailsResourceObjectType `json:"type,omitempty"`
}

// DeviceDetailsResourceObjectType The type of object in the API
type DeviceDetailsResourceObjectType string

// DeviceDetailsResourceObjectLinks List of links relating to this device
type DeviceDetailsResourceObjectLinks struct {
	// Dashboard Link to this device's dashboard in Auvik
	Dashboard *string `json:"dashboard,omitempty"`

	// Self Link to this set of device details
	Self *string `json:"self,omitempty"`
}

// DeviceExtendedDetailResourceObject defines model for deviceExtendedDetailResourceObject.
type DeviceExtendedDetailResourceObject struct {
	union json.RawMessage
}

// DeviceExtendedDetailsDevice The template for a resource object representing an Auvik device
type DeviceExtendedDetailsDevice struct {
	// Id The unique identifier for a device
	Id *string `json:"id,omitempty"`

	// Links List of links relating to this device
	Links *DeviceExtendedDetailsDeviceLinks `json:"links,omitempty"`

	// Type The type of object in the API
	Type *DeviceExtendedDetailsDeviceType `json:"type,omitempty"`
}

// DeviceExtendedDetailsDeviceType The type of object in the API
type DeviceExtendedDetailsDeviceType string

// DeviceExtendedDetailsDeviceLinks List of links relating to this device
type DeviceExtendedDetailsDeviceLinks struct {
	// Info Link to this device's device info
	Info *string `json:"info,omitempty"`

	// Self Link to this device's extended details
	Self *string `json:"self,omitempty"`
}

// DeviceInfoReadMultiple Root level object per the json-api spec
type DeviceInfoReadMultiple struct {
	Data     *[]DevicesResourceObject       `json:"data,omitempty"`
	Included *[]DeviceDetailsResourceObject `json:"included,omitempty"`

	// Links Pagination related links
	Links *DeviceInfoReadMultipleLinks `json:"links,omitempty"`

	// Meta The meta object that contains non-standard meta-information
	Meta *Meta `json:"meta,omitempty"`
}

// DeviceInfoReadMultipleLinks Pagination related links
type DeviceInfoReadMultipleLinks struct {
	// First First page in the data set
	First *string `json:"first,omitempty"`

	// Last Last page in the data set
	Last *string `json:"last,omitempty"`

	// Next Next page in the data set
	Next *string `json:"next,omitempty"`

	// Prev Previous page in the data set
	Prev *string `json:"prev,omitempty"`
}

// DeviceInfoReadSingle Root level object per the json-api spec
type DeviceInfoReadSingle struct {
	// Data The template for a resource object representing an Auvik device
	Data     *DevicesResourceObject         `json:"data,omitempty"`
	Included *[]DeviceDetailsResourceObject `json:"included,omitempty"`
}

// DeviceLifecycleAttributes The type-specific properties of the devices object returned
type DeviceLifecycleAttributes struct {
	// DeviceName Device's name
	DeviceName string `json:"deviceName"`

	// LastSupportStatus Availability of service and support for the product
	LastSupportStatus DeviceLifecycleAttributesLastSupportStatus `json:"lastSupportStatus"`

	// SalesAvailability Availability to order the requested product through Cisco point-of-sale mechanisms
	SalesAvailability DeviceLifecycleAttributesSalesAvailability `json:"salesAvailability"`

	// SecuritySoftwareMaintenanceStatus Availability of any planned maintenance release or scheduled software remedy for a security vulnerability issued by Cisco Engineering
	SecuritySoftwareMaintenanceStatus DeviceLifecycleAttributesSecuritySoftwareMaintenanceStatus `json:"securitySoftwareMaintenanceStatus"`

	// SoftwareMaintenanceStatus Availability of any software maintenance releases or bug fixes to the software product released by Cisco Engineering
	SoftwareMaintenanceStatus DeviceLifecycleAttributesSoftwareMaintenanceStatus `json:"softwareMaintenanceStatus"`
}

// DeviceLifecycleAttributesLastSupportStatus Availability of service and support for the product
type DeviceLifecycleAttributesLastSupportStatus string

// DeviceLifecycleAttributesSalesAvailability Availability to order the requested product through Cisco point-of-sale mechanisms
type DeviceLifecycleAttributesSalesAvailability string

// DeviceLifecycleAttributesSecuritySoftwareMaintenanceStatus Availability of any planned maintenance release or scheduled software remedy for a security vulnerability issued by Cisco Engineering
type DeviceLifecycleAttributesSecuritySoftwareMaintenanceStatus string

// DeviceLifecycleAttributesSoftwareMaintenanceStatus Availability of any software maintenance releases or bug fixes to the software product released by Cisco Engineering
type DeviceLifecycleAttributesSoftwareMaintenanceStatus string

// DeviceLifecycleReadMultiple Root level object per the json-api spec
type DeviceLifecycleReadMultiple struct {
	Data *[]DeviceLifecycleResourceObject `json:"data"`

	// Links Pagination related links
	Links *DeviceLifecycleReadMultipleLinks `json:"links,omitempty"`

	// Meta The meta object that contains non-standard meta-information
	Meta *Meta `json:"meta,omitempty"`
}

// DeviceLifecycleReadMultipleLinks Pagination related links
type DeviceLifecycleReadMultipleLinks struct {
	// First First page in the data set
	First *string `json:"first,omitempty"`

	// Last Last page in the data set
	Last *string `json:"last,omitempty"`

	// Next Next page in the data set
	Next *string `json:"next,omitempty"`

	// Prev Previous page in the data set
	Prev *string `json:"prev,omitempty"`
}

// DeviceLifecycleReadSingle Root level object per the json-api spec
type DeviceLifecycleReadSingle struct {
	// Data The template for a resource object representing an Auvik device with lifecycle information
	Data *DeviceLifecycleResourceObject `json:"data,omitempty"`
}

// DeviceLifecycleRelationships This device's relationships to other resources
type DeviceLifecycleRelationships struct {
	// Device The device corresponding to this configuration
	Device *DeviceLifecycleRelationshipsDevice `json:"device,omitempty"`

	// Tenant This entity's owning tenant
	Tenant *Tenant `json:"tenant,omitempty"`
}

// DeviceLifecycleRelationshipsDevice The device corresponding to this configuration
type DeviceLifecycleRelationshipsDevice struct {
	// Data A device resource object
	Data *DeviceLifecycleRelationshipsDeviceData `json:"data,omitempty"`
}

// DeviceLifecycleRelationshipsDeviceData A device resource object
type DeviceLifecycleRelationshipsDeviceData struct {
	// Attributes The type-specific properties of the device object returned
	Attributes *DeviceLifecycleRelationshipsDeviceDataAttributes `json:"attributes,omitempty"`

	// Id The unique identifier for this device
	Id *string `json:"id,omitempty"`

	// Type The type of object in the API
	Type *DeviceLifecycleRelationshipsDeviceDataType `json:"type,omitempty"`
}

// DeviceLifecycleRelationshipsDeviceDataType The type of object in the API
type DeviceLifecycleRelationshipsDeviceDataType string

// DeviceLifecycleRelationshipsDeviceDataAttributes The type-specific properties of the device object returned
type DeviceLifecycleRelationshipsDeviceDataAttributes struct {
	// DeviceName Device's name
	DeviceName string `json:"deviceName"`
}

// DeviceLifecycleResourceObject The template for a resource object representing an Auvik device with lifecycle information
type DeviceLifecycleResourceObject struct {
	// Attributes The type-specific properties of the devices object returned
	Attributes *DeviceLifecycleAttributes `json:"attributes,omitempty"`

	// Id The unique identifier for a device
	Id *string `json:"id,omitempty"`

	// Links List of links relating to this device
	Links *DeviceLifecycleResourceObjectLinks `json:"links,omitempty"`

	// Relationships This device's relationships to other resources
	Relationships *DeviceLifecycleRelationships `json:"relationships,omitempty"`

	// Type The type of object in the API
	Type *DeviceLifecycleResourceObjectType `json:"type,omitempty"`
}

// DeviceLifecycleResourceObjectType The type of object in the API
type DeviceLifecycleResourceObjectType string

// DeviceLifecycleResourceObjectLinks List of links relating to this device
type DeviceLifecycleResourceObjectLinks struct {
	// Dashboard Link to this device's dashboard in Auvik
	Dashboard *string `json:"dashboard,omitempty"`

	// Self Link to this device lifecyle record
	Self *string `json:"self,omitempty"`
}

// DeviceOidMonitorRead Root level object per the json-api spec
type DeviceOidMonitorRead struct {
	Data *[]DeviceOidMonitorResourceObject `json:"data,omitempty"`

	// Links Pagination related links
	Links *DeviceOidMonitorReadLinks `json:"links,omitempty"`
}

// DeviceOidMonitorReadLinks Pagination related links
type DeviceOidMonitorReadLinks struct {
	// First First page in the data set
	First *string `json:"first,omitempty"`

	// Last Last page in the data set
	Last *string `json:"last,omitempty"`

	// Next Next page in the data set
	Next *string `json:"next,omitempty"`

	// Prev Previous page in the data set
	Prev *string `json:"prev,omitempty"`
}

// DeviceOidMonitorResourceObject The template for a resource object representing an Auvik device OID
type DeviceOidMonitorResourceObject struct {
	// Attributes The type-specific properties of the OID object returned
	Attributes *OidAttributes `json:"attributes,omitempty"`

	// Id The unique identifier for an OID
	Id *string `json:"id,omitempty"`

	// Links List of links relating to this OID
	Links *DeviceOidMonitorResourceObjectLinks `json:"links,omitempty"`

	// Relationships This OID's relationships to other resources
	Relationships *OidRelationships `json:"relationships,omitempty"`

	// Type The type of object in the API
	Type *DeviceOidMonitorResourceObjectType `json:"type,omitempty"`
}

// DeviceOidMonitorResourceObjectType The type of object in the API
type DeviceOidMonitorResourceObjectType string

// DeviceOidMonitorResourceObjectLinks List of links relating to this OID
type DeviceOidMonitorResourceObjectLinks struct {
	// Dashboard Link to this OID's dashboard in Auvik
	Dashboard *string `json:"dashboard,omitempty"`

	// Self Link to this OID
	Self *string `json:"self,omitempty"`
}

// DeviceRelationships This device's relationships to other resources
type DeviceRelationships struct {
	// DeviceDetail Additional attributes and details relating to this device
	DeviceDetail *DeviceRelationshipsDeviceDetail `json:"deviceDetail,omitempty"`

	// Networks This device's networks
	Networks *DeviceRelationshipsNetworks `json:"networks,omitempty"`

	// Tenant This entity's owning tenant
	Tenant *Tenant `json:"tenant,omitempty"`
}

// DeviceRelationshipsDeviceDetail Additional attributes and details relating to this device
type DeviceRelationshipsDeviceDetail struct {
	// Data A device detail object
	Data *DeviceRelationshipsDeviceDetailData `json:"data,omitempty"`
}

// DeviceRelationshipsDeviceDetailData A device detail object
type DeviceRelationshipsDeviceDetailData struct {
	// Id The unique identifier for this device
	Id *string `json:"id,omitempty"`

	// Links Links relating to this device details
	Links *DeviceRelationshipsDeviceDetailDataLinks `json:"links,omitempty"`

	// Type The type of object in the API
	Type *DeviceRelationshipsDeviceDetailDataType `json:"type,omitempty"`
}

// DeviceRelationshipsDeviceDetailDataType The type of object in the API
type DeviceRelationshipsDeviceDetailDataType string

// DeviceRelationshipsDeviceDetailDataLinks Links relating to this device details
type DeviceRelationshipsDeviceDetailDataLinks struct {
	// Dashboard Link to this device's dashboard in Auvik
	Dashboard *string `json:"dashboard,omitempty"`

	// Self Link to this device detail
	Self *string `json:"self,omitempty"`
}

// DeviceRelationshipsNetworks This device's networks
type DeviceRelationshipsNetworks struct {
	// Data An network resource object
	Data *[]DeviceRelationshipsNetworksData `json:"data,omitempty"`
}

// DeviceRelationshipsNetworksAttributes The type-specific properties of the interfaces object returned
type DeviceRelationshipsNetworksAttributes struct {
	// NetworkName Identifier of the network, usually an IP/subnet or an SSID
	NetworkName string `json:"networkName"`
}

// DeviceRelationshipsNetworksData defines model for deviceRelationships_networks_data.
type DeviceRelationshipsNetworksData struct {
	// Attributes The type-specific properties of the interfaces object returned
	Attributes *DeviceRelationshipsNetworksAttributes `json:"attributes,omitempty"`

	// Id The unique identifier for this network
	Id *string `json:"id,omitempty"`

	// Links Links relating to this network
	Links *DeviceRelationshipsNetworksLinks `json:"links,omitempty"`

	// Type The type of object in the API
	Type *DeviceRelationshipsNetworksDataType `json:"type,omitempty"`
}

// DeviceRelationshipsNetworksDataType The type of object in the API
type DeviceRelationshipsNetworksDataType string

// DeviceRelationshipsNetworksLinks Links relating to this network
type DeviceRelationshipsNetworksLinks struct {
	// Dashboard Link to this network's dashboard in Auvik
	Dashboard *string `json:"dashboard,omitempty"`

	// Self Link to this network
	Self *string `json:"self,omitempty"`
}

// DeviceStatisticsRead Root level object per the json-api spec
type DeviceStatisticsRead struct {
	// Data Device statistics resource object
	Data *DeviceStatisticsResourceObject `json:"data,omitempty"`
}

// DeviceStatisticsRelationships Device statistics object's relationships to other resources
type DeviceStatisticsRelationships struct {
	// Device This device the statistics are reported against
	Device *DeviceStatisticsRelationshipsDevice `json:"device,omitempty"`

	// Tenant This entity's owning tenant
	Tenant *Tenant `json:"tenant,omitempty"`
}

// DeviceStatisticsRelationshipsDevice This device the statistics are reported against
type DeviceStatisticsRelationshipsDevice struct {
	// Data A device resource object
	Data *DeviceStatisticsRelationshipsDeviceData `json:"data,omitempty"`
}

// DeviceStatisticsRelationshipsDeviceData A device resource object
type DeviceStatisticsRelationshipsDeviceData struct {
	// DeviceName The name of the device
	DeviceName *string `json:"deviceName,omitempty"`

	// DeviceType The type of the device
	DeviceType *string `json:"deviceType,omitempty"`

	// Id This device's ID
	Id *string `json:"id,omitempty"`

	// Links Links relating to this device
	Links *InterfaceRelationshipsParentDeviceDataLinks `json:"links,omitempty"`

	// Type The type of the object
	Type *string `json:"type,omitempty"`
}

// DeviceStatisticsResourceObject Device statistics resource object
type DeviceStatisticsResourceObject struct {
	// Attributes The type-specific properties of the statistics object returned
	Attributes *StatisticsAttributes `json:"attributes,omitempty"`

	// Id ID for this statistic
	Id *string `json:"id,omitempty"`

	// Links Links relating to this device statistics
	Links *DeviceStatisticsResourceObjectLinks `json:"links,omitempty"`

	// Relationships Device statistics object's relationships to other resources
	Relationships *DeviceStatisticsRelationships `json:"relationships,omitempty"`

	// Type The type of this resource object
	Type *DeviceStatisticsResourceObjectType `json:"type,omitempty"`
}

// DeviceStatisticsResourceObjectType The type of this resource object
type DeviceStatisticsResourceObjectType string

// DeviceStatisticsResourceObjectLinks Links relating to this device statistics
type DeviceStatisticsResourceObjectLinks struct {
	// Dashboard Link to this device's record in the Device Info API
	Dashboard *string `json:"dashboard,omitempty"`

	// Self Link used to get this result set
	Self *string `json:"self,omitempty"`
}

// DeviceUsageAttributes The type-specific properties of the client usage object returned
type DeviceUsageAttributes struct {
	// AverageDays The average billable device days across the usage period
	AverageDays *float32 `json:"averageDays,omitempty"`

	// AverageDaysByClientType The average billable device days for all clients across the usage period, separate by devices' owning client type
	AverageDaysByClientType *DeviceUsageAttributesAverageDaysByClientType `json:"averageDaysByClientType,omitempty"`

	// DeviceName Device's name
	DeviceName *string `json:"deviceName,omitempty"`

	// TotalDays The total billable device days across the usage period
	TotalDays *float32 `json:"totalDays,omitempty"`

	// TotalDaysByClientType The total billable device days for across the usage period, separate by this device's owning client type
	TotalDaysByClientType *DeviceUsageAttributesTotalDaysByClientType `json:"totalDaysByClientType,omitempty"`

	// UsagePeriod Description of the usage period that's been asked for
	UsagePeriod *ClientUsageAttributesUsagePeriod `json:"usagePeriod,omitempty"`
}

// DeviceUsageAttributesAverageDaysByClientType The average billable device days for all clients across the usage period, separate by devices' owning client type
type DeviceUsageAttributesAverageDaysByClientType struct {
	// Essentials Average billable devices days for the device when its client was set to Essentials
	Essentials *float32 `json:"essentials,omitempty"`

	// Light Average billable devices days for the device when its client was set to Light
	Light *float32 `json:"light,omitempty"`

	// Notier Average billable devices days for the device when its client had no set client type
	Notier *float32 `json:"notier,omitempty"`

	// Performance Average billable devices days for the device when its client was set to Performance
	Performance *float32 `json:"performance,omitempty"`
}

// DeviceUsageAttributesTotalDaysByClientType The total billable device days for across the usage period, separate by this device's owning client type
type DeviceUsageAttributesTotalDaysByClientType struct {
	// Essentials Billable devices days for the device when its client was set to Essentials
	Essentials *float32 `json:"essentials,omitempty"`

	// Light Billable devices days for the device when its client was set to Light
	Light *float32 `json:"light,omitempty"`

	// Notier Billable devices days for the device when its client had no set client type
	Notier *float32 `json:"notier,omitempty"`

	// Performance Billable devices days for the device when its client was set to Performance
	Performance *float32 `json:"performance,omitempty"`
}

// DeviceUsageRead Root level object per the json-api spec
type DeviceUsageRead struct {
	// Data Device usage resource object
	Data *DeviceUsageResourceObject `json:"data,omitempty"`
}

// DeviceUsageRelationships Client usage object's relationships to other resources
type DeviceUsageRelationships struct {
	// Client Client who owns this device and whose usage this device contributes to.
	Client *DeviceUsageRelationshipsClient `json:"client,omitempty"`
}

// DeviceUsageRelationshipsClient Client who owns this device and whose usage this device contributes to.
type DeviceUsageRelationshipsClient struct {
	Data *DeviceUsageRelationshipsClientData `json:"data,omitempty"`
}

// DeviceUsageRelationshipsClientData defines model for deviceUsageRelationships_client_data.
type DeviceUsageRelationshipsClientData struct {
	// Attributes The type-specific properties of the device usage object returned
	Attributes *DeviceUsageRelationshipsClientDataAttributes `json:"attributes,omitempty"`

	// Id Client's ID
	Id *string `json:"id,omitempty"`

	// Links Links relating to this client's usage
	Links *ClientUsageResourceObjectLinks `json:"links,omitempty"`

	// Type The type of this resource object
	Type *DeviceUsageRelationshipsClientDataType `json:"type,omitempty"`
}

// DeviceUsageRelationshipsClientDataType The type of this resource object
type DeviceUsageRelationshipsClientDataType string

// DeviceUsageRelationshipsClientDataAttributes The type-specific properties of the device usage object returned
type DeviceUsageRelationshipsClientDataAttributes struct {
	// DomainPrefix Client tenant's domain prefix/name
	DomainPrefix *string `json:"domainPrefix,omitempty"`
}

// DeviceUsageResourceObject Device usage resource object
type DeviceUsageResourceObject struct {
	// Attributes The type-specific properties of the client usage object returned
	Attributes *DeviceUsageAttributes `json:"attributes,omitempty"`

	// Id Device's ID
	Id *string `json:"id,omitempty"`

	// Links Links relating to this client's usage
	Links *DeviceUsageResourceObjectLinks `json:"links,omitempty"`

	// Relationships Client usage object's relationships to other resources
	Relationships *DeviceUsageRelationships `json:"relationships,omitempty"`

	// Type The type of this resource object
	Type *DeviceUsageResourceObjectType `json:"type,omitempty"`
}

// DeviceUsageResourceObjectType The type of this resource object
type DeviceUsageResourceObjectType string

// DeviceUsageResourceObjectLinks Links relating to this client's usage
type DeviceUsageResourceObjectLinks struct {
	// DeviceRecord Link to this device's record in the Device Info API
	DeviceRecord *string `json:"deviceRecord,omitempty"`

	// Self Link to this device's usage in the Usage API
	Self *string `json:"self,omitempty"`
}

// DeviceWarrantyAttributes The type-specific properties of the devices object returned
type DeviceWarrantyAttributes struct {
	// ContractRenewalAvailability Contract renewal availability
	ContractRenewalAvailability *string `json:"contractRenewalAvailability,omitempty"`

	// DeviceName Device's name
	DeviceName string `json:"deviceName"`

	// RecommendedSoftwareVersion Recommended Devices software version, if known
	RecommendedSoftwareVersion string `json:"recommendedSoftwareVersion"`

	// ServiceAttachmentStatus Service attachment status
	ServiceAttachmentStatus *string `json:"serviceAttachmentStatus,omitempty"`

	// ServiceCoverageStatus Service coverage status
	ServiceCoverageStatus string `json:"serviceCoverageStatus"`

	// WarrantyCoverageStatus Warranty coverage status
	WarrantyCoverageStatus string `json:"warrantyCoverageStatus"`

	// WarrantyExpirationDate Warranty expiration date for this device. Value is what is returned by Cisco device, which is not guaranteed to be a date.
	WarrantyExpirationDate string `json:"warrantyExpirationDate"`
}

// DeviceWarrantyReadMultiple Root level object per the json-api spec
type DeviceWarrantyReadMultiple struct {
	Data *[]DeviceWarrantyResourceObject `json:"data"`

	// Links Pagination related links
	Links *DeviceWarrantyReadMultipleLinks `json:"links,omitempty"`

	// Meta The meta object that contains non-standard meta-information
	Meta *Meta `json:"meta,omitempty"`
}

// DeviceWarrantyReadMultipleLinks Pagination related links
type DeviceWarrantyReadMultipleLinks struct {
	// First First page in the data set
	First *string `json:"first,omitempty"`

	// Last Last page in the data set
	Last *string `json:"last,omitempty"`

	// Next Next page in the data set
	Next *string `json:"next,omitempty"`

	// Prev Previous page in the data set
	Prev *string `json:"prev,omitempty"`
}

// DeviceWarrantyReadSingle Root level object per the json-api spec
type DeviceWarrantyReadSingle struct {
	// Data The template for a resource object representing an Auvik device with warranty information
	Data *DeviceWarrantyResourceObject `json:"data,omitempty"`
}

// DeviceWarrantyRelationships This device's relationships to other resources
type DeviceWarrantyRelationships struct {
	// Tenant This entity's owning tenant
	Tenant *Tenant `json:"tenant,omitempty"`
}

// DeviceWarrantyResourceObject The template for a resource object representing an Auvik device with warranty information
type DeviceWarrantyResourceObject struct {
	// Attributes The type-specific properties of the devices object returned
	Attributes *DeviceWarrantyAttributes `json:"attributes,omitempty"`

	// Id The unique identifier for a device
	Id *string `json:"id,omitempty"`

	// Links List of links relating to this device
	Links *DeviceWarrantyResourceObjectLinks `json:"links,omitempty"`

	// Relationships This device's relationships to other resources
	Relationships *DeviceWarrantyRelationships `json:"relationships,omitempty"`

	// Type The type of object in the API
	Type *DeviceWarrantyResourceObjectType `json:"type,omitempty"`
}

// DeviceWarrantyResourceObjectType The type of object in the API
type DeviceWarrantyResourceObjectType string

// DeviceWarrantyResourceObjectLinks List of links relating to this device
type DeviceWarrantyResourceObjectLinks struct {
	// Dashboard Link to this device's dashboard in Auvik
	Dashboard *string `json:"dashboard,omitempty"`

	// Self Link to this device
	Self *string `json:"self,omitempty"`
}

// DeviceData The type-specific properties of the SNMP Poller's Device object returned
type DeviceData struct {
	// Id The unique identifier for a Device
	Id *string `json:"id,omitempty"`

	// Type The type of object in the API.
	Type *string `json:"type,omitempty"`
}

// DevicesResourceObject The template for a resource object representing an Auvik device
type DevicesResourceObject struct {
	// Attributes The type-specific properties of the devices object returned
	Attributes *DeviceAttributes `json:"attributes,omitempty"`

	// Id The unique identifier for a device
	Id *string `json:"id,omitempty"`

	// Links List of links relating to this device
	Links *DevicesResourceObjectLinks `json:"links,omitempty"`

	// Relationships This device's relationships to other resources
	Relationships *DeviceRelationships `json:"relationships,omitempty"`

	// Type The type of object in the API
	Type *DevicesResourceObjectType `json:"type,omitempty"`
}

// DevicesResourceObjectType The type of object in the API
type DevicesResourceObjectType string

// DevicesResourceObjectLinks List of links relating to this device
type DevicesResourceObjectLinks struct {
	// Dashboard Link to this device's dashboard in Auvik
	Dashboard *string `json:"dashboard,omitempty"`

	// Self Link to this device
	Self *string `json:"self,omitempty"`
}

// EndpointStats defines model for endpointStats.
type EndpointStats struct {
	// Id ID of the endpoint
	Id *string `json:"id,omitempty"`

	// IpAddress IP Address of the endpoint
	IpAddress *string `json:"ipAddress,omitempty"`

	// Stats The list of statistics reported for the endpoint
	Stats *[]StatItem `json:"stats,omitempty"`
}

// EntityAuditReadMultiple Root level object per the json-api spec
type EntityAuditReadMultiple struct {
	Data *[]AuditsResourceObject `json:"data,omitempty"`

	// Links Pagination related links
	Links *EntityAuditReadMultipleLinks `json:"links,omitempty"`

	// Meta The meta object that contains non-standard meta-information
	Meta *Meta `json:"meta,omitempty"`
}

// EntityAuditReadMultipleLinks Pagination related links
type EntityAuditReadMultipleLinks struct {
	// First First page in the data set
	First *string `json:"first,omitempty"`

	// Last Last page in the data set
	Last *string `json:"last,omitempty"`

	// Next Next page in the data set
	Next *string `json:"next,omitempty"`

	// Prev Previous page in the data set
	Prev *string `json:"prev,omitempty"`
}

// EntityAuditReadSingle Root level object per the json-api spec
type EntityAuditReadSingle struct {
	// Data The template for a resource object representing an audit log
	Data *AuditsResourceObject `json:"data,omitempty"`
}

// EntityNotesReadMultiple Root level object per the json-api spec
type EntityNotesReadMultiple struct {
	Data *[]NoteResourceObject `json:"data,omitempty"`

	// Links Pagination related links
	Links *EntityNotesReadMultipleLinks `json:"links,omitempty"`

	// Meta The meta object that contains non-standard meta-information
	Meta *Meta `json:"meta,omitempty"`
}

// EntityNotesReadMultipleLinks Pagination related links
type EntityNotesReadMultipleLinks struct {
	// First First page in the data set
	First *string `json:"first,omitempty"`

	// Last Last page in the data set
	Last *string `json:"last,omitempty"`

	// Next Next page in the data set
	Next *string `json:"next,omitempty"`

	// Prev Previous page in the data set
	Prev *string `json:"prev,omitempty"`
}

// EntityNotesReadSingle Root level object per the json-api spec
type EntityNotesReadSingle struct {
	// Data The template for a resource object representing an Auvik note
	Data *NoteResourceObject `json:"data,omitempty"`
}

// Hypervisor defines model for hypervisor.
type Hypervisor struct {
	Attributes *struct {
		// DeviceName Device's name
		DeviceName string `json:"deviceName"`

		// DeviceType What type of device it is
		DeviceType HypervisorAttributesDeviceType `json:"deviceType"`

		// LastModified When one of this device's attributes was last modified
		LastModified *string `json:"lastModified,omitempty"`

		// LastSeenTime Last seen online date/time of a device
		LastSeenTime *string `json:"lastSeenTime,omitempty"`

		// VirtualMachines List of every VM on this hypervisor
		VirtualMachines []struct {
			// AllocatedMemory How much memory is allocated to this VM, in Bytes
			AllocatedMemory string `json:"allocatedMemory"`

			// DeviceType What type of device it is
			DeviceType HypervisorAttributesVirtualMachinesDeviceType `json:"deviceType"`

			// PowerStatus The VM power status
			PowerStatus HypervisorAttributesVirtualMachinesPowerStatus `json:"powerStatus"`

			// Snapshots List of image snapshots for this VM
			Snapshots []struct {
				// ParentSnapshotName Parent snapshot's name
				ParentSnapshotName string `json:"parentSnapshotName"`

				// SnapshotDate The date the snapshot was taken
				SnapshotDate string `json:"snapshotDate"`

				// SnapshotDescription The snapshot's description
				SnapshotDescription string `json:"snapshotDescription"`

				// SnapshotName The snapshot's name
				SnapshotName string `json:"snapshotName"`

				// SnapshotSize File size of the snapshot
				SnapshotSize string `json:"snapshotSize"`
			} `json:"snapshots"`

			// VCPU Number of virtual CPUs
			VCPU string `json:"vCPU"`

			// VDisk Number of virtual disks
			VDisk string `json:"vDisk"`
		} `json:"virtualMachines"`
	} `json:"attributes,omitempty"`

	// Id The unique identifier for a device
	Id *string `json:"id,omitempty"`

	// Links List of links relating to this device
	Links         *DeviceExtendedDetailsDeviceLinks `json:"links,omitempty"`
	Relationships *DeviceRelationships              `json:"relationships,omitempty"`

	// Type The type of object in the API
	Type *HypervisorType `json:"type,omitempty"`
}

// HypervisorAttributesDeviceType What type of device it is
type HypervisorAttributesDeviceType string

// HypervisorAttributesVirtualMachinesDeviceType What type of device it is
type HypervisorAttributesVirtualMachinesDeviceType string

// HypervisorAttributesVirtualMachinesPowerStatus The VM power status
type HypervisorAttributesVirtualMachinesPowerStatus string

// HypervisorType The type of object in the API
type HypervisorType string

// InterfaceAttributes The type-specific properties of the interfaces object returned
type InterfaceAttributes struct {
	// AdminStatus Whether this interface is enabled
	AdminStatus bool `json:"adminStatus"`

	// CustomConnections Whether this interface allows custom connections
	CustomConnections bool `json:"customConnections"`

	// Duplex Duplex mode of this interface
	Duplex InterfaceAttributesDuplex `json:"duplex"`

	// InterfaceName This interface's name
	InterfaceName string `json:"interfaceName"`

	// InterfaceType This interface's type
	InterfaceType InterfaceAttributesInterfaceType `json:"interfaceType"`

	// IpAddresses This interface's IP addresses
	IpAddresses []string `json:"ipAddresses"`

	// LastModified When one of this interface's attributes was last modified
	LastModified string `json:"lastModified"`

	// MacAddress MAC address
	MacAddress string `json:"macAddress"`

	// NegotiatedSpeed Negotiated speed
	NegotiatedSpeed string `json:"negotiatedSpeed"`

	// OperationalStatus This interface's operational status
	OperationalStatus InterfaceAttributesOperationalStatus `json:"operationalStatus"`
}

// InterfaceAttributesDuplex Duplex mode of this interface
type InterfaceAttributesDuplex string

// InterfaceAttributesInterfaceType This interface's type
type InterfaceAttributesInterfaceType string

// InterfaceAttributesOperationalStatus This interface's operational status
type InterfaceAttributesOperationalStatus string

// InterfaceInfoReadMultiple Root level object per the json-api spec
type InterfaceInfoReadMultiple struct {
	Data *[]InterfaceResourceObject `json:"data,omitempty"`

	// Links Pagination related links
	Links *InterfaceInfoReadMultipleLinks `json:"links,omitempty"`

	// Meta The meta object that contains non-standard meta-information
	Meta *Meta `json:"meta,omitempty"`
}

// InterfaceInfoReadMultipleLinks Pagination related links
type InterfaceInfoReadMultipleLinks struct {
	// First First page in the data set
	First *string `json:"first,omitempty"`

	// Last Last page in the data set
	Last *string `json:"last,omitempty"`

	// Next Next page in the data set
	Next *string `json:"next,omitempty"`

	// Prev Previous page in the data set
	Prev *string `json:"prev,omitempty"`
}

// InterfaceInfoReadSingle Root level object per the json-api spec
type InterfaceInfoReadSingle struct {
	// Data The template for a resource object representing an interface
	Data *InterfaceResourceObject `json:"data,omitempty"`
}

// InterfaceRelationships This interface's relationships to other resources
type InterfaceRelationships struct {
	// ConnectedTo List of other interfaces this interface is connected to
	ConnectedTo *InterfaceRelationshipsConnectedTo `json:"connectedTo,omitempty"`

	// Networks This interface's networks
	Networks *InterfaceRelationshipsNetworks `json:"networks,omitempty"`

	// ParentDevice This interface's parent device
	ParentDevice *InterfaceRelationshipsParentDevice `json:"parentDevice,omitempty"`

	// Tenant This entity's owning tenant
	Tenant *Tenant `json:"tenant,omitempty"`
}

// InterfaceRelationshipsConnectedTo List of other interfaces this interface is connected to
type InterfaceRelationshipsConnectedTo struct {
	// Data An interface resource object
	Data *[]InterfaceRelationshipsConnectedToData `json:"data,omitempty"`
}

// InterfaceRelationshipsConnectedToData defines model for interfaceRelationships_connectedTo_data.
type InterfaceRelationshipsConnectedToData struct {
	// Id This interface's ID
	Id *string `json:"id,omitempty"`

	// Links Links relating to this interface
	Links *InterfaceRelationshipsConnectedToLinks `json:"links,omitempty"`

	// Type The type of the object
	Type *InterfaceRelationshipsConnectedToDataType `json:"type,omitempty"`
}

// InterfaceRelationshipsConnectedToDataType The type of the object
type InterfaceRelationshipsConnectedToDataType string

// InterfaceRelationshipsConnectedToLinks Links relating to this interface
type InterfaceRelationshipsConnectedToLinks struct {
	// Dashboard Link to this interface's dashboard in Auvik
	Dashboard *string `json:"dashboard,omitempty"`

	// Self Link to this set of network info
	Self *string `json:"self,omitempty"`
}

// InterfaceRelationshipsNetworks This interface's networks
type InterfaceRelationshipsNetworks struct {
	// Data An network resource object
	Data *[]InterfaceRelationshipsNetworksData `json:"data,omitempty"`
}

// InterfaceRelationshipsNetworksData defines model for interfaceRelationships_networks_data.
type InterfaceRelationshipsNetworksData struct {
	// Attributes The type-specific properties of the interfaces object returned
	Attributes *DeviceRelationshipsNetworksAttributes `json:"attributes,omitempty"`

	// Id The unique identifier for this network
	Id *string `json:"id,omitempty"`

	// Links Links relating to this network
	Links *InterfaceRelationshipsNetworksLinks `json:"links,omitempty"`

	// Type The type of the object
	Type *InterfaceRelationshipsNetworksDataType `json:"type,omitempty"`
}

// InterfaceRelationshipsNetworksDataType The type of the object
type InterfaceRelationshipsNetworksDataType string

// InterfaceRelationshipsNetworksLinks Links relating to this network
type InterfaceRelationshipsNetworksLinks struct {
	// Dashboard Link to this network's dashboard in Auvik
	Dashboard *string `json:"dashboard,omitempty"`

	// Self Link to this set of network info
	Self *string `json:"self,omitempty"`
}

// InterfaceRelationshipsParentDevice This interface's parent device
type InterfaceRelationshipsParentDevice struct {
	// Data A device resource object
	Data *InterfaceRelationshipsParentDeviceData `json:"data,omitempty"`
}

// InterfaceRelationshipsParentDeviceData A device resource object
type InterfaceRelationshipsParentDeviceData struct {
	// Id This device's ID
	Id *string `json:"id,omitempty"`

	// Links Links relating to this device
	Links *InterfaceRelationshipsParentDeviceDataLinks `json:"links,omitempty"`

	// Type The type of the object
	Type *InterfaceRelationshipsParentDeviceDataType `json:"type,omitempty"`
}

// InterfaceRelationshipsParentDeviceDataType The type of the object
type InterfaceRelationshipsParentDeviceDataType string

// InterfaceRelationshipsParentDeviceDataLinks Links relating to this device
type InterfaceRelationshipsParentDeviceDataLinks struct {
	// Dashboard Link to this device's dashboard in Auvik
	Dashboard *string `json:"dashboard,omitempty"`

	// Self Link to this set of device info
	Self *string `json:"self,omitempty"`
}

// InterfaceResourceObject The template for a resource object representing an interface
type InterfaceResourceObject struct {
	// Attributes The type-specific properties of the interfaces object returned
	Attributes *InterfaceAttributes `json:"attributes,omitempty"`

	// Id The unique identifier for a interface
	Id *string `json:"id,omitempty"`

	// Links List of links relating to this interface
	Links *InterfaceResourceObjectLinks `json:"links,omitempty"`

	// Relationships This interface's relationships to other resources
	Relationships *InterfaceRelationships `json:"relationships,omitempty"`

	// Type The type of object in the API
	Type *InterfaceResourceObjectType `json:"type,omitempty"`
}

// InterfaceResourceObjectType The type of object in the API
type InterfaceResourceObjectType string

// InterfaceResourceObjectLinks List of links relating to this interface
type InterfaceResourceObjectLinks struct {
	// Dashboard Link to this interface's dashboard in Auvik
	Dashboard *string `json:"dashboard,omitempty"`

	// Self Link to this set of interface info
	Self *string `json:"self,omitempty"`
}

// InterfaceStatisticsRead Root level object per the json-api spec
type InterfaceStatisticsRead struct {
	// Data Interface statistics resource object
	Data *InterfaceStatisticsResourceObject `json:"data,omitempty"`
}

// InterfaceStatisticsRelationships Interface statistics object's relationships to other resources
type InterfaceStatisticsRelationships struct {
	// Interface This interface the statistics are reported against
	Interface *InterfaceStatisticsRelationshipsInterface `json:"interface,omitempty"`

	// Tenant This entity's owning tenant
	Tenant *Tenant `json:"tenant,omitempty"`
}

// InterfaceStatisticsRelationshipsInterface This interface the statistics are reported against
type InterfaceStatisticsRelationshipsInterface struct {
	// Data A interface resource object
	Data *InterfaceStatisticsRelationshipsInterfaceData `json:"data,omitempty"`
}

// InterfaceStatisticsRelationshipsInterfaceData A interface resource object
type InterfaceStatisticsRelationshipsInterfaceData struct {
	// Id This interface's ID
	Id *string `json:"id,omitempty"`

	// InterfaceName This interface's name
	InterfaceName *string `json:"interfaceName,omitempty"`

	// InterfaceType This interface's type
	InterfaceType *string `json:"interfaceType,omitempty"`

	// Links Links relating to this interface
	Links *InterfaceStatisticsRelationshipsInterfaceDataLinks `json:"links,omitempty"`

	// ParentDevice This interface's parent device
	ParentDevice *string `json:"parentDevice,omitempty"`

	// Type The type of the object
	Type *string `json:"type,omitempty"`
}

// InterfaceStatisticsRelationshipsInterfaceDataLinks Links relating to this interface
type InterfaceStatisticsRelationshipsInterfaceDataLinks struct {
	// Dashboard Link to this interfaces's dashboard in Auvik
	Dashboard *string `json:"dashboard,omitempty"`

	// ParentDevice Link to this interfaces's parent device dashboard in Auvik
	ParentDevice *string `json:"parentDevice,omitempty"`

	// Self Link to this set of interface info
	Self *string `json:"self,omitempty"`
}

// InterfaceStatisticsResourceObject Interface statistics resource object
type InterfaceStatisticsResourceObject struct {
	// Attributes The type-specific properties of the statistics object returned
	Attributes *StatisticsAttributes `json:"attributes,omitempty"`

	// Id ID for this statistic
	Id *string `json:"id,omitempty"`

	// Links Links relating to this interface statistics
	Links *InterfaceStatisticsResourceObjectLinks `json:"links,omitempty"`

	// Relationships Interface statistics object's relationships to other resources
	Relationships *InterfaceStatisticsRelationships `json:"relationships,omitempty"`

	// Type The type of this resource object
	Type *InterfaceStatisticsResourceObjectType `json:"type,omitempty"`
}

// InterfaceStatisticsResourceObjectType The type of this resource object
type InterfaceStatisticsResourceObjectType string

// InterfaceStatisticsResourceObjectLinks Links relating to this interface statistics
type InterfaceStatisticsResourceObjectLinks struct {
	// Dashboard Link to this interface's record in the Interface Info API
	Dashboard *string `json:"dashboard,omitempty"`

	// Self Link used to get this result set
	Self *string `json:"self,omitempty"`
}

// Interval The reporting interval for the statistics
type Interval = string

// Meta The meta object that contains non-standard meta-information
type Meta struct {
	// TotalPages Total page count.
	// Deprecated:
	TotalPages *float32 `json:"totalPages,omitempty"`
}

// MiscDevice defines model for miscDevice.
type MiscDevice struct {
	Attributes *struct {
		// DeviceName Device's name
		DeviceName string `json:"deviceName"`

		// DeviceType What type of device it is
		DeviceType MiscDeviceAttributesDeviceType `json:"deviceType"`

		// LastModified When one of this device's attributes was last modified
		LastModified *string `json:"lastModified,omitempty"`

		// LastSeenTime Last seen online date/time of a device
		LastSeenTime *string `json:"lastSeenTime,omitempty"`

		// Tunnels List of tunnels on the device
		Tunnels []struct {
			// DestinationBeginIP The first IP address within the range of addresses assigned to IPSec tunnel interfaces on the remote device
			DestinationBeginIP string `json:"destinationBeginIP"`

			// DestinationEndIP The last IP address within the range of addresses assigned to IPSec tunnel interfaces on the remote device
			DestinationEndIP string `json:"destinationEndIP"`

			// LocalGateway IP address of the local IKE gateway
			LocalGateway string `json:"localGateway"`

			// NamePhase1 The defining name of the first phase within Internet Key Exchange (IKE) tunnel negotiation
			NamePhase1 string `json:"namePhase1"`

			// NamePhase2 The defining name of the second phase within Internet Key Exchange (IKE) tunnel negotiation
			NamePhase2 string `json:"namePhase2"`

			// RemoteGateway IP address of the remote IKE gateway
			RemoteGateway string `json:"remoteGateway"`

			// SourceBeginIP The first IP address within the range of addresses assigned to IPSec tunnel interfaces on the local device
			SourceBeginIP string `json:"sourceBeginIP"`

			// SourceEndIP The last IP address within the range of addresses assigned to IPSec tunnel interfaces on the local device
			SourceEndIP string `json:"sourceEndIP"`
		} `json:"tunnels"`
	} `json:"attributes,omitempty"`

	// Id The unique identifier for a device
	Id *string `json:"id,omitempty"`

	// Links List of links relating to this device
	Links         *DeviceExtendedDetailsDeviceLinks `json:"links,omitempty"`
	Relationships *DeviceRelationships              `json:"relationships,omitempty"`

	// Type The type of object in the API
	Type *MiscDeviceType `json:"type,omitempty"`
}

// MiscDeviceAttributesDeviceType What type of device it is
type MiscDeviceAttributesDeviceType string

// MiscDeviceType The type of object in the API
type MiscDeviceType string

// NetworkAttributes The type-specific properties of the networks object returned
type NetworkAttributes struct {
	// Description Description of this network, also often an IP/subnet or an SSID
	Description string `json:"description"`

	// LastModified When one of this network's attributes was last modified
	LastModified string `json:"lastModified"`

	// NetworkName Name of this network, usually an IP/subnet or an SSID
	NetworkName string `json:"networkName"`

	// NetworkType This network's type
	NetworkType NetworkAttributesNetworkType `json:"networkType"`

	// ScanStatus If this network is set to be scanned or not
	ScanStatus NetworkAttributesScanStatus `json:"scanStatus"`
}

// NetworkAttributesNetworkType This network's type
type NetworkAttributesNetworkType string

// NetworkAttributesScanStatus If this network is set to be scanned or not
type NetworkAttributesScanStatus string

// NetworkDetailsAttributes The type-specific properties of the networks object returned
type NetworkDetailsAttributes struct {
	// CollectorSelection How collectors for this network are selected
	CollectorSelection NetworkDetailsAttributesCollectorSelection `json:"collectorSelection"`

	// ExcludedIpAddresses IP addresses and IP address ranges on this network that have been excluded from scans
	ExcludedIpAddresses []string `json:"excludedIpAddresses"`

	// PrimaryCollector UUID of the primary Auvik collector assigned to this network
	PrimaryCollector string `json:"primaryCollector"`

	// Scope Whether this network is a private or public network
	Scope NetworkDetailsAttributesScope `json:"scope"`

	// SecondaryCollectors List of UUIDs of secondary Auvik collectors assigned to this network, if any
	SecondaryCollectors []string `json:"secondaryCollectors"`
}

// NetworkDetailsAttributesCollectorSelection How collectors for this network are selected
type NetworkDetailsAttributesCollectorSelection string

// NetworkDetailsAttributesScope Whether this network is a private or public network
type NetworkDetailsAttributesScope string

// NetworkDetailsReadMultiple Root level object per the json-api spec
type NetworkDetailsReadMultiple struct {
	Data *[]NetworkDetailsResourceObject `json:"data,omitempty"`

	// Links Pagination related links
	Links *NetworkDetailsReadMultipleLinks `json:"links,omitempty"`

	// Meta The meta object that contains non-standard meta-information
	Meta *Meta `json:"meta,omitempty"`
}

// NetworkDetailsReadMultipleLinks Pagination related links
type NetworkDetailsReadMultipleLinks struct {
	// First First page in the data set
	First *string `json:"first,omitempty"`

	// Last Last page in the data set
	Last *string `json:"last,omitempty"`

	// Next Next page in the data set
	Next *string `json:"next,omitempty"`

	// Prev Previous page in the data set
	Prev *string `json:"prev,omitempty"`
}

// NetworkDetailsReadSingle Root level object per the json-api spec
type NetworkDetailsReadSingle struct {
	// Data The template for a resource object representing an Auvik network's extra details
	Data *NetworkDetailsResourceObject `json:"data,omitempty"`
}

// NetworkDetailsRelationships This network's relationships to other resources
type NetworkDetailsRelationships struct {
	// Tenant This entity's owning tenant
	Tenant *Tenant `json:"tenant,omitempty"`
}

// NetworkDetailsResourceObject The template for a resource object representing an Auvik network's extra details
type NetworkDetailsResourceObject struct {
	// Attributes The type-specific properties of the networks object returned
	Attributes *NetworkDetailsAttributes `json:"attributes,omitempty"`

	// Id The unique identifier for a network
	Id *string `json:"id,omitempty"`

	// Links List of links relating to this network
	Links *NetworkDetailsResourceObjectLinks `json:"links,omitempty"`

	// Relationships This network's relationships to other resources
	Relationships *NetworkDetailsRelationships `json:"relationships,omitempty"`

	// Type The type of object in the API
	Type *NetworkDetailsResourceObjectType `json:"type,omitempty"`
}

// NetworkDetailsResourceObjectType The type of object in the API
type NetworkDetailsResourceObjectType string

// NetworkDetailsResourceObjectLinks List of links relating to this network
type NetworkDetailsResourceObjectLinks struct {
	// Dashboard Link to this network's dashboard in Auvik
	Dashboard *string `json:"dashboard,omitempty"`

	// Self Link to this set of network details
	Self *string `json:"self,omitempty"`
}

// NetworkInfoReadMultiple Root level object per the json-api spec
type NetworkInfoReadMultiple struct {
	Data     *[]NetworksResourceObject       `json:"data,omitempty"`
	Included *[]NetworkDetailsResourceObject `json:"included,omitempty"`

	// Links Pagination related links
	Links *NetworkInfoReadMultipleLinks `json:"links,omitempty"`

	// Meta The meta object that contains non-standard meta-information
	Meta *Meta `json:"meta,omitempty"`
}

// NetworkInfoReadMultipleLinks Pagination related links
type NetworkInfoReadMultipleLinks struct {
	// First First page in the data set
	First *string `json:"first,omitempty"`

	// Last Last page in the data set
	Last *string `json:"last,omitempty"`

	// Next Next page in the data set
	Next *string `json:"next,omitempty"`

	// Prev Previous page in the data set
	Prev *string `json:"prev,omitempty"`
}

// NetworkInfoReadSingle Root level object per the json-api spec
type NetworkInfoReadSingle struct {
	// Data The template for a resource object representing an Auvik network
	Data     *NetworksResourceObject         `json:"data,omitempty"`
	Included *[]NetworkDetailsResourceObject `json:"included,omitempty"`
}

// NetworkRelationships This network's relationships to other resources
type NetworkRelationships struct {
	// Devices This network's devices
	Devices *NetworkRelationshipsDevices `json:"devices,omitempty"`

	// NetworkDetail Additional attributes and details relating to this network.
	NetworkDetail *NetworkRelationshipsNetworkDetail `json:"networkDetail,omitempty"`

	// Tenant This entity's owning tenant
	Tenant *Tenant `json:"tenant,omitempty"`
}

// NetworkRelationshipsDevices This network's devices
type NetworkRelationshipsDevices struct {
	// Data A device resource object
	Data *[]NetworkRelationshipsDevicesData `json:"data,omitempty"`
}

// NetworkRelationshipsDevicesAttributes This device's attributes
type NetworkRelationshipsDevicesAttributes struct {
	// DeviceName Device's name
	DeviceName string `json:"deviceName"`
}

// NetworkRelationshipsDevicesData defines model for networkRelationships_devices_data.
type NetworkRelationshipsDevicesData struct {
	// Attributes This device's attributes
	Attributes *NetworkRelationshipsDevicesAttributes `json:"attributes,omitempty"`

	// Id The unique identifier for a device
	Id *string `json:"id,omitempty"`

	// Links Links relating to this device
	Links *NetworkRelationshipsDevicesLinks `json:"links,omitempty"`

	// Type The type of object in the API
	Type *NetworkRelationshipsDevicesDataType `json:"type,omitempty"`
}

// NetworkRelationshipsDevicesDataType The type of object in the API
type NetworkRelationshipsDevicesDataType string

// NetworkRelationshipsDevicesLinks Links relating to this device
type NetworkRelationshipsDevicesLinks struct {
	// Dashboard Link to this device's dashboard in Auvik
	Dashboard *string `json:"dashboard,omitempty"`

	// Self Link to this device
	Self *string `json:"self,omitempty"`
}

// NetworkRelationshipsNetworkDetail Additional attributes and details relating to this network.
type NetworkRelationshipsNetworkDetail struct {
	// Data A network detail object
	Data *NetworkRelationshipsNetworkDetailData `json:"data,omitempty"`
}

// NetworkRelationshipsNetworkDetailData A network detail object
type NetworkRelationshipsNetworkDetailData struct {
	// Id The unique identifier for this network
	Id *string `json:"id,omitempty"`

	// Links Links relating to this network details
	Links *NetworkRelationshipsNetworkDetailDataLinks `json:"links,omitempty"`

	// Type The type of object in the API
	Type *NetworkRelationshipsNetworkDetailDataType `json:"type,omitempty"`
}

// NetworkRelationshipsNetworkDetailDataType The type of object in the API
type NetworkRelationshipsNetworkDetailDataType string

// NetworkRelationshipsNetworkDetailDataLinks Links relating to this network details
type NetworkRelationshipsNetworkDetailDataLinks struct {
	// Dashboard Link to this network's dashboard in Auvik
	Dashboard *string `json:"dashboard,omitempty"`

	// Self Link to this set of network detail
	Self *string `json:"self,omitempty"`
}

// NetworksResourceObject The template for a resource object representing an Auvik network
type NetworksResourceObject struct {
	// Attributes The type-specific properties of the networks object returned
	Attributes *NetworkAttributes `json:"attributes,omitempty"`

	// Id The unique identifier for this network
	Id *string `json:"id,omitempty"`

	// Links List of links relating to this network
	Links *NetworksResourceObjectLinks `json:"links,omitempty"`

	// Relationships This network's relationships to other resources
	Relationships *NetworkRelationships `json:"relationships,omitempty"`

	// Type The type of object in the API
	Type *NetworksResourceObjectType `json:"type,omitempty"`
}

// NetworksResourceObjectType The type of object in the API
type NetworksResourceObjectType string

// NetworksResourceObjectLinks List of links relating to this network
type NetworksResourceObjectLinks struct {
	// Dashboard Link to this network's dashboard in Auvik
	Dashboard *string `json:"dashboard,omitempty"`

	// Self Link to this set of network info
	Self *string `json:"self,omitempty"`
}

// NoteAttributes The type-specific properties of the notes object returned
type NoteAttributes struct {
	// Body Content of this note
	Body string `json:"body"`

	// EntityId The related entity's ID
	EntityId string `json:"entityId"`

	// EntityName The related entity's name
	EntityName string `json:"entityName"`

	// EntityType The related entity type
	EntityType NoteAttributesEntityType `json:"entityType"`

	// LastModified When one of this entity note's attributes was last modified
	LastModified string `json:"lastModified"`

	// LastModifiedBy The username that last modified the note
	LastModifiedBy string `json:"lastModifiedBy"`

	// Title This note's title
	Title string `json:"title"`
}

// NoteAttributesEntityType The related entity type
type NoteAttributesEntityType string

// NoteRelationships This entity note's relationships to other resources
type NoteRelationships struct {
	// Tenant This entity's owning tenant
	Tenant *Tenant `json:"tenant,omitempty"`
}

// NoteResourceObject The template for a resource object representing an Auvik note
type NoteResourceObject struct {
	// Attributes The type-specific properties of the notes object returned
	Attributes *NoteAttributes `json:"attributes,omitempty"`

	// Id The unique identifier for this note
	Id *string `json:"id,omitempty"`

	// Links List of links relating to this entity note
	Links *NoteResourceObjectLinks `json:"links,omitempty"`

	// Relationships This entity note's relationships to other resources
	Relationships *NoteRelationships `json:"relationships,omitempty"`

	// Type The type of object in the API
	Type *NoteResourceObjectType `json:"type,omitempty"`
}

// NoteResourceObjectType The type of object in the API
type NoteResourceObjectType string

// NoteResourceObjectLinks List of links relating to this entity note
type NoteResourceObjectLinks struct {
	// Self Link to this entity note
	Self *string `json:"self,omitempty"`
}

// OidAttributes The type-specific properties of the OID object returned
type OidAttributes struct {
	// Oid OID identifier
	Oid string `json:"oid"`

	// OidName OID name
	OidName *string `json:"oidName,omitempty"`

	// Value OID value
	Value *float32 `json:"value,omitempty"`
}

// OidRelationships This OID's relationships to other resources
type OidRelationships struct {
	// Device This OID's device
	Device *OidRelationshipsDevice `json:"device,omitempty"`

	// Tenant This entity's owning tenant
	Tenant *Tenant `json:"tenant,omitempty"`
}

// OidRelationshipsDevice This OID's device
type OidRelationshipsDevice struct {
	// Data A device resource object
	Data *OidRelationshipsDeviceData `json:"data,omitempty"`
}

// OidRelationshipsDeviceData A device resource object
type OidRelationshipsDeviceData struct {
	// DeviceName The name of the device
	DeviceName *string `json:"deviceName,omitempty"`

	// DeviceType The type of the device
	DeviceType *string `json:"deviceType,omitempty"`

	// Id This device's ID
	Id *string `json:"id,omitempty"`

	// Links Links relating to this device
	Links *InterfaceRelationshipsParentDeviceDataLinks `json:"links,omitempty"`

	// Type The type of the object
	Type *OidRelationshipsDeviceDataType `json:"type,omitempty"`
}

// OidRelationshipsDeviceDataType The type of the object
type OidRelationshipsDeviceDataType string

// ReportPeriod Reporting period for the returned statistics
type ReportPeriod struct {
	// FromTime Start timestamp for the statistics query
	FromTime *string `json:"fromTime,omitempty"`

	// ThruTime End timestamp for the statistics query
	ThruTime *string `json:"thruTime,omitempty"`
}

// ServiceStatisticsAttributes The type-specific properties of the statistics object returned
type ServiceStatisticsAttributes struct {
	// Endpoints Endpoints checked by a cloud ping check service
	Endpoints *[]EndpointStats `json:"endpoints,omitempty"`

	// Interval The reporting interval for the statistics
	Interval Interval `json:"interval"`

	// ReportPeriod Reporting period for the returned statistics
	ReportPeriod ReportPeriod `json:"reportPeriod"`

	// StatType The type of statistic that was returned
	StatType *StatType `json:"statType,omitempty"`
}

// ServiceStatisticsRead Root level object per the json-api spec
type ServiceStatisticsRead struct {
	// Data Service statistics resource object
	Data *ServiceStatisticsResourceObject `json:"data,omitempty"`
}

// ServiceStatisticsRelationships Service statistics object's relationships to other resources
type ServiceStatisticsRelationships struct {
	// Service This service the statistics are reported against
	Service *ServiceStatisticsRelationshipsService `json:"service,omitempty"`

	// Tenant This entity's owning tenant
	Tenant *Tenant `json:"tenant,omitempty"`
}

// ServiceStatisticsRelationshipsService This service the statistics are reported against
type ServiceStatisticsRelationshipsService struct {
	// Data A service resource object
	Data *ServiceStatisticsRelationshipsServiceData `json:"data,omitempty"`
}

// ServiceStatisticsRelationshipsServiceData A service resource object
type ServiceStatisticsRelationshipsServiceData struct {
	// Attributes The type-specific properties of the service
	Attributes *ServiceStatisticsRelationshipsServiceDataAttributes `json:"attributes,omitempty"`

	// Links Links relating to this service
	Links *ServiceStatisticsRelationshipsServiceDataLinks `json:"links,omitempty"`

	// Type The entity type for a service
	Type *string `json:"type,omitempty"`
}

// ServiceStatisticsRelationshipsServiceDataAttributes The type-specific properties of the service
type ServiceStatisticsRelationshipsServiceDataAttributes struct {
	// ServiceName A description of the service
	ServiceName *string `json:"serviceName,omitempty"`
}

// ServiceStatisticsRelationshipsServiceDataLinks Links relating to this service
type ServiceStatisticsRelationshipsServiceDataLinks struct {
	// Dashboard Link to this service's dashboard in Auvik
	Dashboard *string `json:"dashboard,omitempty"`
}

// ServiceStatisticsResourceObject Service statistics resource object
type ServiceStatisticsResourceObject struct {
	// Attributes The type-specific properties of the statistics object returned
	Attributes *ServiceStatisticsAttributes `json:"attributes,omitempty"`

	// Id ID for this statistic
	Id *string `json:"id,omitempty"`

	// Links Links relating to the service statistics
	Links *ServiceStatisticsResourceObjectLinks `json:"links,omitempty"`

	// Relationships Service statistics object's relationships to other resources
	Relationships *ServiceStatisticsRelationships `json:"relationships,omitempty"`

	// Type The type of this resource object
	Type *ServiceStatisticsResourceObjectType `json:"type,omitempty"`
}

// ServiceStatisticsResourceObjectType The type of this resource object
type ServiceStatisticsResourceObjectType string

// ServiceStatisticsResourceObjectLinks Links relating to the service statistics
type ServiceStatisticsResourceObjectLinks struct {
	// Dashboard Link to this service's record in the Service Info API
	Dashboard *string `json:"dashboard,omitempty"`

	// Self Link used to get this result set
	Self *string `json:"self,omitempty"`
}

// SnmpPollerIntHistoryAttributes The type-specific properties of the SNMP Poller Setting's history object returned
type SnmpPollerIntHistoryAttributes struct {
	// Interval Statistics reporting interval
	Interval *SnmpPollerIntHistoryAttributesInterval `json:"interval,omitempty"`

	// ReportPeriod Reporting period for the returned historical values
	ReportPeriod *SnmpPollerStringHistoryAttributesReportPeriod `json:"reportPeriod,omitempty"`

	// Stats The list of historical values reported for the String SNMP Poller Setting
	Stats *[]StatItem2 `json:"stats,omitempty"`
}

// SnmpPollerIntHistoryAttributesInterval Statistics reporting interval
type SnmpPollerIntHistoryAttributesInterval string

// SnmpPollerIntHistoryRead Root level object per the json-api spec
type SnmpPollerIntHistoryRead struct {
	Data *[]SnmpPollerIntHistoryResourceObject `json:"data,omitempty"`

	// Links Pagination related links
	Links *SnmpPollerIntHistoryReadLinks `json:"links,omitempty"`
}

// SnmpPollerIntHistoryReadLinks Pagination related links
type SnmpPollerIntHistoryReadLinks struct {
	// First First page in the data set
	First *string `json:"first,omitempty"`

	// Last Last page in the data set
	Last *string `json:"last,omitempty"`

	// Next Next page in the data set
	Next *string `json:"next,omitempty"`

	// Prev Previous page in the data set
	Prev *string `json:"prev,omitempty"`
}

// SnmpPollerIntHistoryRelationships This history of SNMP Poller Setting's values relationships to other resources
type SnmpPollerIntHistoryRelationships struct {
	// Device The template for a resource object representing a device
	Device *Device `json:"device,omitempty"`

	// SnmpPollerSetting The template for a resource object representing an Auvik SNMP Poller Setting
	SnmpPollerSetting *SnmpPollerSettingReduced `json:"snmpPollerSetting,omitempty"`

	// Tenant This entity's owning tenant
	Tenant *TenantReduced `json:"tenant,omitempty"`
}

// SnmpPollerIntHistoryResourceObject The template for a resource object representing the history of a Integer SNMP Poller Setting's values
type SnmpPollerIntHistoryResourceObject struct {
	// Attributes The type-specific properties of the SNMP Poller Setting's history object returned
	Attributes *SnmpPollerIntHistoryAttributes `json:"attributes,omitempty"`

	// Id The unique identifier for a set of history SNMP Poller Setting's values
	Id *string `json:"id,omitempty"`

	// Relationships This history of SNMP Poller Setting's values relationships to other resources
	Relationships *SnmpPollerIntHistoryRelationships `json:"relationships,omitempty"`

	// Type The type of object in the API
	Type *string `json:"type,omitempty"`
}

// SnmpPollerSetting The template for a resource object representing an Auvik SNMP Poller Setting
type SnmpPollerSetting struct {
	// Data The type-specific properties of the SNMP Poller's object returned
	Data *SnmpPollerSettingData `json:"data,omitempty"`
}

// SnmpPollerSettingAttributes The type-specific properties of the SNMP Poller Settings object returned
type SnmpPollerSettingAttributes struct {
	// Name SNMP Poller Setting name
	Name *string `json:"name,omitempty"`

	// Oid OID identifier
	Oid *string `json:"oid,omitempty"`

	// Protocol Protocol
	Protocol *string `json:"protocol,omitempty"`

	// Type SNMP Poller Setting type
	Type *string `json:"type,omitempty"`

	// UseAs Underlying use of this poller (serialNo, poller)
	UseAs *string `json:"useAs,omitempty"`
}

// SnmpPollerSettingDeviceAttributes The type-specific properties of the Device object returned
type SnmpPollerSettingDeviceAttributes struct {
	// Name Device name
	Name *string `json:"name,omitempty"`

	// Type Device type
	Type *string `json:"type,omitempty"`
}

// SnmpPollerSettingDeviceRelationships This device's relationships to other resources
type SnmpPollerSettingDeviceRelationships struct {
	// SnmpPollerSetting The template for a resource object representing an Auvik SNMP Poller Setting
	SnmpPollerSetting *SnmpPollerSetting `json:"snmpPollerSetting,omitempty"`

	// Tenant This entity's owning tenant
	Tenant *Tenant `json:"tenant,omitempty"`
}

// SnmpPollerSettingDeviceResourceObject The template for a resource object representing an Auvik Device for a specific SNMP Poller setting
type SnmpPollerSettingDeviceResourceObject struct {
	// Attributes The type-specific properties of the Device object returned
	Attributes *SnmpPollerSettingDeviceAttributes `json:"attributes,omitempty"`

	// Id The unique identifier for a device
	Id *string `json:"id,omitempty"`

	// Links List of links relating to this OID
	Links *SnmpPollerSettingDeviceResourceObjectLinks `json:"links,omitempty"`

	// Relationships This device's relationships to other resources
	Relationships *SnmpPollerSettingDeviceRelationships `json:"relationships,omitempty"`

	// Type The type of object in the API
	Type *string `json:"type,omitempty"`
}

// SnmpPollerSettingDeviceResourceObjectLinks List of links relating to this OID
type SnmpPollerSettingDeviceResourceObjectLinks struct {
	// Dashboard Link to this Device's dashboard in Auvik
	Dashboard *string `json:"dashboard,omitempty"`

	// Self Link to this OID
	Self *string `json:"self,omitempty"`
}

// SnmpPollerSettingDevicesRead Root level object per the json-api spec
type SnmpPollerSettingDevicesRead struct {
	Data *[]SnmpPollerSettingDeviceResourceObject `json:"data,omitempty"`

	// Links Pagination related links
	Links *SnmpPollerSettingDevicesReadLinks `json:"links,omitempty"`
}

// SnmpPollerSettingDevicesReadLinks Pagination related links
type SnmpPollerSettingDevicesReadLinks struct {
	// First First page in the data set
	First *string `json:"first,omitempty"`

	// Last Last page in the data set
	Last *string `json:"last,omitempty"`

	// Next Next page in the data set
	Next *string `json:"next,omitempty"`

	// Prev Previous page in the data set
	Prev *string `json:"prev,omitempty"`
}

// SnmpPollerSettingReduced The template for a resource object representing an Auvik SNMP Poller Setting
type SnmpPollerSettingReduced struct {
	// Data The type-specific properties of the SNMP Poller's object returned
	Data *SnmpPollerSettingReducedData `json:"data,omitempty"`
}

// SnmpPollerSettingReducedData The type-specific properties of the SNMP Poller's object returned
type SnmpPollerSettingReducedData struct {
	// Id The unique identifier for a SNMP Poller Setting
	Id *string `json:"id,omitempty"`

	// Links List of links relating to this OID
	Links *DeviceOidMonitorResourceObjectLinks `json:"links,omitempty"`

	// Type The type of object in the API.
	Type *string `json:"type,omitempty"`
}

// SnmpPollerSettingRelationships This SNMP Poller Setting's relationships to other resources
type SnmpPollerSettingRelationships struct {
	// Tenant This entity's owning tenant
	Tenant *Tenant `json:"tenant,omitempty"`
}

// SnmpPollerSettingSingleRead Root level object per the json-api spec
type SnmpPollerSettingSingleRead struct {
	// Data The template for a resource object representing an Auvik SNMP Poller Setting
	Data *SnmpPollerSettingSingleResourceObject `json:"data,omitempty"`
}

// SnmpPollerSettingSingleResourceObject The template for a resource object representing an Auvik SNMP Poller Setting
type SnmpPollerSettingSingleResourceObject struct {
	// Attributes The type-specific properties of the SNMP Poller Settings object returned
	Attributes *SnmpPollerSettingAttributes `json:"attributes,omitempty"`

	// Id The unique identifier for a SNMP Poller Setting
	Id *string `json:"id,omitempty"`

	// Relationships This SNMP Poller Setting's relationships to other resources
	Relationships *SnmpPollerSettingRelationships `json:"relationships,omitempty"`

	// Type The type of object in the API
	Type *string `json:"type,omitempty"`
}

// SnmpPollerSettingData The type-specific properties of the SNMP Poller's object returned
type SnmpPollerSettingData struct {
	// Attributes The type-specific properties of the tenant object returned
	Attributes *SnmpPollerSettingDataAttributes `json:"attributes,omitempty"`

	// Id The unique identifier for a SNMP Poller Setting
	Id *string `json:"id,omitempty"`

	// Links List of links relating to this OID
	Links *DeviceOidMonitorResourceObjectLinks `json:"links,omitempty"`

	// Type The type of object in the API.
	Type *string `json:"type,omitempty"`
}

// SnmpPollerSettingDataAttributes The type-specific properties of the tenant object returned
type SnmpPollerSettingDataAttributes struct {
	// Name SNMP Poller Setting name
	Name *string `json:"name,omitempty"`

	// Oid OID identifier
	Oid *string `json:"oid,omitempty"`

	// Protocol Protocol
	Protocol *SnmpPollerSettingDataAttributesProtocol `json:"protocol,omitempty"`

	// Type SNMP Poller Setting type
	Type *string `json:"type,omitempty"`

	// UseAs Underlying use of this poller (serialNo, poller)
	UseAs *string `json:"useAs,omitempty"`
}

// SnmpPollerSettingDataAttributesProtocol Protocol
type SnmpPollerSettingDataAttributesProtocol string

// SnmpPollerSettingsRead Root level object per the json-api spec
type SnmpPollerSettingsRead struct {
	Data *[]SnmpPollerSettingsResourceObject `json:"data,omitempty"`

	// Links Pagination related links
	Links *SnmpPollerSettingsReadLinks `json:"links,omitempty"`
}

// SnmpPollerSettingsReadLinks Pagination related links
type SnmpPollerSettingsReadLinks struct {
	// First First page in the data set
	First *string `json:"first,omitempty"`

	// Last Last page in the data set
	Last *string `json:"last,omitempty"`

	// Next Next page in the data set
	Next *string `json:"next,omitempty"`

	// Prev Previous page in the data set
	Prev *string `json:"prev,omitempty"`
}

// SnmpPollerSettingsResourceObject The template for a resource object representing an Auvik SNMP Poller Setting
type SnmpPollerSettingsResourceObject struct {
	// Attributes The type-specific properties of the SNMP Poller Settings object returned
	Attributes *SnmpPollerSettingAttributes `json:"attributes,omitempty"`

	// Id The unique identifier for an OID
	Id *string `json:"id,omitempty"`

	// Links List of links relating to this OID
	Links *DeviceOidMonitorResourceObjectLinks `json:"links,omitempty"`

	// Relationships This SNMP Poller Setting's relationships to other resources
	Relationships *SnmpPollerSettingRelationships `json:"relationships,omitempty"`

	// Type The type of object in the API
	Type *string `json:"type,omitempty"`
}

// SnmpPollerStringHistoryAttributes The type-specific properties of the SNMP Poller Setting's history object returned
type SnmpPollerStringHistoryAttributes struct {
	// ReportPeriod Reporting period for the returned historical values
	ReportPeriod *SnmpPollerStringHistoryAttributesReportPeriod `json:"reportPeriod,omitempty"`

	// Stats The list of historical values reported for the String SNMP Poller Setting
	Stats *[]StatItem2 `json:"stats,omitempty"`
}

// SnmpPollerStringHistoryAttributesReportPeriod Reporting period for the returned historical values
type SnmpPollerStringHistoryAttributesReportPeriod struct {
	// FromTime Start timestamp for the query
	FromTime *string `json:"fromTime,omitempty"`

	// ThruTime End timestamp for the query
	ThruTime *string `json:"thruTime,omitempty"`
}

// SnmpPollerStringHistoryRead Root level object per the json-api spec
type SnmpPollerStringHistoryRead struct {
	Data *[]SnmpPollerStringHistoryResourceObject `json:"data,omitempty"`

	// Links Pagination related links
	Links *SnmpPollerStringHistoryReadLinks `json:"links,omitempty"`
}

// SnmpPollerStringHistoryReadLinks Pagination related links
type SnmpPollerStringHistoryReadLinks struct {
	// First First page in the data set
	First *string `json:"first,omitempty"`

	// Last Last page in the data set
	Last *string `json:"last,omitempty"`

	// Next Next page in the data set
	Next *string `json:"next,omitempty"`

	// Prev Previous page in the data set
	Prev *string `json:"prev,omitempty"`
}

// SnmpPollerStringHistoryRelationships This history of SNMP Poller Setting's values relationships to other resources
type SnmpPollerStringHistoryRelationships struct {
	// Device The template for a resource object representing a device
	Device *Device `json:"device,omitempty"`

	// SnmpPollerSetting The template for a resource object representing an Auvik SNMP Poller Setting
	SnmpPollerSetting *SnmpPollerSettingReduced `json:"snmpPollerSetting,omitempty"`

	// Tenant This entity's owning tenant
	Tenant *TenantReduced `json:"tenant,omitempty"`
}

// SnmpPollerStringHistoryResourceObject The template for a resource object representing the history of a String SNMP Poller Setting's values
type SnmpPollerStringHistoryResourceObject struct {
	// Attributes The type-specific properties of the SNMP Poller Setting's history object returned
	Attributes *SnmpPollerStringHistoryAttributes `json:"attributes,omitempty"`

	// Id The unique identifier for a set of history SNMP Poller Setting's values
	Id *string `json:"id,omitempty"`

	// Relationships This history of SNMP Poller Setting's values relationships to other resources
	Relationships *SnmpPollerStringHistoryRelationships `json:"relationships,omitempty"`

	// Type The type of object in the API
	Type *string `json:"type,omitempty"`
}

// Stack defines model for stack.
type Stack struct {
	Attributes *struct {
		// DeviceName Device's name
		DeviceName string `json:"deviceName"`

		// DeviceType What type of device it is
		DeviceType StackAttributesDeviceType `json:"deviceType"`

		// LastModified When one of this device's attributes was last modified
		LastModified *string `json:"lastModified,omitempty"`

		// LastSeenTime Last seen online date/time of a device
		LastSeenTime *string `json:"lastSeenTime,omitempty"`
	} `json:"attributes,omitempty"`

	// Id The unique identifier for a device
	Id *string `json:"id,omitempty"`

	// Links List of links relating to this device
	Links         *DeviceExtendedDetailsDeviceLinks `json:"links,omitempty"`
	Relationships *struct {
		// DeviceDetail Additional attributes and details relating to this device
		DeviceDetail *DeviceRelationshipsDeviceDetail `json:"deviceDetail,omitempty"`

		// Members Members of this stack
		Members *[]struct {
			// Attributes Details about this stack member
			Attributes *struct {
				// HardwarePriority Hardware priority of this stack.
				HardwarePriority string `json:"hardwarePriority"`

				// MacAddress The member's MAC address
				MacAddress string `json:"macAddress"`

				// MakeModel The member's make and model
				MakeModel string `json:"makeModel"`

				// MemberName The member's name
				MemberName string `json:"memberName"`

				// MemberNumber The member's number in the stack
				MemberNumber string `json:"memberNumber"`

				// MemberRole The member's role
				MemberRole StackRelationshipsMembersAttributesMemberRole `json:"memberRole"`

				// MemberStatus The member's status
				MemberStatus StackRelationshipsMembersAttributesMemberStatus `json:"memberStatus"`

				// SerialNumber The member's serial number
				SerialNumber string `json:"serialNumber"`

				// SoftwarePriority Software priority of this stack.
				SoftwarePriority string `json:"softwarePriority"`

				// SoftwareRevision Software revision/version of this stack member
				SoftwareRevision string `json:"softwareRevision"`
			} `json:"attributes,omitempty"`

			// Id Device ID of this stack member
			Id *string `json:"id,omitempty"`

			// Links List of links relating to this stack member
			Links *struct {
				// Info Link to this stack member's device info
				Info *string `json:"info,omitempty"`

				// Self Link to this stack member's extended details
				Self *string `json:"self,omitempty"`
			} `json:"links,omitempty"`

			// Type Resource type of this stack member
			Type *string `json:"type,omitempty"`
		} `json:"members,omitempty"`

		// Networks This device's networks
		Networks *DeviceRelationshipsNetworks `json:"networks,omitempty"`

		// Tenant This entity's owning tenant
		Tenant *Tenant `json:"tenant,omitempty"`
	} `json:"relationships,omitempty"`

	// Type The type of object in the API
	Type *StackType `json:"type,omitempty"`
}

// StackAttributesDeviceType What type of device it is
type StackAttributesDeviceType string

// StackRelationshipsMembersAttributesMemberRole The member's role
type StackRelationshipsMembersAttributesMemberRole string

// StackRelationshipsMembersAttributesMemberStatus The member's status
type StackRelationshipsMembersAttributesMemberStatus string

// StackType The type of object in the API
type StackType string

// StatItem defines model for statItem.
type StatItem struct {
	// Data An list of rows of statistics data, as described by the legend
	Data *[][]float32 `json:"data,omitempty"`

	// Index Index for multi-part statistics
	Index *string `json:"index,omitempty"`

	// Legend A description of the stats data columns
	Legend *[]string `json:"legend,omitempty"`

	// Name Name of the statistic
	Name *string `json:"name,omitempty"`

	// Unit Unit type for each stats data column
	Unit *[]string `json:"unit,omitempty"`
}

// StatItem2 defines model for statItem_2.
type StatItem2 struct {
	// Data A list of rows of historical values, as described by the legend
	Data *[][]StatItem2_Data_Item `json:"data,omitempty"`

	// Legend A description of the stats data columns
	Legend *[]string `json:"legend,omitempty"`
}

// StatItem2Data0 defines model for .
type StatItem2Data0 = string

// StatItem2Data1 defines model for .
type StatItem2Data1 = float32

// StatItem2_Data_Item An individual data point
type StatItem2_Data_Item struct {
	union json.RawMessage
}

// StatType The type of statistic that was returned
type StatType = string

// StatisticsAttributes The type-specific properties of the statistics object returned
type StatisticsAttributes struct {
	// Interval The reporting interval for the statistics
	Interval *Interval `json:"interval,omitempty"`

	// ReportPeriod Reporting period for the returned statistics
	ReportPeriod *ReportPeriod `json:"reportPeriod,omitempty"`

	// StatType The type of statistic that was returned
	StatType *StatType `json:"statType,omitempty"`

	// Stats The list of statistics reported for the entity
	Stats *[]StatItem `json:"stats,omitempty"`
}

// Tenant This entity's owning tenant
type Tenant struct {
	// Data The template for a resource object representing an Auvik tenant
	Data *TenantData `json:"data,omitempty"`
}

// TenantAttributes The type specific properties of the tenants object returned
type TenantAttributes struct {
	// DomainPrefix The domain prefix of the tenant
	DomainPrefix string `json:"domainPrefix"`

	// TenantType The type of tenant in Auvik. A finite list of enumerated string values
	TenantType TenantAttributesTenantType `json:"tenantType"`
}

// TenantAttributesTenantType The type of tenant in Auvik. A finite list of enumerated string values
type TenantAttributesTenantType string

// TenantDetailAttributes The type specific properties of the tenants object returned
type TenantDetailAttributes struct {
	// Address Address of the tenant
	Address *TenantDetailAttributesAddress `json:"address,omitempty"`

	// DisplayName Display name used within Auvik
	DisplayName *string `json:"displayName,omitempty"`

	// DomainPrefix The domain prefix of the tenant
	DomainPrefix string `json:"domainPrefix"`

	// Enabled Whether or not the tenant is enabled
	Enabled bool `json:"enabled"`

	// Running Whether or not the tenant is running
	Running bool `json:"running"`

	// Subscribed Whether or not the tenant is subscribed
	Subscribed bool `json:"subscribed"`

	// SubscriptionOwner The owner who subscribes the tenant
	SubscriptionOwner string `json:"subscriptionOwner"`

	// TenantType The type of tenant in Auvik. A finite list of enumerated string values
	TenantType TenantDetailAttributesTenantType `json:"tenantType"`

	// TrialEndDate Start date of trial
	TrialEndDate *string `json:"trialEndDate,omitempty"`

	// TrialStartDate Start date of trial
	TrialStartDate *string `json:"trialStartDate,omitempty"`
}

// TenantDetailAttributesTenantType The type of tenant in Auvik. A finite list of enumerated string values
type TenantDetailAttributesTenantType string

// TenantDetailAttributesAddress Address of the tenant
type TenantDetailAttributesAddress struct {
	// StateProvince State or region tenant is located in
	// Deprecated:
	StateProvince *string `json:"State/Province,omitempty"`

	// ZIPPostalCode Zip code or postal code of tenant's mailing address
	// Deprecated:
	ZIPPostalCode *string `json:"ZIP/PostalCode,omitempty"`

	// Address1 Tenant's mailing address
	Address1 *string `json:"address1,omitempty"`

	// Address2 Additional address information
	Address2 *string `json:"address2,omitempty"`

	// City City tenant is located in
	City *string `json:"city,omitempty"`

	// Country Country tenant is located in
	Country *string `json:"country,omitempty"`

	// PostalCode Zip code or postal code of tenant's mailing address
	PostalCode *string `json:"postalCode,omitempty"`

	// State State or region tenant is located in
	State *string `json:"state,omitempty"`
}

// TenantDetailResourceObject The template for a resource object representing an Auvik legacy tenant
type TenantDetailResourceObject struct {
	// Attributes The type specific properties of the tenants object returned
	Attributes *TenantDetailAttributes `json:"attributes,omitempty"`

	// Id The unique identifier for a tenant
	Id *string `json:"id,omitempty"`

	// Relationships The type specific relationship of the legacy tenants object to other entities
	Relationships *TenantDetailResourceObjectRelationships `json:"relationships,omitempty"`

	// Type The type of object in the API.
	Type *TenantDetailResourceObjectType `json:"type,omitempty"`
}

// TenantDetailResourceObjectType The type of object in the API.
type TenantDetailResourceObjectType string

// TenantDetailResourceObjectRelationships The type specific relationship of the legacy tenants object to other entities
type TenantDetailResourceObjectRelationships struct {
	// Authorizations The The authorization container object of the tenant selected
	Authorizations *TenantDetailResourceObjectRelationshipsAuthorizations `json:"authorizations,omitempty"`

	// Parent The parent tenant container object of the tenant selected
	Parent *TenantDetailResourceObjectRelationshipsParent `json:"parent,omitempty"`
}

// TenantDetailResourceObjectRelationshipsAuthorizations The The authorization container object of the tenant selected
type TenantDetailResourceObjectRelationshipsAuthorizations struct {
	// Data The list of authorization to the tenant selected
	Data *[]TenantDetailResourceObjectRelationshipsAuthorizationsData `json:"data"`
}

// TenantDetailResourceObjectRelationshipsAuthorizationsData defines model for tenantDetailResourceObject_relationships_authorizations_data.
type TenantDetailResourceObjectRelationshipsAuthorizationsData struct {
	// Id The id is granted for authorization
	Id *string `json:"id,omitempty"`

	// Type The type of authorizations
	Type *TenantDetailResourceObjectRelationshipsAuthorizationsDataType `json:"type,omitempty"`
}

// TenantDetailResourceObjectRelationshipsAuthorizationsDataType The type of authorizations
type TenantDetailResourceObjectRelationshipsAuthorizationsDataType string

// TenantDetailResourceObjectRelationshipsParent The parent tenant container object of the tenant selected
type TenantDetailResourceObjectRelationshipsParent struct {
	// Data The parent tenant data object of the tenant selected
	Data *TenantDetailResourceObjectRelationshipsParentData `json:"data,omitempty"`
}

// TenantDetailResourceObjectRelationshipsParentData The parent tenant data object of the tenant selected
type TenantDetailResourceObjectRelationshipsParentData struct {
	// Id The unique identifier for a tenant
	Id *string `json:"id,omitempty"`

	// Type The type of object in the API.
	Type *TenantDetailResourceObjectRelationshipsParentDataType `json:"type,omitempty"`
}

// TenantDetailResourceObjectRelationshipsParentDataType The type of object in the API.
type TenantDetailResourceObjectRelationshipsParentDataType string

// TenantReduced This entity's owning tenant
type TenantReduced struct {
	// Data The template for a resource object representing an Auvik tenant
	Data *TenantReducedData `json:"data,omitempty"`
}

// TenantReducedData The template for a resource object representing an Auvik tenant
type TenantReducedData struct {
	// Id The unique identifier for a tenant
	Id *string `json:"id,omitempty"`

	// Type The type of object in the API.
	Type *string `json:"type,omitempty"`
}

// TenantData The template for a resource object representing an Auvik tenant
type TenantData struct {
	// Attributes The type-specific properties of the tenant object returned
	Attributes *TenantDataAttributes `json:"attributes,omitempty"`

	// Id The unique identifier for a tenant
	Id *string `json:"id,omitempty"`

	// Type The type of object in the API.
	Type *string `json:"type,omitempty"`
}

// TenantDataAttributes The type-specific properties of the tenant object returned
type TenantDataAttributes struct {
	// DomainPrefix The domain prefix of the tenant
	DomainPrefix string `json:"domainPrefix"`
}

// TenantsDetailReadMultiple root level object per the json-api spec
type TenantsDetailReadMultiple struct {
	// Data An array of resource objects, an array of resource identifier objects, or an empty array ([]), for requests that target resource collections.
	Data *[]TenantDetailResourceObject `json:"data"`
}

// TenantsDetailReadSingle root level object per the json-api spec
type TenantsDetailReadSingle struct {
	// Data The template for a resource object representing an Auvik legacy tenant
	Data *TenantDetailResourceObject `json:"data,omitempty"`
}

// TenantsResourceObject The template for a resource object representing an Auvik tenant
type TenantsResourceObject struct {
	// Attributes The type specific properties of the tenants object returned
	Attributes *TenantAttributes `json:"attributes,omitempty"`

	// Id The unique identifier for a tenant
	Id *string `json:"id,omitempty"`

	// Relationships The type specific relationship of the tenants object to other entities
	Relationships *TenantsResourceObjectRelationships `json:"relationships,omitempty"`

	// Type The type of object in the API.
	Type *TenantsResourceObjectType `json:"type,omitempty"`
}

// TenantsResourceObjectType The type of object in the API.
type TenantsResourceObjectType string

// TenantsResourceObjectRelationships The type specific relationship of the tenants object to other entities
type TenantsResourceObjectRelationships struct {
	// Parent The parent tenant container object of the tenant selected
	Parent *TenantsResourceObjectRelationshipsParent `json:"parent,omitempty"`
}

// TenantsResourceObjectRelationshipsParent The parent tenant container object of the tenant selected
type TenantsResourceObjectRelationshipsParent struct {
	// Data The parent tenant data object of the tenant selected
	Data *TenantsResourceObjectRelationshipsParentData `json:"data,omitempty"`
}

// TenantsResourceObjectRelationshipsParentData The parent tenant data object of the tenant selected
type TenantsResourceObjectRelationshipsParentData struct {
	// Id The unique identifier for a tenant
	Id *string `json:"id,omitempty"`

	// Type The type of object in the API.
	Type *TenantsResourceObjectRelationshipsParentDataType `json:"type,omitempty"`
}

// TenantsResourceObjectRelationshipsParentDataType The type of object in the API.
type TenantsResourceObjectRelationshipsParentDataType string

// UserTenantsReadMultiple root level object per the json-api spec
type UserTenantsReadMultiple struct {
	// Data An array of resource objects, an array of resource identifier objects, or an empty array ([]), for requests that target resource collections.
	Data *[]TenantsResourceObject `json:"data,omitempty"`
}

// ReadMultipleAlertInfoParams defines parameters for ReadMultipleAlertInfo.
type ReadMultipleAlertInfoParams struct {
	// FilterAlertDefinitionId Filter by alert definition ID.
	FilterAlertDefinitionId *string `form:"filter[alertDefinitionId],omitempty" json:"filter[alertDefinitionId],omitempty"`

	// FilterAlertSpecificationId Filter by alert specification ID. Use 'alertDefinitionId' instead
	FilterAlertSpecificationId *string `form:"filter[alertSpecificationId],omitempty" json:"filter[alertSpecificationId],omitempty"`

	// FilterSeverity Filter by alert severity.
	FilterSeverity *ReadMultipleAlertInfoParamsFilterSeverity `form:"filter[severity],omitempty" json:"filter[severity],omitempty"`

	// FilterStatus Filter by the status of the alert.
	FilterStatus *ReadMultipleAlertInfoParamsFilterStatus `form:"filter[status],omitempty" json:"filter[status],omitempty"`

	// FilterEntityId Filter by the related entity ID.
	FilterEntityId *string `form:"filter[entityId],omitempty" json:"filter[entityId],omitempty"`

	// FilterDismissed Filter by the dismissed status.
	FilterDismissed *bool `form:"filter[dismissed],omitempty" json:"filter[dismissed],omitempty"`

	// FilterDispatched Filter by dispatched status.
	FilterDispatched *bool `form:"filter[dispatched],omitempty" json:"filter[dispatched],omitempty"`

	// FilterDetectedTimeAfter Filter by the time which is greater than the given timestamp.
	FilterDetectedTimeAfter *bool `form:"filter[detectedTimeAfter],omitempty" json:"filter[detectedTimeAfter],omitempty"`

	// FilterDetectedTimeBefore Filter by the time which is less than or equal to the given timestamp.
	FilterDetectedTimeBefore *bool `form:"filter[detectedTimeBefore],omitempty" json:"filter[detectedTimeBefore],omitempty"`

	// Tenants Comma delimited list of tenant IDs to request info from.
	Tenants *string `form:"tenants,omitempty" json:"tenants,omitempty"`

	// PageFirst For paginated responses, the first N elements will be returned. Used in combination with <code>page[after]</code>.
	PageFirst *float32 `form:"page[first],omitempty" json:"page[first],omitempty"`

	// PageAfter Cursor after which elements will be returned as a page. The page size is provided by <code>page[first]</code>.
	PageAfter *string `form:"page[after],omitempty" json:"page[after],omitempty"`

	// PageLast For paginated responses, the last N services will be returned. Used in combination with <code>page[before]</code>.
	PageLast *float32 `form:"page[last],omitempty" json:"page[last],omitempty"`

	// PageBefore Cursor before which elements will be returned as a page. The page size is provided by <code>page[last]</code>.
	PageBefore *string `form:"page[before],omitempty" json:"page[before],omitempty"`
}

// ReadMultipleAlertInfoParamsFilterSeverity defines parameters for ReadMultipleAlertInfo.
type ReadMultipleAlertInfoParamsFilterSeverity string

// ReadMultipleAlertInfoParamsFilterStatus defines parameters for ReadMultipleAlertInfo.
type ReadMultipleAlertInfoParamsFilterStatus string

// ReadClientUsageParams defines parameters for ReadClientUsage.
type ReadClientUsageParams struct {
	// FilterFromDate Date from which you want to query
	FilterFromDate string `form:"filter[fromDate]" json:"filter[fromDate]"`

	// FilterThruDate Date to which you want to query
	FilterThruDate string `form:"filter[thruDate]" json:"filter[thruDate]"`

	// Tenants Comma delimited list of tenant IDs to request info from.
	Tenants *string `form:"tenants,omitempty" json:"tenants,omitempty"`
}

// ReadDeviceUsageParams defines parameters for ReadDeviceUsage.
type ReadDeviceUsageParams struct {
	// FilterFromDate Date from which you want to query
	FilterFromDate string `form:"filter[fromDate]" json:"filter[fromDate]"`

	// FilterThruDate Date to which you want to query
	FilterThruDate string `form:"filter[thruDate]" json:"filter[thruDate]"`
}

// ReadMultipleComponentInfoParams defines parameters for ReadMultipleComponentInfo.
type ReadMultipleComponentInfoParams struct {
	// FilterModifiedAfter Filter by date and time, only returning entities modified after provided value.
	FilterModifiedAfter *string `form:"filter[modifiedAfter],omitempty" json:"filter[modifiedAfter],omitempty"`

	// FilterDeviceId Filter by the component’s parent device’s ID.
	FilterDeviceId *string `form:"filter[deviceId],omitempty" json:"filter[deviceId],omitempty"`

	// FilterDeviceName Filter by the component’s parent device’s name.
	FilterDeviceName *string `form:"filter[deviceName],omitempty" json:"filter[deviceName],omitempty"`

	// FilterCurrentStatus Filter by the component’s current status.
	FilterCurrentStatus *ReadMultipleComponentInfoParamsFilterCurrentStatus `form:"filter[currentStatus],omitempty" json:"filter[currentStatus],omitempty"`

	// Tenants Comma delimited list of tenant IDs to request info from.
	Tenants *string `form:"tenants,omitempty" json:"tenants,omitempty"`

	// PageFirst For paginated responses, the first N elements will be returned. Used in combination with <code>page[after]</code>.
	PageFirst *float32 `form:"page[first],omitempty" json:"page[first],omitempty"`

	// PageAfter Cursor after which elements will be returned as a page. The page size is provided by <code>page[first]</code>.
	PageAfter *string `form:"page[after],omitempty" json:"page[after],omitempty"`

	// PageLast For paginated responses, the last N services will be returned. Used in combination with <code>page[before]</code>.
	PageLast *float32 `form:"page[last],omitempty" json:"page[last],omitempty"`

	// PageBefore Cursor before which elements will be returned as a page. The page size is provided by <code>page[last]</code>.
	PageBefore *string `form:"page[before],omitempty" json:"page[before],omitempty"`
}

// ReadMultipleComponentInfoParamsFilterCurrentStatus defines parameters for ReadMultipleComponentInfo.
type ReadMultipleComponentInfoParamsFilterCurrentStatus string

// ReadMultipleConfigurationsParams defines parameters for ReadMultipleConfigurations.
type ReadMultipleConfigurationsParams struct {
	// FilterDeviceId Filter by device ID
	FilterDeviceId *string `form:"filter[deviceId],omitempty" json:"filter[deviceId],omitempty"`

	// FilterBackupTimeAfter Filter by date and time, filtering out configurations backed up before value.
	FilterBackupTimeAfter *string `form:"filter[backupTimeAfter],omitempty" json:"filter[backupTimeAfter],omitempty"`

	// FilterBackupTimeBefore Filter by date and time, filtering out configurations backed up after value.
	FilterBackupTimeBefore *string `form:"filter[backupTimeBefore],omitempty" json:"filter[backupTimeBefore],omitempty"`

	// FilterIsRunning Filter for configurations that are currently running, or filter for all configurations which are not currently running.
	FilterIsRunning *bool `form:"filter[isRunning],omitempty" json:"filter[isRunning],omitempty"`

	// Tenants Comma delimited list of tenant IDs to request info from.
	Tenants *string `form:"tenants,omitempty" json:"tenants,omitempty"`

	// PageFirst For paginated responses, the first N elements will be returned. Used in combination with <code>page[after]</code>.
	PageFirst *float32 `form:"page[first],omitempty" json:"page[first],omitempty"`

	// PageAfter Cursor after which elements will be returned as a page. The page size is provided by <code>page[first]</code>.
	PageAfter *string `form:"page[after],omitempty" json:"page[after],omitempty"`

	// PageLast For paginated responses, the last N services will be returned. Used in combination with <code>page[before]</code>.
	PageLast *float32 `form:"page[last],omitempty" json:"page[last],omitempty"`

	// PageBefore Cursor before which elements will be returned as a page. The page size is provided by <code>page[last]</code>.
	PageBefore *string `form:"page[before],omitempty" json:"page[before],omitempty"`
}

// ReadMultipleDeviceDetailsParams defines parameters for ReadMultipleDeviceDetails.
type ReadMultipleDeviceDetailsParams struct {
	// FilterManageStatus Filter by managed status
	FilterManageStatus *bool `form:"filter[manageStatus],omitempty" json:"filter[manageStatus],omitempty"`

	// FilterDiscoverySNMP Filter by the device’s SNMP discovery status.
	FilterDiscoverySNMP *ReadMultipleDeviceDetailsParamsFilterDiscoverySNMP `form:"filter[discoverySNMP],omitempty" json:"filter[discoverySNMP],omitempty"`

	// FilterDiscoveryWMI Filter by the device’s WMI discovery status.
	FilterDiscoveryWMI *ReadMultipleDeviceDetailsParamsFilterDiscoveryWMI `form:"filter[discoveryWMI],omitempty" json:"filter[discoveryWMI],omitempty"`

	// FilterDiscoveryLogin Filter by the device’s Login discovery status.
	FilterDiscoveryLogin *ReadMultipleDeviceDetailsParamsFilterDiscoveryLogin `form:"filter[discoveryLogin],omitempty" json:"filter[discoveryLogin],omitempty"`

	// FilterDiscoveryVMware Filter by the device’s VMware discovery status.
	FilterDiscoveryVMware *ReadMultipleDeviceDetailsParamsFilterDiscoveryVMware `form:"filter[discoveryVMware],omitempty" json:"filter[discoveryVMware],omitempty"`

	// FilterTrafficInsightsStatus Filter by the device’s TrafficInsights status.
	FilterTrafficInsightsStatus *ReadMultipleDeviceDetailsParamsFilterTrafficInsightsStatus `form:"filter[trafficInsightsStatus],omitempty" json:"filter[trafficInsightsStatus],omitempty"`

	// Tenants Comma delimited list of tenant IDs to request info from.
	Tenants *string `form:"tenants,omitempty" json:"tenants,omitempty"`

	// PageFirst For paginated responses, the first N elements will be returned. Used in combination with <code>page[after]</code>.
	PageFirst *float32 `form:"page[first],omitempty" json:"page[first],omitempty"`

	// PageAfter Cursor after which elements will be returned as a page. The page size is provided by <code>page[first]</code>.
	PageAfter *string `form:"page[after],omitempty" json:"page[after],omitempty"`

	// PageLast For paginated responses, the last N services will be returned. Used in combination with <code>page[before]</code>.
	PageLast *float32 `form:"page[last],omitempty" json:"page[last],omitempty"`

	// PageBefore Cursor before which elements will be returned as a page. The page size is provided by <code>page[last]</code>.
	PageBefore *string `form:"page[before],omitempty" json:"page[before],omitempty"`
}

// ReadMultipleDeviceDetailsParamsFilterDiscoverySNMP defines parameters for ReadMultipleDeviceDetails.
type ReadMultipleDeviceDetailsParamsFilterDiscoverySNMP string

// ReadMultipleDeviceDetailsParamsFilterDiscoveryWMI defines parameters for ReadMultipleDeviceDetails.
type ReadMultipleDeviceDetailsParamsFilterDiscoveryWMI string

// ReadMultipleDeviceDetailsParamsFilterDiscoveryLogin defines parameters for ReadMultipleDeviceDetails.
type ReadMultipleDeviceDetailsParamsFilterDiscoveryLogin string

// ReadMultipleDeviceDetailsParamsFilterDiscoveryVMware defines parameters for ReadMultipleDeviceDetails.
type ReadMultipleDeviceDetailsParamsFilterDiscoveryVMware string

// ReadMultipleDeviceDetailsParamsFilterTrafficInsightsStatus defines parameters for ReadMultipleDeviceDetails.
type ReadMultipleDeviceDetailsParamsFilterTrafficInsightsStatus string

// ReadMultipleDeviceExtendedDetailParams defines parameters for ReadMultipleDeviceExtendedDetail.
type ReadMultipleDeviceExtendedDetailParams struct {
	// FilterDeviceType Filter by device type.
	FilterDeviceType DeviceTypeSchema `form:"filter[deviceType]" json:"filter[deviceType]"`

	// FilterModifiedAfter Filter by date and time, only returning entities modified after provided value.
	FilterModifiedAfter *string `form:"filter[modifiedAfter],omitempty" json:"filter[modifiedAfter],omitempty"`

	// FilterNotSeenSince Filter by the last seen online time, returning entities not seen online after the provided value.
	FilterNotSeenSince *string `form:"filter[notSeenSince],omitempty" json:"filter[notSeenSince],omitempty"`

	// Tenants Comma delimited list of tenant IDs to request info from.
	Tenants *string `form:"tenants,omitempty" json:"tenants,omitempty"`

	// PageFirst For paginated responses, the first N elements will be returned. Used in combination with <code>page[after]</code>.
	PageFirst *float32 `form:"page[first],omitempty" json:"page[first],omitempty"`

	// PageAfter Cursor after which elements will be returned as a page. The page size is provided by <code>page[first]</code>.
	PageAfter *string `form:"page[after],omitempty" json:"page[after],omitempty"`

	// PageLast For paginated responses, the last N services will be returned. Used in combination with <code>page[before]</code>.
	PageLast *float32 `form:"page[last],omitempty" json:"page[last],omitempty"`

	// PageBefore Cursor before which elements will be returned as a page. The page size is provided by <code>page[last]</code>.
	PageBefore *string `form:"page[before],omitempty" json:"page[before],omitempty"`
}

// ReadMultipleDeviceInfoParams defines parameters for ReadMultipleDeviceInfo.
type ReadMultipleDeviceInfoParams struct {
	// FilterNetworks Filter by IDs of networks this device is on.
	FilterNetworks *string `form:"filter[networks],omitempty" json:"filter[networks],omitempty"`

	// FilterDeviceType Filter by device type.
	FilterDeviceType *DeviceTypeSchema `form:"filter[deviceType],omitempty" json:"filter[deviceType],omitempty"`

	// FilterMakeModel Filter by the device’s make and model.
	FilterMakeModel *string `form:"filter[makeModel],omitempty" json:"filter[makeModel],omitempty"`

	// FilterVendorName Filter by the device’s vendor/manufacturer.
	FilterVendorName *string `form:"filter[vendorName],omitempty" json:"filter[vendorName],omitempty"`

	// FilterOnlineStatus Filter by the device’s online status.
	FilterOnlineStatus *ReadMultipleDeviceInfoParamsFilterOnlineStatus `form:"filter[onlineStatus],omitempty" json:"filter[onlineStatus],omitempty"`

	// FilterModifiedAfter Filter by date and time, only returning entities modified after provided value.
	FilterModifiedAfter *string `form:"filter[modifiedAfter],omitempty" json:"filter[modifiedAfter],omitempty"`

	// FilterNotSeenSince Filter by the last seen online time, returning entities not seen online after the provided value.
	FilterNotSeenSince *string `form:"filter[notSeenSince],omitempty" json:"filter[notSeenSince],omitempty"`

	// Tenants Comma delimited list of tenant IDs to request info from.
	Tenants *string `form:"tenants,omitempty" json:"tenants,omitempty"`

	// PageFirst For paginated responses, the first N elements will be returned. Used in combination with <code>page[after]</code>.
	PageFirst *float32 `form:"page[first],omitempty" json:"page[first],omitempty"`

	// PageAfter Cursor after which elements will be returned as a page. The page size is provided by <code>page[first]</code>.
	PageAfter *string `form:"page[after],omitempty" json:"page[after],omitempty"`

	// PageLast For paginated responses, the last N services will be returned. Used in combination with <code>page[before]</code>.
	PageLast *float32 `form:"page[last],omitempty" json:"page[last],omitempty"`

	// PageBefore Cursor before which elements will be returned as a page. The page size is provided by <code>page[last]</code>.
	PageBefore *string `form:"page[before],omitempty" json:"page[before],omitempty"`

	// Include Use to include the full resource objects of the list device relationships.
	Include *ReadMultipleDeviceInfoParamsInclude `form:"include,omitempty" json:"include,omitempty"`

	// FieldsDeviceDetail Use to limit the attributes that will be returned in the included detail object to only what is specified by this query parameter. Requires <code>include=deviceDetail</code>
	FieldsDeviceDetail *ReadMultipleDeviceInfoParamsFieldsDeviceDetail `form:"fields[deviceDetail],omitempty" json:"fields[deviceDetail],omitempty"`
}

// ReadMultipleDeviceInfoParamsFilterOnlineStatus defines parameters for ReadMultipleDeviceInfo.
type ReadMultipleDeviceInfoParamsFilterOnlineStatus string

// ReadMultipleDeviceInfoParamsInclude defines parameters for ReadMultipleDeviceInfo.
type ReadMultipleDeviceInfoParamsInclude string

// ReadMultipleDeviceInfoParamsFieldsDeviceDetail defines parameters for ReadMultipleDeviceInfo.
type ReadMultipleDeviceInfoParamsFieldsDeviceDetail string

// ReadSingleDeviceInfoParams defines parameters for ReadSingleDeviceInfo.
type ReadSingleDeviceInfoParams struct {
	// Include Use to include the full resource objects of the list device relationships.
	Include *ReadSingleDeviceInfoParamsInclude `form:"include,omitempty" json:"include,omitempty"`

	// FieldsDeviceDetail Use to limit the attributes that will be returned in the included detail object to only what is specified by this query parameter. Requires <code>include=deviceDetail</code>
	FieldsDeviceDetail *ReadSingleDeviceInfoParamsFieldsDeviceDetail `form:"fields[deviceDetail],omitempty" json:"fields[deviceDetail],omitempty"`
}

// ReadSingleDeviceInfoParamsInclude defines parameters for ReadSingleDeviceInfo.
type ReadSingleDeviceInfoParamsInclude string

// ReadSingleDeviceInfoParamsFieldsDeviceDetail defines parameters for ReadSingleDeviceInfo.
type ReadSingleDeviceInfoParamsFieldsDeviceDetail string

// ReadMultipleDeviceLifecycleParams defines parameters for ReadMultipleDeviceLifecycle.
type ReadMultipleDeviceLifecycleParams struct {
	// FilterSalesAvailability Filter by sales availability.
	FilterSalesAvailability *ReadMultipleDeviceLifecycleParamsFilterSalesAvailability `form:"filter[salesAvailability],omitempty" json:"filter[salesAvailability],omitempty"`

	// FilterSoftwareMaintenanceStatus Filter by software maintenance status.
	FilterSoftwareMaintenanceStatus *ReadMultipleDeviceLifecycleParamsFilterSoftwareMaintenanceStatus `form:"filter[softwareMaintenanceStatus],omitempty" json:"filter[softwareMaintenanceStatus],omitempty"`

	// FilterSecuritySoftwareMaintenanceStatus Filter by security software maintenance status.
	FilterSecuritySoftwareMaintenanceStatus *ReadMultipleDeviceLifecycleParamsFilterSecuritySoftwareMaintenanceStatus `form:"filter[securitySoftwareMaintenanceStatus],omitempty" json:"filter[securitySoftwareMaintenanceStatus],omitempty"`

	// FilterLastSupportStatus Filter by last support status.
	FilterLastSupportStatus *ReadMultipleDeviceLifecycleParamsFilterLastSupportStatus `form:"filter[lastSupportStatus],omitempty" json:"filter[lastSupportStatus],omitempty"`

	// Tenants Comma delimited list of tenant IDs to request info from.
	Tenants *string `form:"tenants,omitempty" json:"tenants,omitempty"`

	// PageFirst For paginated responses, the first N elements will be returned. Used in combination with <code>page[after]</code>.
	PageFirst *float32 `form:"page[first],omitempty" json:"page[first],omitempty"`

	// PageAfter Cursor after which elements will be returned as a page. The page size is provided by <code>page[first]</code>.
	PageAfter *string `form:"page[after],omitempty" json:"page[after],omitempty"`

	// PageLast For paginated responses, the last N services will be returned. Used in combination with <code>page[before]</code>.
	PageLast *float32 `form:"page[last],omitempty" json:"page[last],omitempty"`

	// PageBefore Cursor before which elements will be returned as a page. The page size is provided by <code>page[last]</code>.
	PageBefore *string `form:"page[before],omitempty" json:"page[before],omitempty"`
}

// ReadMultipleDeviceLifecycleParamsFilterSalesAvailability defines parameters for ReadMultipleDeviceLifecycle.
type ReadMultipleDeviceLifecycleParamsFilterSalesAvailability string

// ReadMultipleDeviceLifecycleParamsFilterSoftwareMaintenanceStatus defines parameters for ReadMultipleDeviceLifecycle.
type ReadMultipleDeviceLifecycleParamsFilterSoftwareMaintenanceStatus string

// ReadMultipleDeviceLifecycleParamsFilterSecuritySoftwareMaintenanceStatus defines parameters for ReadMultipleDeviceLifecycle.
type ReadMultipleDeviceLifecycleParamsFilterSecuritySoftwareMaintenanceStatus string

// ReadMultipleDeviceLifecycleParamsFilterLastSupportStatus defines parameters for ReadMultipleDeviceLifecycle.
type ReadMultipleDeviceLifecycleParamsFilterLastSupportStatus string

// ReadMultipleDeviceWarrantyParams defines parameters for ReadMultipleDeviceWarranty.
type ReadMultipleDeviceWarrantyParams struct {
	// FilterCoveredUnderWarranty Filter by warranty coverage status.
	FilterCoveredUnderWarranty *bool `form:"filter[coveredUnderWarranty],omitempty" json:"filter[coveredUnderWarranty],omitempty"`

	// FilterCoveredUnderService Filter by service coverage status.
	FilterCoveredUnderService *bool `form:"filter[coveredUnderService],omitempty" json:"filter[coveredUnderService],omitempty"`

	// Tenants Comma delimited list of tenant IDs to request info from.
	Tenants *string `form:"tenants,omitempty" json:"tenants,omitempty"`

	// PageFirst For paginated responses, the first N elements will be returned. Used in combination with <code>page[after]</code>.
	PageFirst *float32 `form:"page[first],omitempty" json:"page[first],omitempty"`

	// PageAfter Cursor after which elements will be returned as a page. The page size is provided by <code>page[first]</code>.
	PageAfter *string `form:"page[after],omitempty" json:"page[after],omitempty"`

	// PageLast For paginated responses, the last N services will be returned. Used in combination with <code>page[before]</code>.
	PageLast *float32 `form:"page[last],omitempty" json:"page[last],omitempty"`

	// PageBefore Cursor before which elements will be returned as a page. The page size is provided by <code>page[last]</code>.
	PageBefore *string `form:"page[before],omitempty" json:"page[before],omitempty"`
}

// ReadMultipleEntityAuditParams defines parameters for ReadMultipleEntityAudit.
type ReadMultipleEntityAuditParams struct {
	// FilterUser Filter by user name associated to the audit.
	FilterUser *string `form:"filter[user],omitempty" json:"filter[user],omitempty"`

	// FilterCategory Filter by the audit’s category.
	FilterCategory *ReadMultipleEntityAuditParamsFilterCategory `form:"filter[category],omitempty" json:"filter[category],omitempty"`

	// FilterStatus Filter by the audit’s status.
	FilterStatus *ReadMultipleEntityAuditParamsFilterStatus `form:"filter[status],omitempty" json:"filter[status],omitempty"`

	// FilterModifiedAfter Filter by date and time, only returning entities modified after provided value.
	FilterModifiedAfter *string `form:"filter[modifiedAfter],omitempty" json:"filter[modifiedAfter],omitempty"`

	// Tenants Comma delimited list of tenant IDs to request info from.
	Tenants *string `form:"tenants,omitempty" json:"tenants,omitempty"`

	// PageFirst For paginated responses, the first N elements will be returned. Used in combination with <code>page[after]</code>.
	PageFirst *float32 `form:"page[first],omitempty" json:"page[first],omitempty"`

	// PageAfter Cursor after which elements will be returned as a page. The page size is provided by <code>page[first]</code>.
	PageAfter *string `form:"page[after],omitempty" json:"page[after],omitempty"`

	// PageLast For paginated responses, the last N services will be returned. Used in combination with <code>page[before]</code>.
	PageLast *float32 `form:"page[last],omitempty" json:"page[last],omitempty"`

	// PageBefore Cursor before which elements will be returned as a page. The page size is provided by <code>page[last]</code>.
	PageBefore *string `form:"page[before],omitempty" json:"page[before],omitempty"`
}

// ReadMultipleEntityAuditParamsFilterCategory defines parameters for ReadMultipleEntityAudit.
type ReadMultipleEntityAuditParamsFilterCategory string

// ReadMultipleEntityAuditParamsFilterStatus defines parameters for ReadMultipleEntityAudit.
type ReadMultipleEntityAuditParamsFilterStatus string

// ReadMultipleEntityNoteParams defines parameters for ReadMultipleEntityNote.
type ReadMultipleEntityNoteParams struct {
	// FilterEntityId Filter by the entity’s ID.
	FilterEntityId *string `form:"filter[entityId],omitempty" json:"filter[entityId],omitempty"`

	// FilterEntityType Filter by the entity’s type.
	FilterEntityType *ReadMultipleEntityNoteParamsFilterEntityType `form:"filter[entityType],omitempty" json:"filter[entityType],omitempty"`

	// FilterEntityName Filter by the entity’s name.
	FilterEntityName *string `form:"filter[entityName],omitempty" json:"filter[entityName],omitempty"`

	// FilterLastModifiedBy Filter by the user the note was last modified by.
	FilterLastModifiedBy *string `form:"filter[lastModifiedBy],omitempty" json:"filter[lastModifiedBy],omitempty"`

	// FilterModifiedAfter Filter by date and time, only returning entities modified after provided value.
	FilterModifiedAfter *string `form:"filter[modifiedAfter],omitempty" json:"filter[modifiedAfter],omitempty"`

	// Tenants Comma delimited list of tenant IDs to request info from.
	Tenants *string `form:"tenants,omitempty" json:"tenants,omitempty"`

	// PageFirst For paginated responses, the first N elements will be returned. Used in combination with <code>page[after]</code>.
	PageFirst *float32 `form:"page[first],omitempty" json:"page[first],omitempty"`

	// PageAfter Cursor after which elements will be returned as a page. The page size is provided by <code>page[first]</code>.
	PageAfter *string `form:"page[after],omitempty" json:"page[after],omitempty"`

	// PageLast For paginated responses, the last N services will be returned. Used in combination with <code>page[before]</code>.
	PageLast *float32 `form:"page[last],omitempty" json:"page[last],omitempty"`

	// PageBefore Cursor before which elements will be returned as a page. The page size is provided by <code>page[last]</code>.
	PageBefore *string `form:"page[before],omitempty" json:"page[before],omitempty"`
}

// ReadMultipleEntityNoteParamsFilterEntityType defines parameters for ReadMultipleEntityNote.
type ReadMultipleEntityNoteParamsFilterEntityType string

// ReadMultipleInterfaceInfoParams defines parameters for ReadMultipleInterfaceInfo.
type ReadMultipleInterfaceInfoParams struct {
	// FilterInterfaceType Filter by interface type.
	FilterInterfaceType *ReadMultipleInterfaceInfoParamsFilterInterfaceType `form:"filter[interfaceType],omitempty" json:"filter[interfaceType],omitempty"`

	// FilterParentDevice Filter by the entity's parent device ID.
	FilterParentDevice *string `form:"filter[parentDevice],omitempty" json:"filter[parentDevice],omitempty"`

	// FilterAdminStatus Filter by the interface’s admin status.
	FilterAdminStatus *bool `form:"filter[adminStatus],omitempty" json:"filter[adminStatus],omitempty"`

	// FilterOperationalStatus Filter by the interface’s operational status.
	FilterOperationalStatus *ReadMultipleInterfaceInfoParamsFilterOperationalStatus `form:"filter[operationalStatus],omitempty" json:"filter[operationalStatus],omitempty"`

	// FilterModifiedAfter Filter by date and time, only returning entities modified after provided value.
	FilterModifiedAfter *string `form:"filter[modifiedAfter],omitempty" json:"filter[modifiedAfter],omitempty"`

	// Tenants Comma delimited list of tenant IDs to request info from.
	Tenants *string `form:"tenants,omitempty" json:"tenants,omitempty"`

	// PageFirst For paginated responses, the first N elements will be returned. Used in combination with <code>page[after]</code>.
	PageFirst *float32 `form:"page[first],omitempty" json:"page[first],omitempty"`

	// PageAfter Cursor after which elements will be returned as a page. The page size is provided by <code>page[first]</code>.
	PageAfter *string `form:"page[after],omitempty" json:"page[after],omitempty"`

	// PageLast For paginated responses, the last N services will be returned. Used in combination with <code>page[before]</code>.
	PageLast *float32 `form:"page[last],omitempty" json:"page[last],omitempty"`

	// PageBefore Cursor before which elements will be returned as a page. The page size is provided by <code>page[last]</code>.
	PageBefore *string `form:"page[before],omitempty" json:"page[before],omitempty"`
}

// ReadMultipleInterfaceInfoParamsFilterInterfaceType defines parameters for ReadMultipleInterfaceInfo.
type ReadMultipleInterfaceInfoParamsFilterInterfaceType string

// ReadMultipleInterfaceInfoParamsFilterOperationalStatus defines parameters for ReadMultipleInterfaceInfo.
type ReadMultipleInterfaceInfoParamsFilterOperationalStatus string

// ReadMultipleNetworkDetailsParams defines parameters for ReadMultipleNetworkDetails.
type ReadMultipleNetworkDetailsParams struct {
	// FilterNetworkType Filter by network type.
	FilterNetworkType *ReadMultipleNetworkDetailsParamsFilterNetworkType `form:"filter[networkType],omitempty" json:"filter[networkType],omitempty"`

	// FilterScanStatus Filter by the network’s scan status.
	FilterScanStatus *ReadMultipleNetworkDetailsParamsFilterScanStatus `form:"filter[scanStatus],omitempty" json:"filter[scanStatus],omitempty"`

	// FilterDevices Filter by IDs of devices on this network. Filter by multiple values by providing a comma delimited list.
	FilterDevices *string `form:"filter[devices],omitempty" json:"filter[devices],omitempty"`

	// FilterModifiedAfter Filter by date and time, only returning entities modified after provided value.
	FilterModifiedAfter *string `form:"filter[modifiedAfter],omitempty" json:"filter[modifiedAfter],omitempty"`

	// FilterScope Filter by the network’s scope
	FilterScope *ReadMultipleNetworkDetailsParamsFilterScope `form:"filter[scope],omitempty" json:"filter[scope],omitempty"`

	// Tenants Comma delimited list of tenant IDs to request info from.
	Tenants *string `form:"tenants,omitempty" json:"tenants,omitempty"`

	// PageFirst For paginated responses, the first N elements will be returned. Used in combination with <code>page[after]</code>.
	PageFirst *float32 `form:"page[first],omitempty" json:"page[first],omitempty"`

	// PageAfter Cursor after which elements will be returned as a page. The page size is provided by <code>page[first]</code>.
	PageAfter *string `form:"page[after],omitempty" json:"page[after],omitempty"`

	// PageLast For paginated responses, the last N services will be returned. Used in combination with <code>page[before]</code>.
	PageLast *float32 `form:"page[last],omitempty" json:"page[last],omitempty"`

	// PageBefore Cursor before which elements will be returned as a page. The page size is provided by <code>page[last]</code>.
	PageBefore *string `form:"page[before],omitempty" json:"page[before],omitempty"`
}

// ReadMultipleNetworkDetailsParamsFilterNetworkType defines parameters for ReadMultipleNetworkDetails.
type ReadMultipleNetworkDetailsParamsFilterNetworkType string

// ReadMultipleNetworkDetailsParamsFilterScanStatus defines parameters for ReadMultipleNetworkDetails.
type ReadMultipleNetworkDetailsParamsFilterScanStatus string

// ReadMultipleNetworkDetailsParamsFilterScope defines parameters for ReadMultipleNetworkDetails.
type ReadMultipleNetworkDetailsParamsFilterScope string

// ReadMultipleNetworkInfoParams defines parameters for ReadMultipleNetworkInfo.
type ReadMultipleNetworkInfoParams struct {
	// FilterNetworkType Filter by network type.
	FilterNetworkType *ReadMultipleNetworkInfoParamsFilterNetworkType `form:"filter[networkType],omitempty" json:"filter[networkType],omitempty"`

	// FilterScanStatus Filter by the network’s scan status.
	FilterScanStatus *ReadMultipleNetworkInfoParamsFilterScanStatus `form:"filter[scanStatus],omitempty" json:"filter[scanStatus],omitempty"`

	// FilterDevices Filter by IDs of devices on this network. Filter by multiple values by providing a comma delimited list.
	FilterDevices *string `form:"filter[devices],omitempty" json:"filter[devices],omitempty"`

	// FilterModifiedAfter Filter by date and time, only returning entities modified after provided value.
	FilterModifiedAfter *string `form:"filter[modifiedAfter],omitempty" json:"filter[modifiedAfter],omitempty"`

	// Tenants Comma delimited list of tenant IDs to request info from.
	Tenants *string `form:"tenants,omitempty" json:"tenants,omitempty"`

	// PageFirst For paginated responses, the first N elements will be returned. Used in combination with <code>page[after]</code>.
	PageFirst *float32 `form:"page[first],omitempty" json:"page[first],omitempty"`

	// PageAfter Cursor after which elements will be returned as a page. The page size is provided by <code>page[first]</code>.
	PageAfter *string `form:"page[after],omitempty" json:"page[after],omitempty"`

	// PageLast For paginated responses, the last N services will be returned. Used in combination with <code>page[before]</code>.
	PageLast *float32 `form:"page[last],omitempty" json:"page[last],omitempty"`

	// PageBefore Cursor before which elements will be returned as a page. The page size is provided by <code>page[last]</code>.
	PageBefore *string `form:"page[before],omitempty" json:"page[before],omitempty"`

	// Include Use to include the full resource objects of any of the network’s relationships.
	Include *ReadMultipleNetworkInfoParamsInclude `form:"include,omitempty" json:"include,omitempty"`

	// FieldsNetworkDetail Use to limit the attributes that will be returned in the included detail object to only what is specified by this query parameter. Requires <code>include=networkDetail</code>
	FieldsNetworkDetail *ReadMultipleNetworkInfoParamsFieldsNetworkDetail `form:"fields[networkDetail],omitempty" json:"fields[networkDetail],omitempty"`
}

// ReadMultipleNetworkInfoParamsFilterNetworkType defines parameters for ReadMultipleNetworkInfo.
type ReadMultipleNetworkInfoParamsFilterNetworkType string

// ReadMultipleNetworkInfoParamsFilterScanStatus defines parameters for ReadMultipleNetworkInfo.
type ReadMultipleNetworkInfoParamsFilterScanStatus string

// ReadMultipleNetworkInfoParamsInclude defines parameters for ReadMultipleNetworkInfo.
type ReadMultipleNetworkInfoParamsInclude string

// ReadMultipleNetworkInfoParamsFieldsNetworkDetail defines parameters for ReadMultipleNetworkInfo.
type ReadMultipleNetworkInfoParamsFieldsNetworkDetail string

// ReadSingleNetworkInfoParams defines parameters for ReadSingleNetworkInfo.
type ReadSingleNetworkInfoParams struct {
	// Include Use to include the full resource objects of any of the network’s relationships.
	Include *ReadSingleNetworkInfoParamsInclude `form:"include,omitempty" json:"include,omitempty"`

	// FieldsNetworkDetail Use to limit the attributes that will be returned in the included detail object to only what is specified by this query parameter. Requires <code>include=networkDetail</code>
	FieldsNetworkDetail *ReadSingleNetworkInfoParamsFieldsNetworkDetail `form:"fields[networkDetail],omitempty" json:"fields[networkDetail],omitempty"`
}

// ReadSingleNetworkInfoParamsInclude defines parameters for ReadSingleNetworkInfo.
type ReadSingleNetworkInfoParamsInclude string

// ReadSingleNetworkInfoParamsFieldsNetworkDetail defines parameters for ReadSingleNetworkInfo.
type ReadSingleNetworkInfoParamsFieldsNetworkDetail string

// ReadMultipleSnmpPollerSettingsParams defines parameters for ReadMultipleSnmpPollerSettings.
type ReadMultipleSnmpPollerSettingsParams struct {
	// Tenants Comma delimited list of tenant IDs to request info from.
	Tenants string `form:"tenants" json:"tenants"`

	// FilterDeviceId Filter by device ID
	FilterDeviceId *string `form:"filter[deviceId],omitempty" json:"filter[deviceId],omitempty"`

	// FilterUseAs Filter by oid type
	FilterUseAs *ReadMultipleSnmpPollerSettingsParamsFilterUseAs `form:"filter[useAs],omitempty" json:"filter[useAs],omitempty"`

	// FilterDeviceType Filter by device type.
	FilterDeviceType *DeviceTypeSchema `form:"filter[deviceType],omitempty" json:"filter[deviceType],omitempty"`

	// FilterMakeModel Filter by the device’s make and model.
	FilterMakeModel *string `form:"filter[makeModel],omitempty" json:"filter[makeModel],omitempty"`

	// FilterVendorName Filter by the device’s vendor/manufacturer.
	FilterVendorName *string `form:"filter[vendorName],omitempty" json:"filter[vendorName],omitempty"`

	// FilterOid Filter by OID
	FilterOid *string `form:"filter[oid],omitempty" json:"filter[oid],omitempty"`

	// FilterName Filter by the name of the SNMP poller setting
	FilterName *string `form:"filter[name],omitempty" json:"filter[name],omitempty"`

	// PageFirst For paginated responses, the first N elements will be returned. Used in combination with <code>page[after]</code>.
	PageFirst *float32 `form:"page[first],omitempty" json:"page[first],omitempty"`

	// PageAfter Cursor after which elements will be returned as a page. The page size is provided by <code>page[first]</code>.
	PageAfter *string `form:"page[after],omitempty" json:"page[after],omitempty"`

	// PageLast For paginated responses, the last N services will be returned. Used in combination with <code>page[before]</code>.
	PageLast *float32 `form:"page[last],omitempty" json:"page[last],omitempty"`

	// PageBefore Cursor before which elements will be returned as a page. The page size is provided by <code>page[last]</code>.
	PageBefore *string `form:"page[before],omitempty" json:"page[before],omitempty"`
}

// ReadMultipleSnmpPollerSettingsParamsFilterUseAs defines parameters for ReadMultipleSnmpPollerSettings.
type ReadMultipleSnmpPollerSettingsParamsFilterUseAs string

// ReadMultipleSnmpPollerSettingDevicesParams defines parameters for ReadMultipleSnmpPollerSettingDevices.
type ReadMultipleSnmpPollerSettingDevicesParams struct {
	// Tenants Comma delimited list of tenant IDs to request info from.
	Tenants string `form:"tenants" json:"tenants"`

	// FilterOnlineStatus Filter by the device’s online status.
	FilterOnlineStatus *ReadMultipleSnmpPollerSettingDevicesParamsFilterOnlineStatus `form:"filter[onlineStatus],omitempty" json:"filter[onlineStatus],omitempty"`

	// FilterModifiedAfter Filter by date and time, only returning entities modified after provided value.
	FilterModifiedAfter *string `form:"filter[modifiedAfter],omitempty" json:"filter[modifiedAfter],omitempty"`

	// FilterNotSeenSince Filter by the last seen online time, returning entities not seen online after the provided value.
	FilterNotSeenSince *string `form:"filter[notSeenSince],omitempty" json:"filter[notSeenSince],omitempty"`

	// FilterDeviceType Filter by device type.
	FilterDeviceType *DeviceTypeSchema `form:"filter[deviceType],omitempty" json:"filter[deviceType],omitempty"`

	// FilterMakeModel Filter by the device’s make and model.
	FilterMakeModel *string `form:"filter[makeModel],omitempty" json:"filter[makeModel],omitempty"`

	// FilterVendorName Filter by the device’s vendor/manufacturer.
	FilterVendorName *string `form:"filter[vendorName],omitempty" json:"filter[vendorName],omitempty"`

	// PageFirst For paginated responses, the first N elements will be returned. Used in combination with <code>page[after]</code>.
	PageFirst *float32 `form:"page[first],omitempty" json:"page[first],omitempty"`

	// PageAfter Cursor after which elements will be returned as a page. The page size is provided by <code>page[first]</code>.
	PageAfter *string `form:"page[after],omitempty" json:"page[after],omitempty"`

	// PageLast For paginated responses, the last N services will be returned. Used in combination with <code>page[before]</code>.
	PageLast *float32 `form:"page[last],omitempty" json:"page[last],omitempty"`

	// PageBefore Cursor before which elements will be returned as a page. The page size is provided by <code>page[last]</code>.
	PageBefore *string `form:"page[before],omitempty" json:"page[before],omitempty"`
}

// ReadMultipleSnmpPollerSettingDevicesParamsFilterOnlineStatus defines parameters for ReadMultipleSnmpPollerSettingDevices.
type ReadMultipleSnmpPollerSettingDevicesParamsFilterOnlineStatus string

// ReadComponentStatisticsParams defines parameters for ReadComponentStatistics.
type ReadComponentStatisticsParams struct {
	// FilterFromTime Timestamp from which you want to query
	FilterFromTime string `form:"filter[fromTime]" json:"filter[fromTime]"`

	// FilterThruTime Timestamp to which you want to query (defaults to current time)
	FilterThruTime *string `form:"filter[thruTime],omitempty" json:"filter[thruTime],omitempty"`

	// FilterInterval Statistics reporting interval
	FilterInterval ReadComponentStatisticsParamsFilterInterval `form:"filter[interval]" json:"filter[interval]"`

	// FilterComponentId Filter by component ID.
	FilterComponentId *string `form:"filter[componentId],omitempty" json:"filter[componentId],omitempty"`

	// FilterParentDevice Filter by the entity's parent device ID.
	FilterParentDevice *string `form:"filter[parentDevice],omitempty" json:"filter[parentDevice],omitempty"`

	// Tenants Comma delimited list of tenant IDs to request info from.
	Tenants *string `form:"tenants,omitempty" json:"tenants,omitempty"`

	// PageFirst For paginated responses, the first N elements will be returned. Used in combination with <code>page[after]</code>.
	PageFirst *float32 `form:"page[first],omitempty" json:"page[first],omitempty"`

	// PageAfter Cursor after which elements will be returned as a page. The page size is provided by <code>page[first]</code>.
	PageAfter *string `form:"page[after],omitempty" json:"page[after],omitempty"`

	// PageLast For paginated responses, the last N services will be returned. Used in combination with <code>page[before]</code>.
	PageLast *float32 `form:"page[last],omitempty" json:"page[last],omitempty"`

	// PageBefore Cursor before which elements will be returned as a page. The page size is provided by <code>page[last]</code>.
	PageBefore *string `form:"page[before],omitempty" json:"page[before],omitempty"`
}

// ReadComponentStatisticsParamsFilterInterval defines parameters for ReadComponentStatistics.
type ReadComponentStatisticsParamsFilterInterval string

// ReadComponentStatisticsParamsComponentType defines parameters for ReadComponentStatistics.
type ReadComponentStatisticsParamsComponentType string

// ReadComponentStatisticsParamsStatId defines parameters for ReadComponentStatistics.
type ReadComponentStatisticsParamsStatId string

// ReadDeviceStatisticsParams defines parameters for ReadDeviceStatistics.
type ReadDeviceStatisticsParams struct {
	// FilterFromTime Timestamp from which you want to query
	FilterFromTime string `form:"filter[fromTime]" json:"filter[fromTime]"`

	// FilterThruTime Timestamp to which you want to query (defaults to current time)
	FilterThruTime *string `form:"filter[thruTime],omitempty" json:"filter[thruTime],omitempty"`

	// FilterInterval Statistics reporting interval
	FilterInterval ReadDeviceStatisticsParamsFilterInterval `form:"filter[interval]" json:"filter[interval]"`

	// FilterDeviceType Filter by device type.
	FilterDeviceType *DeviceTypeSchema `form:"filter[deviceType],omitempty" json:"filter[deviceType],omitempty"`

	// FilterDeviceId Filter by device ID
	FilterDeviceId *string `form:"filter[deviceId],omitempty" json:"filter[deviceId],omitempty"`

	// Tenants Comma delimited list of tenant IDs to request info from.
	Tenants *string `form:"tenants,omitempty" json:"tenants,omitempty"`

	// PageFirst For paginated responses, the first N elements will be returned. Used in combination with <code>page[after]</code>.
	PageFirst *float32 `form:"page[first],omitempty" json:"page[first],omitempty"`

	// PageAfter Cursor after which elements will be returned as a page. The page size is provided by <code>page[first]</code>.
	PageAfter *string `form:"page[after],omitempty" json:"page[after],omitempty"`

	// PageLast For paginated responses, the last N services will be returned. Used in combination with <code>page[before]</code>.
	PageLast *float32 `form:"page[last],omitempty" json:"page[last],omitempty"`

	// PageBefore Cursor before which elements will be returned as a page. The page size is provided by <code>page[last]</code>.
	PageBefore *string `form:"page[before],omitempty" json:"page[before],omitempty"`
}

// ReadDeviceStatisticsParamsFilterInterval defines parameters for ReadDeviceStatistics.
type ReadDeviceStatisticsParamsFilterInterval string

// ReadDeviceStatisticsParamsStatId defines parameters for ReadDeviceStatistics.
type ReadDeviceStatisticsParamsStatId string

// ReadDeviceAvailabilityStatisticsParams defines parameters for ReadDeviceAvailabilityStatistics.
type ReadDeviceAvailabilityStatisticsParams struct {
	// FilterFromTime Timestamp from which you want to query
	FilterFromTime string `form:"filter[fromTime]" json:"filter[fromTime]"`

	// FilterThruTime Timestamp to which you want to query (defaults to current time)
	FilterThruTime *string `form:"filter[thruTime],omitempty" json:"filter[thruTime],omitempty"`

	// FilterInterval Statistics reporting interval
	FilterInterval ReadDeviceAvailabilityStatisticsParamsFilterInterval `form:"filter[interval]" json:"filter[interval]"`

	// FilterDeviceType Filter by device type.
	FilterDeviceType *DeviceTypeSchema `form:"filter[deviceType],omitempty" json:"filter[deviceType],omitempty"`

	// FilterDeviceId Filter by device ID
	FilterDeviceId *string `form:"filter[deviceId],omitempty" json:"filter[deviceId],omitempty"`

	// Tenants Comma delimited list of tenant IDs to request info from.
	Tenants *string `form:"tenants,omitempty" json:"tenants,omitempty"`

	// PageFirst For paginated responses, the first N elements will be returned. Used in combination with <code>page[after]</code>.
	PageFirst *float32 `form:"page[first],omitempty" json:"page[first],omitempty"`

	// PageAfter Cursor after which elements will be returned as a page. The page size is provided by <code>page[first]</code>.
	PageAfter *string `form:"page[after],omitempty" json:"page[after],omitempty"`

	// PageLast For paginated responses, the last N services will be returned. Used in combination with <code>page[before]</code>.
	PageLast *float32 `form:"page[last],omitempty" json:"page[last],omitempty"`

	// PageBefore Cursor before which elements will be returned as a page. The page size is provided by <code>page[last]</code>.
	PageBefore *string `form:"page[before],omitempty" json:"page[before],omitempty"`
}

// ReadDeviceAvailabilityStatisticsParamsFilterInterval defines parameters for ReadDeviceAvailabilityStatistics.
type ReadDeviceAvailabilityStatisticsParamsFilterInterval string

// ReadDeviceAvailabilityStatisticsParamsStatId defines parameters for ReadDeviceAvailabilityStatistics.
type ReadDeviceAvailabilityStatisticsParamsStatId string

// ReadInterfaceStatisticsParams defines parameters for ReadInterfaceStatistics.
type ReadInterfaceStatisticsParams struct {
	// FilterFromTime Timestamp from which you want to query
	FilterFromTime string `form:"filter[fromTime]" json:"filter[fromTime]"`

	// FilterThruTime Timestamp to which you want to query (defaults to current time)
	FilterThruTime *string `form:"filter[thruTime],omitempty" json:"filter[thruTime],omitempty"`

	// FilterInterval Statistics reporting interval
	FilterInterval ReadInterfaceStatisticsParamsFilterInterval `form:"filter[interval]" json:"filter[interval]"`

	// FilterInterfaceType Filter by interface type.
	FilterInterfaceType *ReadInterfaceStatisticsParamsFilterInterfaceType `form:"filter[interfaceType],omitempty" json:"filter[interfaceType],omitempty"`

	// FilterInterfaceId Filter by interface ID.
	FilterInterfaceId *string `form:"filter[interfaceId],omitempty" json:"filter[interfaceId],omitempty"`

	// FilterParentDevice Filter by the entity's parent device ID.
	FilterParentDevice *string `form:"filter[parentDevice],omitempty" json:"filter[parentDevice],omitempty"`

	// Tenants Comma delimited list of tenant IDs to request info from.
	Tenants *string `form:"tenants,omitempty" json:"tenants,omitempty"`

	// PageFirst For paginated responses, the first N elements will be returned. Used in combination with <code>page[after]</code>.
	PageFirst *float32 `form:"page[first],omitempty" json:"page[first],omitempty"`

	// PageAfter Cursor after which elements will be returned as a page. The page size is provided by <code>page[first]</code>.
	PageAfter *string `form:"page[after],omitempty" json:"page[after],omitempty"`

	// PageLast For paginated responses, the last N services will be returned. Used in combination with <code>page[before]</code>.
	PageLast *float32 `form:"page[last],omitempty" json:"page[last],omitempty"`

	// PageBefore Cursor before which elements will be returned as a page. The page size is provided by <code>page[last]</code>.
	PageBefore *string `form:"page[before],omitempty" json:"page[before],omitempty"`
}

// ReadInterfaceStatisticsParamsFilterInterval defines parameters for ReadInterfaceStatistics.
type ReadInterfaceStatisticsParamsFilterInterval string

// ReadInterfaceStatisticsParamsFilterInterfaceType defines parameters for ReadInterfaceStatistics.
type ReadInterfaceStatisticsParamsFilterInterfaceType string

// ReadInterfaceStatisticsParamsStatId defines parameters for ReadInterfaceStatistics.
type ReadInterfaceStatisticsParamsStatId string

// ReadOidStatisticsParams defines parameters for ReadOidStatistics.
type ReadOidStatisticsParams struct {
	// FilterDeviceId Filter by device ID
	FilterDeviceId *string `form:"filter[deviceId],omitempty" json:"filter[deviceId],omitempty"`

	// FilterDeviceType Filter by device type.
	FilterDeviceType *DeviceTypeSchema `form:"filter[deviceType],omitempty" json:"filter[deviceType],omitempty"`

	// FilterOid Filter by OID
	FilterOid *string `form:"filter[oid],omitempty" json:"filter[oid],omitempty"`

	// Tenants Comma delimited list of tenant IDs to request info from.
	Tenants *string `form:"tenants,omitempty" json:"tenants,omitempty"`

	// PageFirst For paginated responses, the first N elements will be returned. Used in combination with <code>page[after]</code>.
	PageFirst *float32 `form:"page[first],omitempty" json:"page[first],omitempty"`

	// PageAfter Cursor after which elements will be returned as a page. The page size is provided by <code>page[first]</code>.
	PageAfter *string `form:"page[after],omitempty" json:"page[after],omitempty"`

	// PageLast For paginated responses, the last N services will be returned. Used in combination with <code>page[before]</code>.
	PageLast *float32 `form:"page[last],omitempty" json:"page[last],omitempty"`

	// PageBefore Cursor before which elements will be returned as a page. The page size is provided by <code>page[last]</code>.
	PageBefore *string `form:"page[before],omitempty" json:"page[before],omitempty"`
}

// ReadOidStatisticsParamsStatId defines parameters for ReadOidStatistics.
type ReadOidStatisticsParamsStatId string

// ReadServiceStatisticsParams defines parameters for ReadServiceStatistics.
type ReadServiceStatisticsParams struct {
	// FilterFromTime Timestamp from which you want to query
	FilterFromTime string `form:"filter[fromTime]" json:"filter[fromTime]"`

	// FilterThruTime Timestamp to which you want to query (defaults to current time)
	FilterThruTime *string `form:"filter[thruTime],omitempty" json:"filter[thruTime],omitempty"`

	// FilterInterval Statistics reporting interval
	FilterInterval ReadServiceStatisticsParamsFilterInterval `form:"filter[interval]" json:"filter[interval]"`

	// FilterServiceId Filter by service ID
	FilterServiceId *string `form:"filter[serviceId],omitempty" json:"filter[serviceId],omitempty"`

	// Tenants Comma delimited list of tenant IDs to request info from.
	Tenants *string `form:"tenants,omitempty" json:"tenants,omitempty"`

	// PageFirst For paginated responses, the first N elements will be returned. Used in combination with <code>page[after]</code>.
	PageFirst *float32 `form:"page[first],omitempty" json:"page[first],omitempty"`

	// PageAfter Cursor after which elements will be returned as a page. The page size is provided by <code>page[first]</code>.
	PageAfter *string `form:"page[after],omitempty" json:"page[after],omitempty"`

	// PageLast For paginated responses, the last N services will be returned. Used in combination with <code>page[before]</code>.
	PageLast *float32 `form:"page[last],omitempty" json:"page[last],omitempty"`

	// PageBefore Cursor before which elements will be returned as a page. The page size is provided by <code>page[last]</code>.
	PageBefore *string `form:"page[before],omitempty" json:"page[before],omitempty"`
}

// ReadServiceStatisticsParamsFilterInterval defines parameters for ReadServiceStatistics.
type ReadServiceStatisticsParamsFilterInterval string

// ReadServiceStatisticsParamsStatId defines parameters for ReadServiceStatistics.
type ReadServiceStatisticsParamsStatId string

// ReadMultipleSnmpPollerSettingIntHistoryParams defines parameters for ReadMultipleSnmpPollerSettingIntHistory.
type ReadMultipleSnmpPollerSettingIntHistoryParams struct {
	// FilterFromTime Timestamp from which you want to query
	FilterFromTime string `form:"filter[fromTime]" json:"filter[fromTime]"`

	// FilterThruTime Timestamp to which you want to query (defaults to current time)
	FilterThruTime *string `form:"filter[thruTime],omitempty" json:"filter[thruTime],omitempty"`

	// FilterInterval Statistics reporting interval
	FilterInterval ReadMultipleSnmpPollerSettingIntHistoryParamsFilterInterval `form:"filter[interval]" json:"filter[interval]"`

	// Tenants Comma delimited list of tenant IDs to request info from.
	Tenants string `form:"tenants" json:"tenants"`

	// FilterDeviceId Filter by device ID
	FilterDeviceId *string `form:"filter[deviceId],omitempty" json:"filter[deviceId],omitempty"`

	// FilterSnmpPollerSettingId Comma delimited list of SNMP poller setting IDs to request info from. Note this is internal snmpPollerSettingId. The user can get the list of IDs for a specific poller using the GET /settings/snmppoller endpoint.
	FilterSnmpPollerSettingId *string `form:"filter[snmpPollerSettingId],omitempty" json:"filter[snmpPollerSettingId],omitempty"`

	// PageFirst For paginated responses, the first N elements will be returned. Used in combination with <code>page[after]</code>.
	PageFirst *float32 `form:"page[first],omitempty" json:"page[first],omitempty"`

	// PageAfter Cursor after which elements will be returned as a page. The page size is provided by <code>page[first]</code>.
	PageAfter *string `form:"page[after],omitempty" json:"page[after],omitempty"`

	// PageLast For paginated responses, the last N services will be returned. Used in combination with <code>page[before]</code>.
	PageLast *float32 `form:"page[last],omitempty" json:"page[last],omitempty"`

	// PageBefore Cursor before which elements will be returned as a page. The page size is provided by <code>page[last]</code>.
	PageBefore *string `form:"page[before],omitempty" json:"page[before],omitempty"`
}

// ReadMultipleSnmpPollerSettingIntHistoryParamsFilterInterval defines parameters for ReadMultipleSnmpPollerSettingIntHistory.
type ReadMultipleSnmpPollerSettingIntHistoryParamsFilterInterval string

// ReadMultipleSnmpPollerSettingStringHistoryParams defines parameters for ReadMultipleSnmpPollerSettingStringHistory.
type ReadMultipleSnmpPollerSettingStringHistoryParams struct {
	// FilterFromTime Timestamp from which you want to query
	FilterFromTime string `form:"filter[fromTime]" json:"filter[fromTime]"`

	// FilterThruTime Timestamp to which you want to query (defaults to current time)
	FilterThruTime *string `form:"filter[thruTime],omitempty" json:"filter[thruTime],omitempty"`

	// FilterCompact Whether to show compact view of the results or not. Compact view only shows changes in value. If compact view is false, dateTime range can be a maximum of 24h
	FilterCompact *bool `form:"filter[compact],omitempty" json:"filter[compact],omitempty"`

	// Tenants Comma delimited list of tenant IDs to request info from.
	Tenants string `form:"tenants" json:"tenants"`

	// FilterDeviceId Filter by device ID
	FilterDeviceId *string `form:"filter[deviceId],omitempty" json:"filter[deviceId],omitempty"`

	// FilterSnmpPollerSettingId Comma delimited list of SNMP poller setting IDs to request info from. Note this is internal snmpPollerSettingId. The user can get the list of IDs for a specific poller using the GET /settings/snmppoller endpoint.
	FilterSnmpPollerSettingId *string `form:"filter[snmpPollerSettingId],omitempty" json:"filter[snmpPollerSettingId],omitempty"`

	// PageFirst For paginated responses, the first N elements will be returned. Used in combination with <code>page[after]</code>.
	PageFirst *float32 `form:"page[first],omitempty" json:"page[first],omitempty"`

	// PageAfter Cursor after which elements will be returned as a page. The page size is provided by <code>page[first]</code>.
	PageAfter *string `form:"page[after],omitempty" json:"page[after],omitempty"`

	// PageLast For paginated responses, the last N services will be returned. Used in combination with <code>page[before]</code>.
	PageLast *float32 `form:"page[last],omitempty" json:"page[last],omitempty"`

	// PageBefore Cursor before which elements will be returned as a page. The page size is provided by <code>page[last]</code>.
	PageBefore *string `form:"page[before],omitempty" json:"page[before],omitempty"`
}

// ReadMultipleTenantsDetailParams defines parameters for ReadMultipleTenantsDetail.
type ReadMultipleTenantsDetailParams struct {
	// TenantDomainPrefix Domain prefix of your main Auvik account (tenant).
	TenantDomainPrefix string `form:"tenantDomainPrefix" json:"tenantDomainPrefix"`

	// FilterAvailableTenants Filter whether or not a tenant is available, i.e. data can be gotten from them via the API.
	FilterAvailableTenants *bool `form:"filter[availableTenants],omitempty" json:"filter[availableTenants],omitempty"`
}

// ReadSingleTenantsDetailParams defines parameters for ReadSingleTenantsDetail.
type ReadSingleTenantsDetailParams struct {
	// TenantDomainPrefix Domain prefix of your main Auvik account (tenant).
	TenantDomainPrefix string `form:"tenantDomainPrefix" json:"tenantDomainPrefix"`
}

// AsStack returns the union data inside the DeviceExtendedDetailResourceObject as a Stack
func (t DeviceExtendedDetailResourceObject) AsStack() (Stack, error) {
	var body Stack
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromStack overwrites any union data inside the DeviceExtendedDetailResourceObject as the provided Stack
func (t *DeviceExtendedDetailResourceObject) FromStack(v Stack) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeStack performs a merge with any union data inside the DeviceExtendedDetailResourceObject, using the provided Stack
func (t *DeviceExtendedDetailResourceObject) MergeStack(v Stack) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

// AsHypervisor returns the union data inside the DeviceExtendedDetailResourceObject as a Hypervisor
func (t DeviceExtendedDetailResourceObject) AsHypervisor() (Hypervisor, error) {
	var body Hypervisor
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromHypervisor overwrites any union data inside the DeviceExtendedDetailResourceObject as the provided Hypervisor
func (t *DeviceExtendedDetailResourceObject) FromHypervisor(v Hypervisor) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeHypervisor performs a merge with any union data inside the DeviceExtendedDetailResourceObject, using the provided Hypervisor
func (t *DeviceExtendedDetailResourceObject) MergeHypervisor(v Hypervisor) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

// AsController returns the union data inside the DeviceExtendedDetailResourceObject as a Controller
func (t DeviceExtendedDetailResourceObject) AsController() (Controller, error) {
	var body Controller
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromController overwrites any union data inside the DeviceExtendedDetailResourceObject as the provided Controller
func (t *DeviceExtendedDetailResourceObject) FromController(v Controller) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeController performs a merge with any union data inside the DeviceExtendedDetailResourceObject, using the provided Controller
func (t *DeviceExtendedDetailResourceObject) MergeController(v Controller) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

// AsAccessPoint returns the union data inside the DeviceExtendedDetailResourceObject as a AccessPoint
func (t DeviceExtendedDetailResourceObject) AsAccessPoint() (AccessPoint, error) {
	var body AccessPoint
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromAccessPoint overwrites any union data inside the DeviceExtendedDetailResourceObject as the provided AccessPoint
func (t *DeviceExtendedDetailResourceObject) FromAccessPoint(v AccessPoint) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeAccessPoint performs a merge with any union data inside the DeviceExtendedDetailResourceObject, using the provided AccessPoint
func (t *DeviceExtendedDetailResourceObject) MergeAccessPoint(v AccessPoint) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

// AsMiscDevice returns the union data inside the DeviceExtendedDetailResourceObject as a MiscDevice
func (t DeviceExtendedDetailResourceObject) AsMiscDevice() (MiscDevice, error) {
	var body MiscDevice
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromMiscDevice overwrites any union data inside the DeviceExtendedDetailResourceObject as the provided MiscDevice
func (t *DeviceExtendedDetailResourceObject) FromMiscDevice(v MiscDevice) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeMiscDevice performs a merge with any union data inside the DeviceExtendedDetailResourceObject, using the provided MiscDevice
func (t *DeviceExtendedDetailResourceObject) MergeMiscDevice(v MiscDevice) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

func (t DeviceExtendedDetailResourceObject) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *DeviceExtendedDetailResourceObject) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsStatItem2Data0 returns the union data inside the StatItem2_Data_Item as a StatItem2Data0
func (t StatItem2_Data_Item) AsStatItem2Data0() (StatItem2Data0, error) {
	var body StatItem2Data0
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromStatItem2Data0 overwrites any union data inside the StatItem2_Data_Item as the provided StatItem2Data0
func (t *StatItem2_Data_Item) FromStatItem2Data0(v StatItem2Data0) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeStatItem2Data0 performs a merge with any union data inside the StatItem2_Data_Item, using the provided StatItem2Data0
func (t *StatItem2_Data_Item) MergeStatItem2Data0(v StatItem2Data0) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

// AsStatItem2Data1 returns the union data inside the StatItem2_Data_Item as a StatItem2Data1
func (t StatItem2_Data_Item) AsStatItem2Data1() (StatItem2Data1, error) {
	var body StatItem2Data1
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromStatItem2Data1 overwrites any union data inside the StatItem2_Data_Item as the provided StatItem2Data1
func (t *StatItem2_Data_Item) FromStatItem2Data1(v StatItem2Data1) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeStatItem2Data1 performs a merge with any union data inside the StatItem2_Data_Item, using the provided StatItem2Data1
func (t *StatItem2_Data_Item) MergeStatItem2Data1(v StatItem2Data1) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

func (t StatItem2_Data_Item) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *StatItem2_Data_Item) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}
